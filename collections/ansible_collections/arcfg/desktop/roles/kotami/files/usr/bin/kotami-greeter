#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/dmFyIF-ags.js"

cat <<EOF | base64 --decode > $file
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __knownSymbol = (name, symbol) => (symbol = Symbol[name]) ? symbol : Symbol.for("Symbol." + name);
var __typeError = (msg) => {
  throw TypeError(msg);
};
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __decoratorStart = (base) => [, , , __create(base?.[__knownSymbol("metadata")] ?? null)];
var __decoratorStrings = ["class", "method", "getter", "setter", "accessor", "field", "value", "get", "set"];
var __expectFn = (fn) => fn !== void 0 && typeof fn !== "function" ? __typeError("Function expected") : fn;
var __decoratorContext = (kind, name, done, metadata, fns) => ({ kind: __decoratorStrings[kind], name, metadata, addInitializer: (fn) => done._ ? __typeError("Already initialized") : fns.push(__expectFn(fn || null)) });
var __decoratorMetadata = (array, target) => __defNormalProp(target, __knownSymbol("metadata"), array[3]);
var __runInitializers = (array, flags, self, value) => {
  for (var i = 0, fns = array[flags >> 1], n = fns && fns.length; i < n; i++) flags & 1 ? fns[i].call(self) : value = fns[i].call(self, value);
  return value;
};
var __decorateElement = (array, flags, name, decorators, target, extra) => {
  var fn, it, done, ctx, access, k = flags & 7, s = !!(flags & 8), p = !!(flags & 16);
  var j = k > 3 ? array.length + 1 : k ? s ? 1 : 2 : 0, key = __decoratorStrings[k + 5];
  var initializers = k > 3 && (array[j - 1] = []), extraInitializers = array[j] || (array[j] = []);
  var desc = k && (!p && !s && (target = target.prototype), k < 5 && (k > 3 || !p) && __getOwnPropDesc(k < 4 ? target : { get [name]() {
    return __privateGet(this, extra);
  }, set [name](x) {
    return __privateSet(this, extra, x);
  } }, name));
  k ? p && k < 4 && __name(extra, (k > 2 ? "set " : k > 1 ? "get " : "") + name) : __name(target, name);
  for (var i = decorators.length - 1; i >= 0; i--) {
    ctx = __decoratorContext(k, name, done = {}, array[3], extraInitializers);
    if (k) {
      ctx.static = s, ctx.private = p, access = ctx.access = { has: p ? (x) => __privateIn(target, x) : (x) => name in x };
      if (k ^ 3) access.get = p ? (x) => (k ^ 1 ? __privateGet : __privateMethod)(x, target, k ^ 4 ? extra : desc.get) : (x) => x[name];
      if (k > 2) access.set = p ? (x, y) => __privateSet(x, target, y, k ^ 4 ? extra : desc.set) : (x, y) => x[name] = y;
    }
    it = (0, decorators[i])(k ? k < 4 ? p ? extra : desc[key] : k > 4 ? void 0 : { get: desc.get, set: desc.set } : target, ctx), done._ = 1;
    if (k ^ 4 || it === void 0) __expectFn(it) && (k > 4 ? initializers.unshift(it) : k ? p ? extra = it : desc[key] = it : target = it);
    else if (typeof it !== "object" || it === null) __typeError("Object expected");
    else __expectFn(fn = it.get) && (desc.get = fn), __expectFn(fn = it.set) && (desc.set = fn), __expectFn(fn = it.init) && initializers.unshift(fn);
  }
  return k || __decoratorMetadata(array, target), desc && __defProp(target, name, desc), p ? k ^ 4 ? extra : desc : target;
};
var __accessCheck = (obj, member, msg) => member.has(obj) || __typeError("Cannot " + msg);
var __privateIn = (member, obj) => Object(obj) !== obj ? __typeError('Cannot use the "in" operator on this value') : member.has(obj);
var __privateGet = (obj, member, getter2) => (__accessCheck(obj, member, "read from private field"), getter2 ? getter2.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value) => member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter2) => (__accessCheck(obj, member, "write to private field"), setter2 ? setter2.call(obj, value) : member.set(obj, value), value);
var __privateMethod = (obj, member, method) => (__accessCheck(obj, member, "access private method"), method);

// ns/apps/LoginScreen/app.ts
import { setConsoleLogDomain as setConsoleLogDomain2 } from "console";

// ../../../../../usr/share/ags/js/lib/overrides.ts
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod, patch2) {
  return mod.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland, Monitor, Workspace }) => {
  patch(Hyprland.prototype, "binds");
  patch(Hyprland.prototype, "monitors");
  patch(Hyprland.prototype, "workspaces");
  patch(Hyprland.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp, Audio, Video }) => {
  patch(Wp.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gobject.ts
import GObject from "gi://GObject";
import GLib from "gi://GLib";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function xml({ name, attributes, children }) {
  let builder = `<${name}`;
  const attrs = Object.entries(attributes ?? []);
  if (attrs.length > 0) {
    for (const [key, value] of attrs) {
      builder += ` ${key}="${value}"`;
    }
  }
  if (children && children.length > 0) {
    builder += ">";
    for (const node of children) {
      builder += xml(node);
    }
    builder += `</${name}>`;
  } else {
    builder += " />";
  }
  return builder;
}
function set(obj, prop, value) {
  const key = snakeify2(prop);
  const getter2 = `get_${key}`;
  const setter2 = `set_${key}`;
  let current;
  if (getter2 in obj && typeof obj[getter2] === "function") {
    current = obj[getter2]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter2 in obj && typeof obj[setter2] === "function") {
      ;
      obj[setter2](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gobject.ts
var priv = Symbol("gobject private");
var { defineProperty, fromEntries, entries } = Object;
var { Object: GObj, registerClass } = GObject;
var SignalFlags = GObject.SignalFlags;
var AccumulatorType = GObject.AccumulatorType;
var ParamSpec = GObject.ParamSpec;
var ParamFlags = GObject.ParamFlags;
function assertField(ctx) {
  if (ctx.private) throw Error("private fields are not supported");
  if (ctx.static) throw Error("static fields are not supported");
  if (typeof ctx.name !== "string") {
    throw Error("only strings can be gobject property keys");
  }
  return ctx.name;
}
function getter(typeDeclaration) {
  return function getter2(getter2, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.READABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.READABLE, type: typeDeclaration };
    }
    return getter2;
  };
}
function setter(typeDeclaration) {
  return function setter2(setter2, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.WRITABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.WRITABLE, type: typeDeclaration };
    }
    return setter2;
  };
}
function signal(...args) {
  return function(method, ctx) {
    if (ctx.private) throw Error("private fields are not supported");
    if (ctx.static) throw Error("static fields are not supported");
    if (typeof ctx.name !== "string") {
      throw Error("only strings can be gobject signals");
    }
    const signalName2 = kebabify(ctx.name);
    const meta = ctx.metadata;
    const signals = meta.signals ??= {};
    if (Array.isArray(args[0])) {
      const [params, returnType, options] = args;
      signals[signalName2] = {
        method,
        default: options?.default ?? true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i),
        ...returnType && {
          return_type: "$gtype" in returnType ? returnType.$gtype : returnType
        },
        ...options?.flags && {
          flags: options.flags
        },
        ...typeof options?.accumulator === "number" && {
          accumulator: options.accumulator
        }
      };
    } else {
      const params = args;
      signals[signalName2] = {
        method,
        default: true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i)
      };
    }
    return function(...params) {
      return this.emit(signalName2, ...params);
    };
  };
}
var MAXINT = 2 ** 31 - 1;
var MININT = -(2 ** 31);
var MAXUINT = 2 ** 32 - 1;
var MAXFLOAT = 34028235e31;
var MINFLOAT = -34028235e31;
var MININT64 = Number.MIN_SAFE_INTEGER;
var MAXINT64 = Number.MAX_SAFE_INTEGER;
function pspecFromGType(type, name, flags) {
  switch (type) {
    case GObject.TYPE_BOOLEAN:
      return ParamSpec.boolean(name, "", "", flags, false);
    case GObject.TYPE_STRING:
      return ParamSpec.string(name, "", "", flags, "");
    case GObject.TYPE_INT:
      return ParamSpec.int(name, "", "", flags, MININT, MAXINT, 0);
    case GObject.TYPE_UINT:
      return ParamSpec.uint(name, "", "", flags, 0, MAXUINT, 0);
    case GObject.TYPE_INT64:
      return ParamSpec.int64(name, "", "", flags, MININT64, MAXINT64, 0);
    case GObject.TYPE_UINT64:
      return ParamSpec.uint64(name, "", "", flags, 0, Number.MAX_SAFE_INTEGER, 0);
    case GObject.TYPE_FLOAT:
      return ParamSpec.float(name, "", "", flags, MINFLOAT, MAXFLOAT, 0);
    case GObject.TYPE_DOUBLE:
      return ParamSpec.double(name, "", "", flags, Number.MIN_VALUE, Number.MIN_VALUE, 0);
    case GObject.TYPE_JSOBJECT:
      return ParamSpec.jsobject(name, "", "", flags);
    case GObject.TYPE_VARIANT:
      return ParamSpec.object(name, "", "", flags, GLib.Variant);
    case GObject.TYPE_ENUM:
    case GObject.TYPE_INTERFACE:
    case GObject.TYPE_BOXED:
    case GObject.TYPE_POINTER:
    case GObject.TYPE_PARAM:
    case GObject.type_from_name("GType"):
      throw Error(`cannot guess ParamSpec from GType "${type}"`);
    case GObject.TYPE_OBJECT:
    default:
      return ParamSpec.object(name, "", "", flags, type);
  }
}
function pspec(name, flags, declaration) {
  if (declaration instanceof ParamSpec) return declaration;
  if (declaration === Object || declaration === Function || declaration === Array) {
    return ParamSpec.jsobject(name, "", "", flags);
  }
  if (declaration === String) {
    return ParamSpec.string(name, "", "", flags, "");
  }
  if (declaration === Number) {
    return ParamSpec.double(name, "", "", flags, -Number.MAX_VALUE, Number.MAX_VALUE, 0);
  }
  if (declaration === Boolean) {
    return ParamSpec.boolean(name, "", "", flags, false);
  }
  if ("$gtype" in declaration) {
    return pspecFromGType(declaration.$gtype, name, flags);
  }
  if (typeof declaration === "function") {
    return declaration(name, flags);
  }
  throw Error("invalid PropertyTypeDeclaration");
}
function register(options = {}) {
  return function(cls, ctx) {
    const t = options.Template;
    if (typeof t === "string" && !t.startsWith("resource://") && !t.startsWith("file://")) {
      options.Template = new TextEncoder().encode(t);
    }
    const meta = ctx.metadata;
    const props = fromEntries(
      entries(meta.properties ?? {}).map(([fieldName, { flags, type }]) => {
        const key = kebabify(fieldName);
        const spec = pspec(key, flags, type);
        return [key, spec];
      })
    );
    const signals = fromEntries(
      entries(meta.signals ?? {}).map(([signalName2, { default: def, method, ...signal2 }]) => {
        if (def) {
          defineProperty(cls.prototype, `on_${signalName2.replaceAll("-", "_")}`, {
            enumerable: false,
            configurable: false,
            value: method
          });
        }
        return [signalName2, signal2];
      })
    );
    delete meta.properties;
    delete meta.signals;
    registerClass({ ...options, Properties: props, Signals: signals }, cls);
  };
}
Function.$gtype = Object.$gtype;
Array.$gtype = Object.$gtype;
Date.$gtype = Object.$gtype;
Map.$gtype = Object.$gtype;
Set.$gtype = Object.$gtype;

// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
import GLib4 from "gi://GLib?version=2.0";
import Gtk from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";
import Gio3 from "gi://Gio?version=2.0";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/dbus.ts
import Gio from "gi://Gio";
import GLib2 from "gi://GLib";
import GObject2 from "gi://GObject";
var DEFAULT_TIMEOUT = 1e4;
var Variant = GLib2.Variant;
var info = Symbol("dbus interface info");
var internals = Symbol("dbus interface internals");
var remoteMethod = Symbol("proxy remoteMethod");
var remoteMethodAsync = Symbol("proxy remoteMethodAsync");
var remotePropertySet = Symbol("proxy remotePropertySet");
var _a;
var Service = class extends GObject2.Object {
  constructor() {
    super();
    this[_a] = {
      priv: {},
      onStop: /* @__PURE__ */ new Set()
    };
    const service = this.constructor;
    if (!service[info]) throw Error("missing interface info");
    this.#info = service[info];
  }
  static {
    GObject2.registerClass(this);
  }
  #info;
  notify(propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (prop && this[internals].dbusObject) {
      this[internals].dbusObject.emit_property_changed(
        propertyName,
        new GLib2.Variant(prop.signature, this[propertyName])
      );
    }
    super.notify(prop ? kebabify(propertyName) : propertyName);
  }
  emit(name, ...params) {
    const signal2 = this.#info.lookup_signal(name);
    if (signal2 && this[internals].dbusObject) {
      const signature = `(${signal2.args.map((a) => a.signature).join("")})`;
      this[internals].dbusObject.emit_signal(name, new GLib2.Variant(signature, params));
    }
    return super.emit(signal2 ? kebabify(name) : name, ...params);
  }
  // server
  #handlePropertyGet(_, propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no exported property: "${propertyName}"`);
    }
    const value = this[propertyName];
    if (typeof value !== "undefined") {
      return new GLib2.Variant(prop.signature, value);
    } else {
      return null;
    }
  }
  // server
  #handlePropertySet(_, propertyName, value) {
    const newValue = value.deepUnpack();
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no property: "${propertyName}"`);
    }
    if (this[propertyName] !== newValue) {
      this[propertyName] = value.deepUnpack();
    }
  }
  // server
  #returnError(error, invocation) {
    console.error(error);
    if (error instanceof GLib2.Error) {
      return invocation.return_gerror(error);
    }
    if (error instanceof Error) {
      return invocation.return_dbus_error(
        error.name.includes(".") ? error.name : `gjs.JSError.${error.name}`,
        error.message
      );
    }
    invocation.return_dbus_error("gjs.DBusService.UnknownError", `${error}`);
  }
  // server
  #returnValue(value, methodName, invocation) {
    if (value === null || value === void 0) {
      return invocation.return_value(new GLib2.Variant("()", []));
    }
    const args = this.#info.lookup_method(methodName)?.out_args ?? [];
    const signature = `(${args.map((arg) => arg.signature).join("")})`;
    if (!Array.isArray(value)) throw Error("value has to be a tuple");
    invocation.return_value(new GLib2.Variant(signature, value));
  }
  // server
  #handleMethodCall(_, methodName, parameters, invocation) {
    try {
      const value = this[methodName](
        ...parameters.deepUnpack()
      );
      if (value instanceof GLib2.Variant) {
        invocation.return_value(value);
      } else if (value instanceof Promise) {
        value.then((value2) => this.#returnValue(value2, methodName, invocation)).catch((error) => this.#returnError(error, invocation));
      } else {
        this.#returnValue(value, methodName, invocation);
      }
    } catch (error) {
      this.#returnError(error, invocation);
    }
  }
  // server
  async serve({
    busType = Gio.BusType.SESSION,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio.BusNameOwnerFlags.NONE,
    timeout: timeout2 = DEFAULT_TIMEOUT
  } = {}) {
    const impl = new Gio.DBusExportedObject(
      // @ts-expect-error missing constructor type
      { g_interface_info: this.#info }
    );
    impl.connect("handle-method-call", this.#handleMethodCall.bind(this));
    impl.connect("handle-property-get", this.#handlePropertyGet.bind(this));
    impl.connect("handle-property-set", this.#handlePropertySet.bind(this));
    this.#info.cache_build();
    return new Promise((resolve, reject) => {
      let source = timeout2 > 0 ? setTimeout(() => {
        reject(Error(`serve timed out`));
        source = null;
      }, timeout2) : null;
      const clear = () => {
        if (source) {
          clearTimeout(source);
          source = null;
        }
      };
      const busId = Gio.bus_own_name(
        busType,
        name,
        flags,
        (conn) => {
          try {
            impl.export(conn, objectPath);
            this[internals].dbusObject = impl;
            this[internals].onStop.add(() => {
              Gio.bus_unown_name(busId);
              impl.unexport();
              this.#info.cache_release();
              delete this[internals].dbusObject;
            });
            resolve(this);
          } catch (error) {
            reject(error);
          }
        },
        clear,
        clear
      );
    });
  }
  // proxy
  #handlePropertiesChanged(_, changed, invalidated) {
    const set2 = /* @__PURE__ */ new Set([...Object.keys(changed.deepUnpack()), ...invalidated]);
    for (const prop of set2.values()) {
      this.notify(prop);
    }
  }
  // proxy
  #handleSignal(_, _sender, signal2, parameters) {
    this.emit(kebabify(signal2), ...parameters.deepUnpack());
  }
  // proxy
  #remoteMethodParams(methodName, args) {
    const { proxy } = this[internals];
    if (!proxy) throw Error("invalid remoteMethod invocation: not a proxy");
    const method = this.#info.lookup_method(methodName);
    if (!method) throw Error("method not found");
    const signature = `(${method.in_args.map((a) => a.signature).join("")})`;
    return [
      methodName,
      new GLib2.Variant(signature, args),
      Gio.DBusCallFlags.NONE,
      DEFAULT_TIMEOUT,
      null
    ];
  }
  // proxy
  [(info, _a = internals, remoteMethod)](methodName, args) {
    const params = this.#remoteMethodParams(methodName, args);
    return this[internals].proxy.call_sync(...params);
  }
  // proxy
  [remoteMethodAsync](methodName, args) {
    return new Promise((resolve, reject) => {
      try {
        const params = this.#remoteMethodParams(methodName, args);
        this[internals].proxy.call(...params, (_, res) => {
          try {
            resolve(this[internals].proxy.call_finish(res));
          } catch (error) {
            reject(error);
          }
        });
      } catch (error) {
        reject(error);
      }
    });
  }
  // proxy
  [remotePropertySet](name, value) {
    const proxy = this[internals].proxy;
    const prop = this.#info.lookup_property(name);
    const variant = new GLib2.Variant(prop.signature, value);
    proxy.set_cached_property(name, variant);
    proxy.call(
      "org.freedesktop.DBus.Properties.Set",
      new GLib2.Variant("(ssv)", [proxy.gInterfaceName, name, variant]),
      Gio.DBusCallFlags.NONE,
      -1,
      null,
      (_, res) => {
        try {
          proxy.call_finish(res);
        } catch (e) {
          console.error(e);
        }
      }
    );
  }
  // proxy
  async proxy({
    bus = Gio.DBus.session,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio.DBusProxyFlags.NONE,
    timeout: timeout2 = DEFAULT_TIMEOUT
  } = {}) {
    const proxy = new Gio.DBusProxy({
      gConnection: bus,
      gInterfaceName: this.#info.name,
      gInterfaceInfo: this.#info,
      gName: name,
      gFlags: flags,
      gObjectPath: objectPath
    });
    return new Promise((resolve, reject) => {
      const cancallable = new Gio.Cancellable();
      let source = timeout2 > 0 ? setTimeout(() => {
        reject(Error(`proxy timed out`));
        source = null;
        cancallable.cancel();
      }, timeout2) : null;
      proxy.init_async(GLib2.PRIORITY_DEFAULT, cancallable, (_, res) => {
        try {
          if (source) {
            clearTimeout(source);
            source = null;
          }
          proxy.init_finish(res);
          this[internals].proxy = proxy;
          const ids = [
            proxy.connect("g-signal", this.#handleSignal.bind(this)),
            proxy.connect(
              "g-properties-changed",
              this.#handlePropertiesChanged.bind(this)
            )
          ];
          this[internals].onStop.add(() => {
            ids.forEach((id) => proxy.disconnect(id));
            delete this[internals].proxy;
          });
          resolve(this);
        } catch (error) {
          reject(error);
        }
      });
    });
  }
  stop() {
    const { onStop } = this[internals];
    for (const cb of onStop.values()) {
      onStop.delete(cb);
      cb();
    }
  }
};
function iface(name, options) {
  return function(cls, ctx) {
    const meta = ctx.metadata;
    if (!meta) throw Error(`${cls.name} is not an interface`);
    const { dbusMethods = {}, dbusSignals = {}, dbusProperties = {} } = meta;
    const infoXml = xml({
      name: "node",
      children: [
        {
          name: "interface",
          attributes: { name },
          children: [
            ...Object.entries(dbusMethods).map(([name2, args]) => ({
              name: "method",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.entries(dbusSignals).map(([name2, args]) => ({
              name: "signal",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.values(dbusProperties).map(({ name: name2, type, read, write }) => ({
              name: "property",
              attributes: {
                ...name2 && { name: name2 },
                type,
                access: (read ? "read" : "") + (write ? "write" : "")
              }
            }))
          ]
        }
      ]
    });
    Object.assign(cls, { [info]: Gio.DBusInterfaceInfo.new_for_xml(infoXml) });
    register(options)(cls, ctx);
  };
}
function installMethod(args, method, ctx) {
  const name = ctx.name;
  const meta = ctx.metadata;
  const methods = meta.dbusMethods ??= {};
  if (typeof name !== "string") {
    throw Error("only string named methods are allowed");
  }
  const [inArgs, outArgs = []] = Array.isArray(args[0]) ? args : [args];
  methods[name] = [
    ...inArgs.map((arg) => ({
      direction: "in",
      ...typeof arg === "string" ? { type: arg } : arg
    })),
    ...outArgs.map((arg) => ({
      direction: "out",
      ...typeof arg === "string" ? { type: arg } : arg
    }))
  ];
  return name;
}
function methodAsync(...args) {
  return function(method, ctx) {
    const name = installMethod(args, method, ctx);
    return async function(...args2) {
      if (this[internals].proxy) {
        const value = await this[remoteMethodAsync](name, args2);
        return value.deepUnpack();
      } else {
        return method.apply(this, args2);
      }
    };
  };
}

// ../../../../../usr/share/ags/js/lib/app/dbus.ts
var _Request_dec, _Quit_dec, _ToggleWindow_dec, _Inspector_dec, _a2, _AppDBus_decorators, _init;
_AppDBus_decorators = [iface("io.Astal.Application")];
var _AppDBus = class _AppDBus extends (_a2 = Service, _Inspector_dec = [methodAsync()], _ToggleWindow_dec = [methodAsync("s")], _Quit_dec = [methodAsync()], _Request_dec = [methodAsync(["as"], ["s"])], _a2) {
  constructor(impl) {
    super();
    __runInitializers(_init, 5, this);
    this.impl = void 0;
    this.impl = impl;
  }
  async Inspector() {
    return Promise.resolve(this.impl.insector());
  }
  async ToggleWindow(name) {
    return Promise.resolve(this.impl.toggleWindow(name));
  }
  async Quit() {
    return Promise.resolve(this.impl.quit());
  }
  async Request(argv) {
    return this.impl.request(argv).then((res) => [res]);
  }
  static proxy(instanceName) {
    const app2 = new _AppDBus({
      insector() {
      },
      toggleWindow() {
      },
      quit() {
      },
      request: () => Promise.reject()
    });
    return app2.proxy({
      name: "io.Astal." + instanceName
    });
  }
};
_init = __decoratorStart(_a2);
__decorateElement(_init, 1, "Inspector", _Inspector_dec, _AppDBus);
__decorateElement(_init, 1, "ToggleWindow", _ToggleWindow_dec, _AppDBus);
__decorateElement(_init, 1, "Quit", _Quit_dec, _AppDBus);
__decorateElement(_init, 1, "Request", _Request_dec, _AppDBus);
_AppDBus = __decorateElement(_init, 0, "AppDBus", _AppDBus_decorators, _AppDBus);
__runInitializers(_init, 1, _AppDBus);
var AppDBus = _AppDBus;

// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
import GObject5 from "gi://GObject";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
import GObject3 from "gi://GObject";
var _a3, _b;
var Fragment = class _Fragment extends GObject3.Object {
  static {
    this[_b] = {
      append: { param_types: [GObject3.TYPE_OBJECT] },
      remove: { param_types: [GObject3.TYPE_OBJECT] }
    };
  }
  static {
    this[_a3] = {
      children: GObject3.ParamSpec.jsobject("children", "", "", GObject3.ParamFlags.READABLE)
    };
  }
  static {
    GObject3.registerClass(this);
  }
  *[(_b = GObject3.signals, _a3 = GObject3.properties, Symbol.iterator)]() {
    yield* this._children;
  }
  append(child) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    this._children.push(child);
    this.emit("append", child);
    this.notify("children");
  }
  remove(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("remove", child);
    this.notify("children");
  }
  constructor({ children = [] } = {}) {
    super();
    this._children = Array.isArray(children) ? children : [children];
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
};

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
import GObject4 from "gi://GObject";
import Gio2 from "gi://Gio";
import GLib3 from "gi://GLib";
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject4.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    return this.as(transform);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
var empty = Symbol("empty computed value");
function createComputedProducer(fn) {
  const subscribers = /* @__PURE__ */ new Set();
  let value = empty;
  let prevDeps = /* @__PURE__ */ new Map();
  const effect = () => {
    const deps = /* @__PURE__ */ new Set();
    value = fn((v) => (deps.add(v), v.get()));
    const newDeps = /* @__PURE__ */ new Map();
    for (const [dep, unsub] of prevDeps) {
      if (!deps.has(dep)) {
        unsub();
      } else {
        newDeps.set(dep, unsub);
      }
    }
    for (const dep of deps) {
      if (!newDeps.has(dep)) {
        newDeps.set(dep, dep.subscribe(effect));
      }
    }
    prevDeps = newDeps;
    Array.from(subscribers).forEach((cb) => cb());
  };
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      effect();
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        value = empty;
        for (const [, unsub] of prevDeps) {
          unsub();
        }
      }
    };
  };
  const get = () => {
    return value === empty ? fn((v) => v.get()) : value;
  };
  return new Accessor(get, subscribe);
}
function createComputedArgs(deps, transform) {
  let dispose;
  const subscribers = /* @__PURE__ */ new Set();
  const cache = new Array(deps.length);
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      dispose = deps.map(
        (dep, i) => dep.subscribe(() => {
          const value = dep.get();
          if (cache[i] !== value) {
            cache[i] = dep.get();
            Array.from(subscribers).forEach((cb) => cb());
          }
        })
      );
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        dispose.map((cb) => cb());
        dispose.length = 0;
        cache.length = 0;
      }
    };
  };
  const get = () => {
    const args = deps.map((dep, i) => {
      if (!cache[i]) {
        cache[i] = dep.get();
      }
      return cache[i];
    });
    return transform ? transform(...args) : args;
  };
  return new Accessor(get, subscribe);
}
function createComputed(...args) {
  const [depsOrProducer, transform] = args;
  if (typeof depsOrProducer === "function") {
    return createComputedProducer(depsOrProducer);
  } else {
    return createComputedArgs(depsOrProducer, transform);
  }
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  textNode: missingImpl,
  appendChild: missingImpl,
  removeChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
var appendChild = Symbol("JSX add child method");
var removeChild = Symbol("JSX add remove method");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject5.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function signalName(key) {
  const [sig, detail] = kebabify(key.slice(2)).split(":");
  if (sig.startsWith("notify-")) {
    return `notify::${sig.slice(7)}`;
  }
  return detail ? `${sig}::${detail}` : sig;
}
function remove(parent, child) {
  if (parent instanceof Fragment) {
    parent.remove(child);
    return;
  }
  if (removeChild in parent && typeof parent[removeChild] === "function") {
    parent[removeChild](child);
    return;
  }
  env.removeChild(parent, child);
}
function append(parent, child) {
  if (parent instanceof Fragment) {
    parent.append(child);
    return;
  }
  if (child instanceof Fragment) {
    for (const ch of child) {
      append(parent, ch);
    }
    const appendHandler = child.connect("append", (_, ch) => {
      if (!(ch instanceof GObject5.Object)) {
        return console.error(TypeError(`cannot add ${ch} to ${parent}`));
      }
      append(parent, ch);
    });
    const removeHandler = child.connect("remove", (_, ch) => {
      if (!(ch instanceof GObject5.Object)) {
        return console.error(TypeError(`cannot remove ${ch} from ${parent}`));
      }
      remove(parent, ch);
    });
    onCleanup(() => {
      child.disconnect(appendHandler);
      child.disconnect(removeHandler);
    });
    return;
  }
  if (appendChild in parent && typeof parent[appendChild] === "function") {
    parent[appendChild](child, getType(child));
    return;
  }
  env.appendChild(parent, child);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  const deferProps = env.initProps(ctor, props) ?? [];
  const deferredProps = {};
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) {
      delete props[key2];
    }
    if (deferProps.includes(key2)) {
      deferredProps[key2] = props[key2];
      delete props[key2];
    }
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2, value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (let child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn(Error("Trying to add boolean value of `true` as a child."));
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        append(object, ch);
      }
    } else if (child) {
      if (!(child instanceof GObject5.Object)) {
        child = env.textNode(child);
      }
      append(object, child);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const id = object.connect(signalName(sig), handler);
    return () => object.disconnect(id);
  });
  for (const [key2, value] of Object.entries(deferredProps)) {
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
    } else {
      Object.assign(object, { [key2]: value });
    }
  }
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    scope.dispose();
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.remove(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if ([...fragment].some((ch) => ch === child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.append(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.append(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/With.ts
function With({
  value,
  children: mkChild,
  cleanup
}) {
  const currentScope = getScope();
  const fragment = new Fragment();
  let scope;
  function remove2(child) {
    fragment.remove(child);
    if (scope) scope.dispose();
    if (typeof cleanup === "function") {
      cleanup(child);
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
  }
  function callback(v) {
    for (const child of fragment) {
      remove2(child);
    }
    scope = new Scope(currentScope);
    const ch = scope.run(() => mkChild(v));
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      fragment.append(ch);
    }
  }
  const dispose = value.subscribe(() => {
    callback(value.get());
  });
  callback(value.get());
  onCleanup(() => {
    dispose();
    for (const child of fragment) {
      remove2(child);
    }
  });
  return fragment;
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/This.ts
import GObject6 from "gi://GObject";

// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
Gtk.init();
GLib4.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw2 }) => Adw2.init()).catch(() => void 0);
var _request_dec, _cursorTheme_dec, _cursorTheme_dec2, _iconTheme_dec, _iconTheme_dec2, _gtkTheme_dec, _gtkTheme_dec2, _windows_dec, _monitors_dec, _windowToggled_dec, _a4, _App_decorators, _instanceName, _main, _requestHandlers, _dbusService, _cssProviders, _App_instances, settings_get, display_get, _init2;
_App_decorators = [register()];
var App = class extends (_a4 = Gtk.Application, _windowToggled_dec = [signal(Gtk.Window)], _monitors_dec = [getter(Array)], _windows_dec = [getter(Array)], _gtkTheme_dec2 = [setter(String)], _gtkTheme_dec = [getter(String)], _iconTheme_dec2 = [setter(String)], _iconTheme_dec = [getter(String)], _cursorTheme_dec2 = [setter(String)], _cursorTheme_dec = [getter(String)], _request_dec = [signal(Array, Function)], _a4) {
  constructor() {
    super({ flags: Gio3.ApplicationFlags.HANDLES_COMMAND_LINE });
    __runInitializers(_init2, 5, this);
    __privateAdd(this, _App_instances);
    __privateAdd(this, _instanceName, "ags");
    __privateAdd(this, _main);
    __privateAdd(this, _requestHandlers, 0);
    __privateAdd(this, _dbusService);
    __privateAdd(this, _cssProviders, new Array());
    __privateSet(this, _dbusService, new AppDBus({
      toggleWindow: this.toggle_window.bind(this),
      quit: this.quit.bind(this),
      request: (argv) => new Promise((resolve) => this.request(argv, resolve)),
      insector: () => {
        Gtk.Window.set_interactive_debugging(true);
      }
    }));
    __privateGet(this, _App_instances, display_get).get_monitors().connect("items-changed", () => {
      this.notify("monitors");
    });
    this.connect("window-added", (_, window) => {
      const id1 = window.connect("notify::visible", () => this.windowToggled(window));
      const id2 = this.connect("window-removed", (_2, removed) => {
        if (removed == window) {
          window.disconnect(id1);
          this.disconnect(id2);
        }
      });
    });
    __privateGet(this, _App_instances, settings_get).connect("notify", (_, { name }) => {
      switch (name) {
        case "gtk-theme-name":
          this.notify("gtk-theme");
          break;
        case "gtk-icon-theme-name":
          this.notify("icon-theme");
          break;
        case "gtk-cursor-theme-name":
          this.notify("cursor-theme");
          break;
        default:
          break;
      }
    });
  }
  get instanceName() {
    return __privateGet(this, _instanceName);
  }
  /**
   * Get all monitors from {@link Gdk.Display}.
   */
  get_monitors() {
    const mons = __privateGet(this, _App_instances, display_get).get_monitors();
    const list = new Array();
    let monitor = null;
    let i = 0;
    while ((monitor = mons.get_item(i++)) !== null) {
      list.push(monitor);
    }
    return list;
  }
  windowToggled(window) {
  }
  get monitors() {
    return this.get_monitors();
  }
  get windows() {
    return this.get_windows();
  }
  set gtkTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkThemeName = name;
  }
  get gtkTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkThemeName;
  }
  set iconTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkIconThemeName = name;
  }
  get iconTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkIconThemeName;
  }
  set cursorTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkCursorThemeName = name;
  }
  get cursorTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkCursorThemeName;
  }
  /**
   * Get a window by its {@link Gtk.Widget.prototype.name} that has been added to this app
   * using {@link Gtk.Application.prototype.add_window}.
   */
  get_window(name) {
    return this.windows.find((w) => w.name === name);
  }
  /**
   * Toggle the visibility of a window by its {@link Gtk.Widget.prototype.name}
   * that has been added to this app using {@link Gtk.Application.prototype.add_window}.
   */
  toggle_window(name) {
    const win = this.get_window(name);
    if (!win) throw Error(`no window registered with name "${name}"`);
    win.visible = !win.visible;
  }
  /**
   * Reset previously set css providers with {@link App.prototype.apply_css}.
   */
  reset_css() {
    for (const provider of __privateGet(this, _cssProviders)) {
      Gtk.StyleContext.remove_provider_for_display(__privateGet(this, _App_instances, display_get), provider);
    }
  }
  /**
   * Add a new {@link Gtk.CssProvider}.
   * @param style Css string or a path to a css file.
   */
  apply_css(style, reset = false) {
    const provider = new Gtk.CssProvider();
    provider.connect("parsing-error", (_, section, error) => {
      const name = section.get_file()?.get_basename() ?? "";
      const line = section.get_start_location().lines + 1;
      const chars = section.get_start_location().line_chars + 1;
      console.error(`CSS Error ${name}:${line}:${chars} ${error.message}`);
    });
    if (reset) this.reset_css();
    if (GLib4.file_test(style, GLib4.FileTest.EXISTS)) {
      provider.load_from_path(style);
    } else if (style.startsWith("resource://")) {
      provider.load_from_resource(style.replace("resource://", ""));
    } else {
      provider.load_from_string(style);
    }
    Gtk.StyleContext.add_provider_for_display(
      __privateGet(this, _App_instances, display_get),
      provider,
      Gtk.STYLE_PROVIDER_PRIORITY_USER
    );
    __privateGet(this, _cssProviders).push(provider);
  }
  /**
   * Shortcut for {@link Gtk.IconTheme.prototype.add_search_path}.
   */
  add_icons(path) {
    Gtk.IconTheme.get_for_display(__privateGet(this, _App_instances, display_get)).add_search_path(path);
  }
  /**
   * Quit and exit the application.
   */
  quit(code = 0) {
    __privateGet(this, _dbusService).stop();
    super.quit();
    exit(code);
  }
  request(args, response) {
    if (__privateGet(this, _requestHandlers) === 0) {
      response(`instance "${this.instanceName}" has no request handler implemented`);
    }
  }
  vfunc_command_line(cmd) {
    if (cmd.isRemote) {
      this.request(cmd.get_arguments(), (str) => {
        cmd.print_literal(str + "\n");
        cmd.done();
      });
    } else {
      this.hold();
      __privateGet(this, _dbusService).serve({
        name: this.applicationId
      });
      createRoot((dispose) => {
        var _a7;
        this.connect("shutdown", dispose);
        (_a7 = __privateGet(this, _main)) == null ? void 0 : _a7.call(this, ...programArgs);
      });
    }
    return 0;
  }
  start(config2) {
    const { main, requestHandler, instanceName, css, icons, ...cfg } = config2;
    __privateSet(this, _main, main);
    Object.assign(this, cfg);
    if (requestHandler) {
      this.connect("request", (_, args, response) => requestHandler(args, response));
    }
    if (instanceName) __privateSet(this, _instanceName, instanceName);
    if (css) this.apply_css(css, false);
    if (icons) app.add_icons(icons);
    this.applicationId = "io.Astal." + this.instanceName;
    setConsoleLogDomain(this.instanceName);
    this.runAsync(programArgs);
  }
  connect(signal2, callback) {
    if (signal2 === "request") __privateSet(this, _requestHandlers, __privateGet(this, _requestHandlers) + 1);
    return super.connect(signal2, callback);
  }
};
_init2 = __decoratorStart(_a4);
_instanceName = new WeakMap();
_main = new WeakMap();
_requestHandlers = new WeakMap();
_dbusService = new WeakMap();
_cssProviders = new WeakMap();
_App_instances = new WeakSet();
settings_get = function() {
  const settings = Gtk.Settings.get_default();
  if (!settings) throw Error("could not get settings");
  return settings;
};
display_get = function() {
  const display = Gdk.Display.get_default();
  if (!display) throw Error("could not get display");
  return display;
};
__decorateElement(_init2, 1, "windowToggled", _windowToggled_dec, App);
__decorateElement(_init2, 2, "monitors", _monitors_dec, App);
__decorateElement(_init2, 2, "windows", _windows_dec, App);
__decorateElement(_init2, 3, "gtkTheme", _gtkTheme_dec2, App);
__decorateElement(_init2, 2, "gtkTheme", _gtkTheme_dec, App);
__decorateElement(_init2, 3, "iconTheme", _iconTheme_dec2, App);
__decorateElement(_init2, 2, "iconTheme", _iconTheme_dec, App);
__decorateElement(_init2, 3, "cursorTheme", _cursorTheme_dec2, App);
__decorateElement(_init2, 2, "cursorTheme", _cursorTheme_dec, App);
__decorateElement(_init2, 1, "request", _request_dec, App);
App = __decorateElement(_init2, 0, "App", _App_decorators, App);
__runInitializers(_init2, 1, App);
var app = new App();
var app_default = app;

// ns/libs/log/constants.ts
var APP_LOG_DOMAIN = {
  GREETER: "greeter",
  SHELL: "shell"
};
var SYSTEMD_CAT_PRIORITY = {
  emerg: 0,
  alert: 1,
  crit: 2,
  err: 3,
  warning: 4,
  notice: 5,
  info: 6,
  debug: 7
};
var AppLogDomain = class {
  static {
    this.domain = "kotami";
  }
  static by_name(name) {
    return `${name}.${this.domain}`;
  }
};

// ns/libs/log/FileLogger.ts
import { getConsoleLogDomain } from "console";
import Gio4 from "gi://Gio";
import GLib5 from "gi://GLib";

// ns/providers/config/index.ts
var LOG_FILE_PATH = "/var/log/kotami/apps.log";
function getConfig() {
  return {
    log_file_path: LOG_FILE_PATH
  };
}

// ns/libs/log/utils/getErrorMessage.ts
function getErrorMessage(error) {
  if (error instanceof Error) {
    return error.message;
  }
  return `${String(error)}. TRACE: ${JSON.stringify(error)}`;
}

// ns/libs/log/utils/getKeyByValue.ts
function getKeyByValue(object, value) {
  return Object.keys(object).find((key) => object[key] === value);
}

// ns/libs/log/FileLogger.ts
var { log_file_path } = getConfig();
var FileLogger = class {
  constructor() {
    this.identifier = getConsoleLogDomain();
    this.file = Gio4.File.new_for_path(log_file_path);
    if (!this.file.query_exists(null)) {
      try {
        const parentDir = this.file.get_parent();
        if (parentDir && !parentDir.query_exists(null)) {
          parentDir.make_directory_with_parents(null);
        }
        const outputStream = this.file.create(Gio4.FileCreateFlags.NONE, null);
        outputStream.close(null);
      } catch (e) {
        logError(e);
      }
    }
  }
  send(message, priority) {
    const timestamp = (/* @__PURE__ */ new Date()).toISOString();
    const logLevel = (getKeyByValue(SYSTEMD_CAT_PRIORITY, priority) || "notice").toUpperCase();
    const logRecord = `${timestamp} ${this.identifier} ${logLevel}: ${message}`;
    GLib5.timeout_add(GLib5.PRIORITY_DEFAULT, 0, () => {
      const fileStream = this.file.append_to(Gio4.FileCreateFlags.NONE, null);
      const dataStream = new Gio4.DataOutputStream({
        base_stream: fileStream,
        close_base_stream: true
      });
      dataStream.put_string(`${logRecord}
`, null);
      dataStream.close(null);
      fileStream.close(null);
      return GLib5.SOURCE_REMOVE;
    });
  }
  log(message) {
    const priority = SYSTEMD_CAT_PRIORITY.info;
    if (typeof message === "string") {
      this.send(message, priority);
    } else {
      this.send(JSON.stringify(message), priority);
    }
  }
  warn(message) {
    const priority = SYSTEMD_CAT_PRIORITY.warning;
    if (typeof message === "string") {
      this.send(message, priority);
    } else {
      this.send(JSON.stringify(message), priority);
    }
  }
  error(message) {
    const priority = SYSTEMD_CAT_PRIORITY.err;
    if (typeof message === "string") {
      this.send(message, priority);
    } else {
      this.send(getErrorMessage(message), priority);
    }
  }
};

// ns/libs/log/SystemdCatLogger.ts
import { getConsoleLogDomain as getConsoleLogDomain2 } from "console";
import Gio5 from "gi://Gio";
import GLib6 from "gi://GLib";

// ../../../../../usr/share/ags/js/lib/gtk4/index.ts
import Astal from "gi://Astal?version=4.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Gdk2 from "gi://Gdk?version=4.0";

// ../../../../../usr/share/ags/js/lib/process.ts
import Gio6 from "gi://Gio?version=2.0";
import GLib7 from "gi://GLib?version=2.0";
var encoder = new TextEncoder();
var _exit_dec, _stderr_dec, _stdout_dec, _a5, _Process_decorators, _init3, _encoder, _outStream, _errStream, _inStream, _process, _Process_instances, readStream_fn;
_Process_decorators = [register()];
var _Process = class _Process extends (_a5 = GObject.Object, _stdout_dec = [signal(String)], _stderr_dec = [signal(String)], _exit_dec = [signal(Number, Boolean)], _a5) {
  constructor({ argv }) {
    super();
    __runInitializers(_init3, 5, this);
    __privateAdd(this, _Process_instances);
    __privateAdd(this, _encoder, new TextEncoder());
    __privateAdd(this, _outStream);
    __privateAdd(this, _errStream);
    __privateAdd(this, _inStream);
    __privateAdd(this, _process);
    const process = __privateSet(this, _process, Gio6.Subprocess.new(
      argv,
      Gio6.SubprocessFlags.STDIN_PIPE | Gio6.SubprocessFlags.STDOUT_PIPE | Gio6.SubprocessFlags.STDERR_PIPE
    ));
    __privateSet(this, _inStream, Gio6.DataOutputStream.new(process.get_stdin_pipe()));
    __privateSet(this, _outStream, Gio6.DataInputStream.new(process.get_stdout_pipe()));
    __privateSet(this, _errStream, Gio6.DataInputStream.new(process.get_stderr_pipe()));
    __privateMethod(this, _Process_instances, readStream_fn).call(this, __privateGet(this, _outStream));
    __privateMethod(this, _Process_instances, readStream_fn).call(this, __privateGet(this, _errStream));
    process.wait_async(null, (_, res) => {
      try {
        process.wait_finish(res);
      } catch {
      }
      if (process.get_if_exited()) {
        this.exit(process.get_exit_status(), false);
      }
      if (process.get_if_signaled()) {
        this.exit(process.get_term_sig(), true);
      }
    });
  }
  stdout(out) {
  }
  stderr(err) {
  }
  exit(code, signaled) {
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
  /**
   * Force quit the subprocess.
   */
  kill() {
    __privateGet(this, _process).force_exit();
  }
  /**
   * Send a signal to the subprocess.
   *
   * @param signal Signal number to be sent
   */
  signal(signal2) {
    __privateGet(this, _process).send_signal(signal2);
  }
  /**
   * Write a line to the subprocess' stdin synchronously.
   * See {@link Gio.DataOutputStream.prototype.write_bytes_async}
   *
   * @param str String to be written to stdin
   */
  write(str) {
    return new Promise((resolve, reject) => {
      __privateGet(this, _inStream).write_bytes_async(
        encoder.encode(str),
        GLib7.PRIORITY_DEFAULT,
        null,
        (_, res) => {
          try {
            resolve(__privateGet(this, _inStream).write_all_finish(res));
          } catch (error) {
            reject(error);
          }
        }
      );
    });
  }
  /**
   * Write a line to the subprocess' stdin asynchronously.
   *
   * @param str String to be written to stdin
   */
  async writeAsync(str) {
    return new Promise((resolve, reject) => {
      __privateGet(this, _inStream).write_all_async(
        __privateGet(this, _encoder).encode(str),
        GLib7.PRIORITY_DEFAULT,
        null,
        (_, res) => {
          try {
            resolve(void __privateGet(this, _inStream).write_all_finish(res));
          } catch (error) {
            reject(error);
          }
        }
      );
    });
  }
  /**
   * Start a new subprocess with the given command.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   */
  static subprocessv(cmd) {
    return new _Process({ argv: cmd });
  }
  /**
   * Start a new subprocess with the given command
   * which is parsed using {@link GLib.shell_parse_argv}.
   */
  static subprocess(cmd) {
    const [, argv] = GLib7.shell_parse_argv(cmd);
    return _Process.subprocessv(argv);
  }
  /**
   * Execute a command synchronously.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execv(cmd) {
    const process = Gio6.Subprocess.new(
      cmd,
      Gio6.SubprocessFlags.STDERR_PIPE | Gio6.SubprocessFlags.STDOUT_PIPE
    );
    const [, out, err] = process.communicate_utf8(null, null);
    if (process.get_successful()) {
      return out.trim();
    } else {
      throw new Error(err);
    }
  }
  /**
   * Execute a command synchronously.
   * The command is parsed using {@link GLib.shell_parse_argv}.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static exec(cmd) {
    const [, argv] = GLib7.shell_parse_argv(cmd);
    return _Process.execv(argv);
  }
  /**
   * Execute a command asynchronously.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execAsyncv(cmd) {
    const process = Gio6.Subprocess.new(
      cmd,
      Gio6.SubprocessFlags.STDERR_PIPE | Gio6.SubprocessFlags.STDOUT_PIPE
    );
    return new Promise((resolve, reject) => {
      process.communicate_utf8_async(null, null, (_, res) => {
        try {
          const [, out, err] = process.communicate_utf8_finish(res);
          if (process.get_successful()) {
            return resolve(out.trim());
          } else {
            reject(new Error(err.trim()));
          }
        } catch (error) {
          reject(error);
        }
      });
    });
  }
  /**
   * Execute a command asynchronously.
   * The command is parsed using {@link GLib.shell_parse_argv}.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execAsync(cmd) {
    const [, argv] = GLib7.shell_parse_argv(cmd);
    return _Process.execAsyncv(argv);
  }
};
_init3 = __decoratorStart(_a5);
_encoder = new WeakMap();
_outStream = new WeakMap();
_errStream = new WeakMap();
_inStream = new WeakMap();
_process = new WeakMap();
_Process_instances = new WeakSet();
readStream_fn = function(stream) {
  stream.read_line_async(GLib7.PRIORITY_DEFAULT, null, (_, res) => {
    try {
      const [output] = stream.read_line_finish_utf8(res);
      if (output !== null) {
        if (stream === __privateGet(this, _errStream)) {
          this.stderr(output.trim());
        } else {
          this.stdout(output.trim());
        }
        __privateMethod(this, _Process_instances, readStream_fn).call(this, stream);
      }
    } catch (error) {
      console.error(error);
    }
  });
};
__decorateElement(_init3, 1, "stdout", _stdout_dec, _Process);
__decorateElement(_init3, 1, "stderr", _stderr_dec, _Process);
__decorateElement(_init3, 1, "exit", _exit_dec, _Process);
_Process = __decorateElement(_init3, 0, "Process", _Process_decorators, _Process);
__runInitializers(_init3, 1, _Process);
var Process = _Process;

// ../../../../../usr/share/ags/js/lib/time.ts
var _cancelled_dec, _now_dec, _a6, _Timer_decorators, _init4;
_Timer_decorators = [register()];
var _Timer = class _Timer extends (_a6 = GObject.Object, _now_dec = [signal()], _cancelled_dec = [signal()], _a6) {
  constructor() {
    super(...arguments);
    __runInitializers(_init4, 5, this);
  }
  now() {
  }
  cancelled() {
  }
  static interval(interval2, callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (immediate.is_destroyed()) immediate.destroy();
      if (source.is_destroyed()) source.destroy();
    });
    const immediate = setTimeout(now);
    const source = setInterval(now, interval2);
    return timer;
  }
  static timeout(interval2, callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (source.is_destroyed()) source.destroy();
    });
    const source = setTimeout(now, interval2);
    return timer;
  }
  static idle(callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (source.is_destroyed()) source.destroy();
    });
    const source = setTimeout(now);
    return timer;
  }
  static new(onNow, onCancelled) {
    const timer = new _Timer();
    const now = timer.connect("now", () => void onNow?.());
    const cancelled = timer.connect("cancelled", () => {
      timer.disconnect(now);
      timer.disconnect(cancelled);
      onCancelled?.();
    });
    return { timer, now: () => timer.now() };
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
  cancel() {
    this.cancelled();
  }
};
_init4 = __decoratorStart(_a6);
__decorateElement(_init4, 1, "now", _now_dec, _Timer);
__decorateElement(_init4, 1, "cancelled", _cancelled_dec, _Timer);
_Timer = __decorateElement(_init4, 0, "Timer", _Timer_decorators, _Timer);
__runInitializers(_init4, 1, _Timer);
var Timer = _Timer;
var { interval, timeout, idle } = Timer;

// ns/services/SessionManagerScreenService/index.ts
var [windowVisible, setWindowVisible] = createState(false);
var useSessionManagerScreenService = () => {
  return {
    windowVisible,
    setWindowVisible
  };
};

// ns/libs/gnim-extensions/createComputedMap.ts
function createObjectFromKeyList(keys2, value) {
  return keys2.reduce((acc, key) => {
    acc[key] = value;
    return acc;
  }, {});
}
var createComputedMap = (keyListAccessor, keyAccessor, initValue) => {
  const [stateMap, setStateMap] = createState(createObjectFromKeyList(keyListAccessor.get(), initValue));
  const accessor = createComputed([keyAccessor, stateMap], (keyValue, stateMapValues) => {
    return stateMapValues[keyValue];
  });
  const set2 = (value, key) => {
    const valuesMap = { ...stateMap.get() };
    if (key) {
      valuesMap[key] = value;
    } else {
      valuesMap[keyAccessor.get()] = value;
    }
    setStateMap(valuesMap);
  };
  const createSetterByIndex = (key) => {
    return (value) => set2(value, key);
  };
  return {
    accessor,
    set: set2,
    createSetterByIndex,
    stateList: stateMap
  };
};

// ns/libs/gnim-extensions/createComputedArray.ts
function createComputedArray(deps) {
  return createComputed(deps, (...arrays) => {
    const result = [];
    arrays.forEach((arr) => {
      result.push(...arr);
    });
    return result;
  });
}

// ns/libs/gnim-extensions/createDisposeManager.ts
function createDisposeManager() {
  const disposes = [];
  const disposesExecutor = () => {
    const errors = [];
    while (disposes.length) {
      const dispose = disposes.pop();
      try {
        dispose();
      } catch (error) {
        errors.push(error instanceof Error ? error : new Error(String(error)));
      }
    }
    if (errors.length > 0) {
      throw new AggregateError(
        errors,
        `During disposal, ${errors.length} error(s) occurred`
      );
    }
  };
  return [disposes, disposesExecutor];
}

// ns/libs/gnim-extensions/toAccessor.ts
function toAccessor(value) {
  return value instanceof Accessor ? value : new Accessor(() => value);
}

// ns/libs/greetd-ipc/GreetdIPC.ts
import Gio7 from "gi://Gio";
import GLib8 from "gi://GLib";

// ns/services/LoggerService/index.ts
var fileLogger = null;
function useLogger() {
  if (!fileLogger) {
    fileLogger = new FileLogger();
  }
  return {
    logger: fileLogger
  };
}

// ns/libs/greetd-ipc/GreetdIPC.ts
Gio7._promisify(Gio7.InputStream.prototype, "read_bytes_async", "read_bytes_finish");
var GreetdIPC = {
  /**
     * Shorthand for creating a session, posting the password,
     * and starting the session with the given `cmd`
     * which is parsed with [func@GLib.shell_parse_argv].
     */
  async login(username, password, cmd) {
    return this.login_with_env(username, password, cmd, []);
  },
  /**
     * Same as [GreetdIPC.login] but allow for setting additional env
     * in the form of `name=value` pairs.
     */
  async login_with_env(username, password, cmd, env2) {
    const { logger } = useLogger();
    let argv = [];
    try {
      const [success, parsed_argv] = GLib8.shell_parse_argv(cmd);
      if (success && parsed_argv) {
        argv = parsed_argv;
      } else {
        throw new Error("Failed to parse command");
      }
    } catch (e) {
      logger.error(e);
      throw e;
    }
    try {
      const createSessionResponse = await new CreateSession(username).send();
      logger.log(createSessionResponse);
      if (createSessionResponse instanceof AuthMessageResponse && createSessionResponse.auth_message_type === AuthMessageType.SECRET) {
        const authMessageResponse = await new PostAuthMessage(password).send();
        logger.log(authMessageResponse);
        if (authMessageResponse instanceof ErrorResponse) {
          throw new Error(`${authMessageResponse.description}`);
        } else if (authMessageResponse instanceof AuthMessageResponse) {
          throw new Error(`${authMessageResponse.auth_message}`);
        }
      }
      const startSessionResponse = await new StartSession(argv, env2).send();
      logger.log(startSessionResponse);
      if (startSessionResponse instanceof ErrorResponse) {
        throw new Error(`${startSessionResponse.description}`);
      }
    } catch (err) {
      logger.error(err);
      await new CancelSession().send();
      throw err;
    }
  }
};
var Request = class {
  serialize() {
    const data = {};
    for (const [key, value] of Object.entries(this)) {
      if (Object.prototype.hasOwnProperty.call(this, key)) {
        data[key] = value;
      }
    }
    data.type = this.type_name;
    return JSON.stringify(data);
  }
  bytes_to_int(bytes) {
    const data = bytes.get_data();
    let value = 0;
    if (data) {
      for (let i = 0; i < data.length; i++) {
        value = value << 8 | data[i];
      }
    }
    return value;
  }
  async send() {
    const sock = GLib8.getenv("GREETD_SOCK");
    if (!sock) {
      throw new Gio7.IOErrorEnum({
        code: Gio7.IOErrorEnum.NOT_FOUND,
        message: "greetd socket not found"
      });
    }
    const client = new Gio7.SocketClient();
    const addr = new Gio7.UnixSocketAddress({ path: sock });
    const conn = client.connect(addr, null);
    const payload = this.serialize();
    const ostream = new Gio7.DataOutputStream({
      base_stream: conn.output_stream,
      byte_order: Gio7.DataStreamByteOrder.HOST_ENDIAN
    });
    ostream.put_int32(payload.length, null);
    ostream.put_string(payload, null);
    ostream.close(null);
    const istream = conn.input_stream;
    const response_head = await istream.read_bytes_async(4, GLib8.PRIORITY_DEFAULT, null);
    const response_length = this.bytes_to_int(response_head);
    const response_body = await istream.read_bytes_async(response_length, GLib8.PRIORITY_DEFAULT, null);
    conn.close(null);
    const response_data = response_body.get_data();
    if (!response_data) {
      throw new Gio7.IOErrorEnum({
        code: Gio7.IOErrorEnum.INVALID_DATA,
        message: "Empty response from server"
      });
    }
    const response_str = new TextDecoder().decode(response_data);
    const response_obj = JSON.parse(response_str);
    switch (response_obj.type) {
      case "success":
        return new SuccessResponse();
      case "error":
        return new ErrorResponse(response_obj);
      case "auth_message":
        return new AuthMessageResponse(response_obj);
      default:
        throw new Gio7.IOErrorEnum({
          code: Gio7.IOErrorEnum.NOT_FOUND,
          message: "unknown response type"
        });
    }
  }
};
var Response = class {
};
var CreateSession = class extends Request {
  get type_name() {
    return "create_session";
  }
  constructor(username) {
    super();
    this.username = username;
  }
};
var PostAuthMessage = class extends Request {
  get type_name() {
    return "post_auth_message_response";
  }
  constructor(response) {
    super();
    this.response = response;
  }
};
var StartSession = class extends Request {
  get type_name() {
    return "start_session";
  }
  constructor(cmd, env2 = []) {
    super();
    this.cmd = cmd;
    this.env = env2;
  }
};
var CancelSession = class extends Request {
  get type_name() {
    return "cancel_session";
  }
};
var SuccessResponse = class extends Response {
  static {
    this.TYPE = "success";
  }
  constructor() {
    super();
  }
};
var ErrorResponse = class extends Response {
  static {
    this.TYPE = "error";
  }
  constructor(record) {
    super();
    this.error_type = ErrorType.from_string(record.error_type);
    this.description = record.description;
  }
};
var ErrorType = class _ErrorType {
  static {
    this.AUTH_ERROR = "auth_error";
  }
  static {
    this.ERROR = "error";
  }
  static from_string(str) {
    switch (str) {
      case "auth_error":
        return _ErrorType.AUTH_ERROR;
      case "error":
        return _ErrorType.ERROR;
      default:
        throw new Gio7.IOErrorEnum({
          code: Gio7.IOErrorEnum.FAILED,
          message: `unknown error_type: ${str}`
        });
    }
  }
};
var AuthMessageResponse = class extends Response {
  static {
    this.TYPE = "auth_message";
  }
  constructor(record) {
    super();
    this.auth_message_type = AuthMessageType.from_string(record.auth_message_type);
    this.auth_message = record.auth_message;
  }
};
var AuthMessageType = class _AuthMessageType {
  static {
    this.VISIBLE = "visible";
  }
  static {
    this.SECRET = "secret";
  }
  static {
    this.INFO = "info";
  }
  static {
    this.ERROR = "error";
  }
  static from_string(str) {
    switch (str) {
      case "visible":
        return _AuthMessageType.VISIBLE;
      case "secret":
        return _AuthMessageType.SECRET;
      case "info":
        return _AuthMessageType.INFO;
      case "error":
        return _AuthMessageType.ERROR;
      default:
        throw new Gio7.IOErrorEnum({
          code: Gio7.IOErrorEnum.FAILED,
          message: `unknown message_type: ${str}`
        });
    }
  }
};

// ../../../../../usr/share/ags/js/lib/file.ts
import Gio8 from "gi://Gio";
import GLib9 from "gi://GLib";
function readFile(file) {
  const f = typeof file === "string" ? Gio8.File.new_for_path(file) : file;
  const [, bytes] = f.load_contents(null);
  return new TextDecoder().decode(bytes);
}
function writeFile(file, content) {
  const gfile = typeof file === "string" ? Gio8.File.new_for_path(file) : file;
  const path = typeof file === "string" ? file : gfile.get_path();
  if (!path) throw Error("path is null");
  const dir = GLib9.path_get_dirname(path);
  if (!GLib9.file_test(dir, GLib9.FileTest.IS_DIR)) {
    Gio8.File.new_for_path(dir).make_directory_with_parents(null);
  }
  gfile.replace_contents(
    new TextEncoder().encode(content),
    null,
    false,
    Gio8.FileCreateFlags.REPLACE_DESTINATION,
    null
  );
  return gfile;
}

// ns/libs/conf/parseConfig.ts
function parseConfig(text) {
  const config2 = {};
  const lines = text.split("\n");
  for (let line of lines) {
    line = line.trim();
    if (line.startsWith("#") || line === "") continue;
    if (line.match(/^[a-zA-Z_][a-zA-Z0-9_]*$/)) {
      config2[line] = true;
      continue;
    }
    const match = line.match(/^(\w+)\s*=\s*(.+)$/);
    if (match) {
      const key = match[1];
      let value = match[2].trim();
      if (value.match(/^\d+$/)) {
        value = parseInt(value);
      }
      config2[key] = value;
    }
  }
  return config2;
}

// ns/providers/pam-faillock/getPamFaillockConf.ts
function getPamFaillockConf() {
  const config2 = {
    deny: 3,
    unlock_time: 600
  };
  try {
    const parsed_config = parseConfig(readFile("/etc/security/faillock.conf"));
    if (typeof parsed_config.deny === "number") {
      config2.deny = parsed_config.deny;
    }
    if (typeof parsed_config.unlock_time === "number") {
      config2.unlock_time = parsed_config.unlock_time;
    }
    if (typeof parsed_config.dir === "string") {
      config2.dir = parsed_config.dir;
    }
  } catch (e) {
    logError(e);
  }
  return config2;
}

// ns/providers/pam-faillock/index.ts
var config;
function usePamFaillockConf() {
  if (!config) {
    config = getPamFaillockConf();
  }
  return config;
}

// ns/services/LoginStorageService/constants.ts
var STATE_FILE = "/var/lib/kotami/state";

// ns/services/LoginStorageService/readLoginStorageState.ts
function readLoginStorageState() {
  const { logger } = useLogger();
  try {
    const file = readFile(STATE_FILE);
    return file.length > 0 ? JSON.parse(file) : null;
  } catch (err) {
    logger.error(err);
    return null;
  }
}

// ns/services/LoginStorageService/writeLoginStorageState.ts
import Gio11 from "gi://Gio";

// ns/providers/users/index.ts
var GECOS_INDEX = {
  fullname: 0,
  address: 1,
  officePhone: 2,
  homePhone: 3,
  contact: 4
};
var PASSWD_INDEX = {
  username: 0,
  uid: 2,
  gid: 3,
  gecos: 4,
  home: 5,
  shell: 6
};
function parseGecos(content) {
  const gecos = content.split(",");
  return {
    fullname: gecos[GECOS_INDEX.fullname],
    address: gecos[GECOS_INDEX.address],
    officePhone: gecos[GECOS_INDEX.officePhone],
    homePhone: gecos[GECOS_INDEX.homePhone],
    contact: gecos[GECOS_INDEX.contact]
  };
}
function parsePasswd(content) {
  const recordStringList = content.split("\n");
  return recordStringList.filter((recordString) => {
    return typeof recordString === "string" && recordString.length > 0;
  }).map((u) => {
    const user = u.split(":");
    return {
      username: user[PASSWD_INDEX.username],
      uid: Number(user[PASSWD_INDEX.uid]),
      gid: Number(user[PASSWD_INDEX.gid]),
      gecos: parseGecos(user[PASSWD_INDEX.gecos]),
      home: user[PASSWD_INDEX.home],
      shell: user[PASSWD_INDEX.shell]
    };
  });
}
function getAvailableUsers() {
  return parsePasswd(readFile("/etc/passwd")).filter((u) => {
    return u.uid >= 1e3 && u.username !== "nobody";
  });
}

// ns/utils/createImagePainitable.ts
import Gio9 from "gi://Gio";
function createImagePainitable(filePath) {
  try {
    const file = Gio9.File.new_for_path(filePath);
    return Gdk2.Texture.new_from_file(file);
  } catch {
    return;
  }
}

// ns/services/UserListService/createUserList.ts
var createUserListItem = (passwdRecord) => {
  return {
    userName: passwdRecord.username,
    realName: passwdRecord.gecos.fullname.length > 0 ? passwdRecord.gecos.fullname : passwdRecord.username,
    userPicture: createImagePainitable(`/var/lib/AccountsService/icons/${passwdRecord.username}`) || createImagePainitable(`/home/${passwdRecord.username}/.face`)
  };
};
var createUserList = (passwdRecordList) => {
  return passwdRecordList.map(createUserListItem);
};

// ns/services/UserListService/index.ts
var [userList, setUserList] = createState([]);
var [selectedUserIndex, setSelectedUserIndex] = createState(-1);
var selectedUser = selectedUserIndex((index) => userList.get()[index]);
var selectedUserName = createComputed([selectedUser], (user) => {
  return user.userName;
});
var setSelectedUserIndexByUserName = (userName) => {
  const index = userList.get().findIndex((user) => user.userName === userName);
  setSelectedUserIndex(index >= 0 ? index : 0);
};
var getCashedSessionByUser = (cachedLoginStorageRecord2) => {
  return cachedLoginStorageRecord2.get()?.user;
};
var useUserListService = () => {
  const { cachedLoginStorageRecord: cachedLoginStorageRecord2 } = useLoginStorageService();
  if (userList.get().length === 0) {
    setUserList(createUserList(getAvailableUsers()));
  }
  const activeUserNameString = void 0;
  const selectedUserNameString = getCashedSessionByUser(cachedLoginStorageRecord2);
  if (activeUserNameString && selectedUserIndex.get() < 0) {
    setSelectedUserIndexByUserName(activeUserNameString);
  } else if (selectedUserNameString && selectedUserIndex.get() < 0) {
    setSelectedUserIndexByUserName(selectedUserNameString);
  } else if (selectedUserIndex.get() < 0) {
    setSelectedUserIndex(0);
  }
  return {
    userList,
    selectedUser,
    selectedUserIndex,
    selectedUserName,
    setSelectedUserIndex
  };
};

// ns/providers/sessions/index.ts
import Gio10 from "gi://Gio";
import GLib10 from "gi://GLib";
var directories = [
  "/usr/share/wayland-sessions",
  "/usr/share/xsessions"
];
function getAvailableSessions() {
  const sessions = [];
  directories.forEach((dirPath) => {
    const dir = Gio10.File.new_for_path(dirPath);
    try {
      if (!dir.query_exists(null)) {
        console.log(`Directory ${dirPath} does not exist. Skipping.`);
        return;
      }
      const enumerator = dir.enumerate_children(
        "standard::name,standard::type",
        Gio10.FileQueryInfoFlags.NONE,
        null
      );
      let fileInfo;
      while ((fileInfo = enumerator.next_file(null)) !== null) {
        const name = fileInfo.get_name();
        if (name.endsWith(".desktop")) {
          const file = dir.get_child(name);
          const keyFile = new GLib10.KeyFile();
          try {
            keyFile.load_from_file(file.get_path(), GLib10.KeyFileFlags.KEEP_TRANSLATIONS);
            const sessionInfo = {
              filename: name,
              path: file.get_path(),
              type: dirPath.includes("wayland") ? "wayland" : "x11",
              name: null,
              exec: null,
              comment: null
            };
            try {
              sessionInfo.name = keyFile.get_locale_string("Desktop Entry", "Name", null);
            } catch {
              sessionInfo.name = null;
            }
            try {
              sessionInfo.exec = keyFile.get_string("Desktop Entry", "Exec");
            } catch {
              sessionInfo.exec = null;
            }
            try {
              sessionInfo.comment = keyFile.get_locale_string("Desktop Entry", "Comment", null);
            } catch {
              sessionInfo.comment = null;
            }
            sessions.push(sessionInfo);
          } catch (e) {
            console.warn(`Error loading file ${name}: ${getErrorMessage(e)}`);
          }
        }
      }
      enumerator.close(null);
    } catch (e) {
      console.warn(`Error accessing directory ${dirPath}: ${getErrorMessage(e)}`);
    }
  });
  return sessions;
}

// ns/services/SessionListService/createSessionList.ts
var createSessionList = () => {
  const sessionList2 = getAvailableSessions();
  const nameCount = sessionList2.reduce(
    (acc, item) => {
      if (item.name) {
        acc[item.name] = (acc[item.name] || 0) + 1;
      }
      return acc;
    },
    {}
  );
  return sessionList2.filter((item) => item.name && nameCount[item.name] === 1).sort((a, b) => a.name && b.name ? a.name.localeCompare(b.name) : -1);
};

// ns/services/SessionListService/index.ts
var [sessionList, setSessionList] = createState([]);
var [selectedSessionIndex, setSelectedSessionIndex] = createState(-1);
var selectedSession = selectedSessionIndex((index) => sessionList.get()[index]);
var setSelectedSessionIndexByPath = (path) => {
  const index = sessionList.get().findIndex((session) => session.path === path);
  setSelectedSessionIndex(index >= 0 ? index : 0);
};
var getCashedSessionByUser2 = (cachedLoginStorageRecord2, selectedUser2) => {
  const sessions = cachedLoginStorageRecord2.get()?.sessions;
  const userName = selectedUser2.get().userName;
  return sessions && sessions[userName];
};
var useSessionListService = () => {
  const [disposes, disposeSessionListService] = createDisposeManager();
  const { cachedLoginStorageRecord: cachedLoginStorageRecord2 } = useLoginStorageService();
  const { selectedUser: selectedUser2 } = useUserListService();
  if (sessionList.get().length === 0) {
    setSessionList(createSessionList());
  }
  const activeSessionRecord = void 0;
  const selectedSessionRecord = getCashedSessionByUser2(cachedLoginStorageRecord2, selectedUser2);
  if (activeSessionRecord && selectedSessionIndex.get() < 0) {
    setSelectedSessionIndexByPath(activeSessionRecord);
  } else if (selectedSessionRecord && selectedSessionIndex.get() < 0) {
    setSelectedSessionIndexByPath(selectedSessionRecord);
  } else if (selectedSessionIndex.get() < 0) {
    setSelectedSessionIndex(0);
  }
  disposes.push(selectedUser2.subscribe(() => {
    const user = selectedUser2.get();
    const loginCache = cachedLoginStorageRecord2.get();
    const cachedSessionPath = loginCache && loginCache.sessions[user.userName];
    if (cachedSessionPath) {
      setSelectedSessionIndexByPath(cachedSessionPath);
    } else {
      setSelectedSessionIndex(0);
    }
  }));
  return {
    sessionList,
    selectedSession,
    selectedSessionIndex,
    setSelectedSessionIndex,
    disposeSessionListService
  };
};

// ns/services/LoginStorageService/writeLoginStorageState.ts
function writeLoginStorageState() {
  const { logger } = useLogger();
  const { selectedUser: selectedUser2 } = useUserListService();
  const { selectedSession: selectedSession2, disposeSessionListService } = useSessionListService();
  const { cachedLoginStorageRecord: cachedLoginStorageRecord2 } = useLoginStorageService();
  const state = {
    user: selectedUser2.get().userName,
    sessions: {
      ...cachedLoginStorageRecord2.get()?.sessions,
      [selectedUser2.get().userName]: selectedSession2.get().path
    }
  };
  disposeSessionListService();
  const file = Gio11.File.new_for_path(STATE_FILE);
  if (!file.query_exists(null)) {
    try {
      const parentDir = file.get_parent();
      if (parentDir && !parentDir.query_exists(null)) {
        parentDir.make_directory_with_parents(null);
      }
      const outputStream = file.create(Gio11.FileCreateFlags.NONE, null);
      outputStream.close(null);
    } catch (e) {
      logger.error(e);
    }
  }
  try {
    writeFile(STATE_FILE, JSON.stringify(state));
  } catch (e) {
    logger.error(e);
  }
}

// ns/services/LoginStorageService/index.ts
var [cachedLoginStorageRecord, setCachedLoginStorageRecord] = createState(null);
var useLoginStorageService = () => {
  if (cachedLoginStorageRecord.get() === null) {
    setCachedLoginStorageRecord(readLoginStorageState());
  }
  return {
    cachedLoginStorageRecord
  };
};

// ns/services/LoginService/index.ts
var pamConfig = usePamFaillockConf();
var { userList: userList2, selectedUserName: selectedUserName2 } = useUserListService();
var { setWindowVisible: setWindowVisible2 } = useSessionManagerScreenService();
var keys = createComputed([userList2], (users) => {
  return users.map((user) => user.userName);
});
var { accessor: isLoggingIn, set: setIsLoggingIn } = createComputedMap(keys, selectedUserName2, false);
var { accessor: isLogginError, set: setIsLoginError } = createComputedMap(keys, selectedUserName2, false);
var { accessor: remainingAttempts, set: setRemainingAttempts } = createComputedMap(keys, selectedUserName2, pamConfig.deny);
var { accessor: unlockInSeconds, set: setUnlockInSeconds } = createComputedMap(keys, selectedUserName2, pamConfig.unlock_time);
var { accessor: fraction, set: setFraction } = createComputedMap(keys, selectedUserName2, 0);
var isLockedOut = createComputed([remainingAttempts], (attempts) => {
  return attempts === 0;
});
var isWaiting = createComputed([isLoggingIn, isLockedOut], (isLoggingInValue, isLockedOutValue) => {
  return isLoggingInValue || isLockedOutValue;
});
var resetError = (index) => {
  setIsLoginError(false, index);
};
var resetRemainingAttempts = (index) => {
  setRemainingAttempts(pamConfig.deny, index);
  resetError(index);
};
var beforeLogin = (index) => {
  setIsLoginError(false, index);
  setIsLoggingIn(true, index);
};
var onLoginFailed = (index, attempts) => {
  setIsLoginError(true, index);
  setIsLoggingIn(false, index);
  setRemainingAttempts(attempts, index);
};
var login = async (password) => {
  const { logger } = useLogger();
  const selectedUserNameValue = selectedUserName2.get();
  const currentAttempts = remainingAttempts.get();
  if (currentAttempts > 0) {
    beforeLogin(selectedUserNameValue);
    const { selectedUser: selectedUser2 } = useUserListService();
    const { selectedSession: selectedSession2 } = useSessionListService();
    const username = selectedUser2.get().userName;
    const command = selectedSession2.get().exec;
    if (username && command) {
      try {
        await GreetdIPC.login(username, password, command);
        resetRemainingAttempts(selectedUserNameValue);
        writeLoginStorageState();
        timeout(500, () => {
          setWindowVisible2(false);
          timeout(500, () => {
            app_default.quit(0);
          });
        });
      } catch (err) {
        onLoginFailed(selectedUserNameValue, currentAttempts - 1);
        logger.error(err);
      }
    }
  }
};
var useLoginService = () => {
  return {
    isLockedOut,
    isLoggingIn,
    isWaiting,
    isLogginError,
    fraction,
    unlockInSeconds,
    remainingAttempts,
    login,
    setUnlockInSeconds,
    setFraction,
    resetRemainingAttempts,
    resetError
  };
};

// ../../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
import Gtk4 from "gi://Gtk?version=4.0";
import Astal2 from "gi://Astal?version=4.0";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Gio12 from "gi://Gio?version=2.0";
var adw = await import("gi://Adw").then((m) => m.default).catch(() => null);
var dummyBuilder = new Gtk3.Builder();
var { intrinsicElements } = configue({
  initProps(ctor) {
    if (ctor === Gtk3.Stack) {
      const keys2 = [
        "visibleChildName",
        "visible_child_name"
      ];
      return keys2;
    }
    if (adw && ctor === adw.ToggleGroup) {
      const keys2 = [
        "active",
        "activeName",
        "active_name"
      ];
      return keys2;
    }
  },
  setCss(object, css) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter2 = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk3.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk3.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter2(css.get());
      const dispose = css.subscribe(() => setter2(css.get()));
      onCleanup(dispose);
    } else {
      setter2(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  textNode(text) {
    return Gtk3.Label.new(text.toString());
  },
  // `set_child` and especially `remove` might be way too generic and there might
  // be cases where it does not actually do what we want it to do
  //
  // if there is a usecase for either of these two that does something else than
  // we expect it to do here in a JSX context we have to check for known instances
  removeChild(parent, child) {
    if (parent instanceof Gtk3.Widget && child instanceof Gtk3.EventController) {
      return parent.remove_controller(child);
    }
    if ("set_child" in parent && typeof parent.set_child == "function") {
      return parent.set_child(null);
    }
    if ("remove" in parent && typeof parent.remove == "function") {
      return parent.remove(child);
    }
    throw Error(`cannot remove ${child} from ${parent}`);
  },
  appendChild(parent, child) {
    if (child instanceof Gtk3.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
      return parent.set_adjustment(child);
    }
    if (child instanceof Gtk3.Widget && parent instanceof Gtk3.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
      return parent.add_named(child, child.name);
    }
    if (child instanceof Gtk3.Popover && parent instanceof Gtk3.MenuButton) {
      return parent.set_popover(child);
    }
    if (child instanceof Gio12.MenuModel && (parent instanceof Gtk3.MenuButton || parent instanceof Gtk3.PopoverMenu)) {
      return parent.set_menu_model(child);
    }
    if (child instanceof Gio12.MenuItem && parent instanceof Gio12.Menu) {
    }
    if (child instanceof Gtk3.Window && parent instanceof Gtk3.Application) {
      return parent.add_window(child);
    }
    if (child instanceof Gtk3.TextBuffer && parent instanceof Gtk3.TextView) {
      return parent.set_buffer(child);
    }
    if (parent instanceof Gtk3.Buildable) {
      return parent.vfunc_add_child(dummyBuilder, child, getType(child));
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk4.Box,
  button: Gtk4.Button,
  centerbox: Gtk4.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk4.DrawingArea,
  entry: Gtk4.Entry,
  image: Gtk4.Image,
  label: Gtk4.Label,
  levelbar: Gtk4.LevelBar,
  menubutton: Gtk4.MenuButton,
  overlay: Gtk4.Overlay,
  popover: Gtk4.Popover,
  revealer: Gtk4.Revealer,
  scrolledwindow: Gtk4.ScrolledWindow,
  slider: Astal2.Slider,
  stack: Gtk4.Stack,
  switch: Gtk4.Switch,
  togglebutton: Gtk4.ToggleButton,
  window: Astal2.Window
});

// ns/widgets/SessionManagerScreen/ErrorMessage/index.tsx
function ErrorMessage({ cssClasses }) {
  const { unlockInSeconds: unlockInSec, remainingAttempts: remainingAttempts2, isLockedOut: isLockedOut2, isLogginError: isLogginError2 } = useLoginService();
  const message = createComputed([
    isLockedOut2,
    remainingAttempts2,
    unlockInSec,
    isLogginError2
  ], (isLockedOutValue, remainingAttemptsValue, unlockInSecondsValue, isLogginErrorValue) => {
    if (!isLogginErrorValue) {
      return "";
    } else if (isLockedOutValue) {
      return `The attempts are over. Wait ${unlockInSecondsValue} seconds`;
    } else {
      return `Failed to log in. ${remainingAttemptsValue} attempts left`;
    }
  });
  const messageCssClasses = createComputed([isLockedOut2, isLogginError2], (isLockedOutValue, isLogginErrorValue) => {
    if (isLockedOutValue) {
      return ["warning"];
    } else if (isLogginErrorValue) {
      return ["error"];
    } else {
      return [];
    }
  });
  return /* @__PURE__ */ jsx(
    Gtk2.Label,
    {
      cssClasses: createComputedArray([
        toAccessor(cssClasses || []),
        messageCssClasses
      ]),
      label: message
    }
  );
}

// ns/widgets/SessionManagerScreen/PasswordField/index.tsx
import GLib12 from "gi://GLib";

// ns/widgets/SessionManagerScreen/PasswordField/createCountdownTimer.ts
import GLib11 from "gi://GLib";
function createCountdownTimer(intervalInSeconds, setRemainingSeconds, setFraction2, resetCallback) {
  const tickCallbackIdMap = {};
  const createTicker = (key, startTimeInSeconds) => {
    return (widget) => {
      const currentTimeInSeconds = GLib11.get_monotonic_time() / 1e6;
      const elapsed = currentTimeInSeconds - startTimeInSeconds;
      const remaining = intervalInSeconds - elapsed;
      const fraction2 = remaining / intervalInSeconds;
      setRemainingSeconds(Math.ceil(remaining), key);
      setFraction2(fraction2, key);
      if (remaining <= 0) {
        widget.remove_tick_callback(tickCallbackIdMap[key]);
        tickCallbackIdMap[key] = 0;
        resetCallback(key);
      }
      return GLib11.SOURCE_CONTINUE;
    };
  };
  function start(progressBar) {
    const { selectedUserName: selectedUserName3 } = useUserListService();
    const userIndex = selectedUserName3.get();
    const startTimeInSeconds = GLib11.get_monotonic_time() / 1e6;
    progressBar.set_inverted(true);
    const onTick = createTicker(userIndex, startTimeInSeconds);
    tickCallbackIdMap[userIndex] = progressBar.add_tick_callback(onTick);
  }
  return start;
}

// ns/widgets/SessionManagerScreen/PasswordField/createPulseTimer.ts
function createPulseTimer() {
  let pulseTimer = null;
  function startPulseTimer(progressBar) {
    progressBar.set_fraction(0);
    progressBar.set_inverted(false);
    pulseTimer = interval(60, () => progressBar.pulse());
  }
  function stopPulseTimer() {
    if (pulseTimer !== null) {
      pulseTimer.cancel();
      pulseTimer = null;
    }
  }
  return {
    startPulseTimer,
    stopPulseTimer
  };
}

// sass:/home/shimarulin/Проекты/Workstation/kotami/ns/widgets/SessionManagerScreen/PasswordField/style.scss
var style_default = "@keyframes shake-horizontal-light {\n  0% {\n    transform: translateX(0);\n  }\n  10% {\n    transform: translateX(-5px);\n  }\n  20% {\n    transform: translateX(5px);\n  }\n  30% {\n    transform: translateX(-5px);\n  }\n  40% {\n    transform: translateX(5px);\n  }\n  50% {\n    transform: translateX(-5px);\n  }\n  60% {\n    transform: translateX(5px);\n  }\n  70% {\n    transform: translateX(-5px);\n  }\n  80% {\n    transform: translateX(3px);\n  }\n  90% {\n    transform: translateX(-3px);\n  }\n  100% {\n    transform: translateX(0);\n  }\n}\n.UserPasswordEntry.error {\n  animation: shake-horizontal-light 600ms ease-out 0s 1 normal none;\n}\n\n.PasswordFieldProgress trough {\n  border-radius: 0;\n  min-height: 2px;\n  background-color: transparent;\n}\n.PasswordFieldProgress progress {\n  border-radius: 0;\n}";

// ns/widgets/SessionManagerScreen/PasswordField/index.tsx
app_default.apply_css(style_default);
function PasswordField({ cssClasses }) {
  const pamConfig2 = usePamFaillockConf();
  const { isLoggingIn: isLoggingIn2, isLockedOut: isLockedOut2, isWaiting: isWaiting2, isLogginError: isLogginError2, fraction: fraction2, login: login2, resetError: resetError2, setUnlockInSeconds: setUnlockInSeconds2, setFraction: setFraction2, resetRemainingAttempts: resetRemainingAttempts2 } = useLoginService();
  const startCountdown = createCountdownTimer(pamConfig2.unlock_time, setUnlockInSeconds2, setFraction2, resetRemainingAttempts2);
  const { startPulseTimer, stopPulseTimer } = createPulseTimer();
  const [disposes, dispose] = createDisposeManager();
  const messageCssClasses = createComputed([isLogginError2], (isLogginErrorValue) => {
    if (isLogginErrorValue) {
      return ["error"];
    } else {
      return [];
    }
  });
  let progressBar;
  const pulseHandler = () => {
    if (isLoggingIn2.get()) {
      startPulseTimer(progressBar);
    } else {
      stopPulseTimer();
    }
  };
  const countdownHandler = () => {
    if (isLockedOut2.get()) {
      startCountdown(progressBar);
    }
  };
  disposes.push(isLoggingIn2.subscribe(pulseHandler));
  disposes.push(isLockedOut2.subscribe(countdownHandler));
  onCleanup(() => {
    dispose();
  });
  return /* @__PURE__ */ jsxs(Gtk2.Overlay, { children: [
    /* @__PURE__ */ jsx(
      Gtk2.PasswordEntry,
      {
        $: (passwordEntry) => {
          disposes.push(isWaiting2.subscribe(() => {
            if (isWaiting2.get()) {
              GLib12.idle_add(GLib12.PRIORITY_DEFAULT_IDLE, () => {
                passwordEntry.focusable = false;
                passwordEntry.editable = false;
                passwordEntry.set_state_flags(Gtk2.StateFlags.INSENSITIVE, true);
                return GLib12.SOURCE_REMOVE;
              });
            } else {
              passwordEntry.focusable = true;
              passwordEntry.editable = true;
              passwordEntry.sensitive = true;
              passwordEntry.grab_focus();
            }
          }));
        },
        cssClasses: createComputedArray([
          toAccessor(cssClasses || []),
          toAccessor(["UserPasswordEntry"]),
          messageCssClasses
        ]),
        showPeekIcon: true,
        canFocus: true,
        onActivate: ({ text }) => {
          login2(text);
        },
        onNotifyText: () => resetError2(),
        onRealize: (passwordEntry) => {
          passwordEntry.grab_focus();
        }
      }
    ),
    /* @__PURE__ */ jsx(
      Gtk2.ProgressBar,
      {
        $type: "overlay",
        $: (self) => {
          progressBar = self;
          countdownHandler();
        },
        cssClasses: ["horizontal", "PasswordFieldProgress"],
        valign: Gtk2.Align.END,
        orientation: Gtk2.Orientation.HORIZONTAL,
        marginStart: 8,
        marginEnd: 8,
        marginBottom: 3,
        canTarget: false,
        pulseStep: 0.15,
        fraction: fraction2,
        visible: isWaiting2
      }
    )
  ] });
}

// ns/widgets/SessionManagerScreen/SessionSelect/index.tsx
function SessionSelect({ cssClasses }) {
  const { sessionList: sessionList2, selectedSessionIndex: selectedSessionIndex2, setSelectedSessionIndex: setSelectedSessionIndex2, disposeSessionListService } = useSessionListService();
  onCleanup(() => {
    disposeSessionListService();
  });
  return /* @__PURE__ */ jsx(
    Gtk2.DropDown,
    {
      cssClasses: createComputedArray([toAccessor(cssClasses || [])]),
      model: Gtk2.StringList.new(sessionList2.get().map((s) => s.name || "")),
      visible: sessionList2.get().length > 1,
      selected: selectedSessionIndex2,
      onNotifySelectedItem: (s) => {
        setSelectedSessionIndex2(s.selected);
      }
    }
  );
}

// sass:/home/shimarulin/Проекты/Workstation/kotami/ns/widgets/SessionManagerScreen/style.scss
var style_default2 = ".SessionManagerScreen {\n  opacity: 0;\n  transition: opacity 500ms ease-in-out;\n}\n.SessionManagerScreen.SessionManagerScreenVisible {\n  opacity: 1;\n}\n.SessionManagerScreen .SessionManagerContainer .SessionManagerView .SessionManagerFields {\n  margin-top: 2em;\n  margin-bottom: 2em;\n}\n.SessionManagerScreen .SessionManagerContainer .SessionManagerView .SessionManagerFields .SessionManagerField {\n  margin-top: 1em;\n}\n.SessionManagerScreen .SessionManagerContainer .SessionManagerView .SessionManagerFields .UserPasswordEntry {\n  font-family: var(--monospace-font-family);\n}";

// ns/widgets/SessionManagerScreen/UserCarousel/index.tsx
import Adw from "gi://Adw";
import Pango from "gi://Pango";

// sass:/home/shimarulin/Проекты/Workstation/kotami/ns/widgets/SessionManagerScreen/UserCarousel/style.scss
var style_default3 = ".UserCarouselButton {\n  background-color: transparent;\n  border-radius: 0px;\n  padding-top: 62px;\n  padding-bottom: 180px;\n}\n.UserCarouselButton image {\n  padding: 16px;\n  border-radius: 9999px;\n  background-color: color-mix(in srgb, currentColor 10%, transparent);\n  transition: all 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n.UserCarouselButton:hover image {\n  background-color: color-mix(in srgb, currentColor 10%, transparent);\n}\n\n.UserCarousel .UserCarouselSlide avatar {\n  transition: all 100ms ease-in-out;\n  transform: scale(0.85);\n}\n.UserCarousel .UserCarouselSlideActive avatar {\n  transform: scale(1);\n}\n.UserCarousel .UserCarouselCaptionContainer {\n  padding-top: 8px;\n  padding-bottom: 12px;\n}\n.UserCarousel .UserCarouselCaptionContainer .UserCarouselCaption {\n  font-size: 1.75em;\n  line-height: 1.25;\n}";

// ns/widgets/SessionManagerScreen/UserCarousel/index.tsx
app_default.apply_css(style_default3);
var UserNameLabel = (name) => /* @__PURE__ */ jsx(
  Gtk2.Label,
  {
    cssClasses: ["UserCarouselCaption"],
    label: name,
    maxWidthChars: 12,
    widthRequest: 220,
    ellipsize: Pango.EllipsizeMode.END
  }
);
function UserCarousel() {
  const { userList: userList3, selectedUserIndex: selectedUserIndex2, setSelectedUserIndex: setSelectedUserIndex2 } = useUserListService();
  const [userListCarousel, setUserListCarousel] = createState(null);
  const navigationButtonProps = {
    cursor: new Gdk2.Cursor({ name: "pointer" }),
    cssClasses: ["UserCarouselButton"],
    visible: userList3.get().length > 1
  };
  const scrollTo = (index, animation = true) => {
    const userListCarouselRef = userListCarousel.get();
    if (userListCarouselRef) {
      const targetPage = userListCarouselRef.get_nth_page(index);
      userListCarouselRef.scroll_to(targetPage, animation);
    }
  };
  const [disposes, dispose] = createDisposeManager();
  disposes.push(selectedUserIndex2.subscribe(() => {
    const position = selectedUserIndex2.get();
    scrollTo(position);
  }));
  onCleanup(() => {
    dispose();
  });
  return /* @__PURE__ */ jsxs(Gtk2.Box, { orientation: Gtk2.Orientation.HORIZONTAL, children: [
    /* @__PURE__ */ jsx(
      Gtk2.Button,
      {
        iconName: "go-previous",
        onClicked: () => {
          const userListCarouselRef = userListCarousel.get();
          if (userListCarouselRef) {
            if (userListCarouselRef.position > 0) {
              setSelectedUserIndex2(Math.ceil(userListCarouselRef.position) - 1);
            } else {
              setSelectedUserIndex2(userList3.get().length - 1);
            }
          }
        },
        ...navigationButtonProps
      }
    ),
    /* @__PURE__ */ jsxs(Gtk2.Box, { orientation: Gtk2.Orientation.VERTICAL, children: [
      /* @__PURE__ */ jsx(
        Adw.Carousel,
        {
          cssClasses: ["UserCarousel"],
          spacing: 24,
          hexpand: true,
          halign: Gtk2.Align.FILL,
          scrollParams: new Adw.SpringParams(1, 0.5, 1e3),
          allowLongSwipes: true,
          onRealize: (carousel) => {
            setUserListCarousel(carousel);
            scrollTo(selectedUserIndex2.get(), false);
          },
          onPageChanged: (carousel) => {
            setSelectedUserIndex2(Math.round(carousel.position));
          },
          children: /* @__PURE__ */ jsx(For, { each: userList3, children: (user, index) => /* @__PURE__ */ jsxs(
            Gtk2.Box,
            {
              cssClasses: createComputed(
                [selectedUserIndex2, index],
                (n, i) => ["UserCarouselSlide", ...n === i ? ["UserCarouselSlideActive"] : []]
              ),
              orientation: Gtk2.Orientation.VERTICAL,
              halign: Gtk2.Align.CENTER,
              vexpand: false,
              cursor: createComputed(
                [userList3],
                (arr) => arr.length > 1 ? new Gdk2.Cursor({ name: "pointer" }) : new Gdk2.Cursor({ name: "default" })
              ),
              widthRequest: 220,
              heightRequest: 270,
              opacity: createComputed(
                [selectedUserIndex2, index],
                (n, i) => n === i ? 1 : 0.5
              ),
              children: [
                /* @__PURE__ */ jsx(
                  Gtk2.GestureClick,
                  {
                    onReleased: () => {
                      setSelectedUserIndex2(index.get());
                    }
                  }
                ),
                /* @__PURE__ */ jsx(
                  Adw.Avatar,
                  {
                    size: 172,
                    text: user.realName,
                    showInitials: true,
                    customImage: user.userPicture
                  }
                ),
                /* @__PURE__ */ jsx(
                  Gtk2.Box,
                  {
                    cssClasses: ["UserCarouselCaptionContainer"],
                    orientation: Gtk2.Orientation.VERTICAL,
                    vexpand: true,
                    halign: Gtk2.Align.CENTER,
                    valign: Gtk2.Align.CENTER,
                    children: user.realName.length > 14 ? user.realName.split(" ").map(UserNameLabel) : UserNameLabel(user.realName)
                  }
                )
              ]
            }
          ) })
        }
      ),
      /* @__PURE__ */ jsx(With, { value: userListCarousel, children: (value) => value instanceof Adw.Carousel && /* @__PURE__ */ jsx(Adw.CarouselIndicatorDots, { carousel: value, visible: createComputed([userList3], (arr) => arr.length > 1) }) })
    ] }),
    /* @__PURE__ */ jsx(
      Gtk2.Button,
      {
        iconName: "go-next",
        onClicked: () => {
          const userListCarouselRef = userListCarousel.get();
          if (userListCarouselRef) {
            if (userListCarouselRef.position < userList3.get().length - 1) {
              setSelectedUserIndex2(Math.floor(userListCarouselRef.position) + 1);
            } else {
              setSelectedUserIndex2(0);
            }
          }
        },
        ...navigationButtonProps
      }
    )
  ] });
}

// ns/widgets/SessionManagerScreen/index.tsx
app_default.apply_css(style_default2);
function SessionManagerScreen(gdkmonitor) {
  const { TOP, LEFT, RIGHT, BOTTOM } = Astal.WindowAnchor;
  const { windowVisible: windowVisible2, setWindowVisible: setWindowVisible3 } = useSessionManagerScreenService();
  const windowCssClasses = createComputed([windowVisible2], (windowVisibleValue) => {
    return windowVisibleValue ? ["SessionManagerScreen", "SessionManagerScreenVisible"] : ["SessionManagerScreen"];
  });
  return /* @__PURE__ */ jsx(
    Astal.Window,
    {
      visible: true,
      name: "SessionManagerScreen",
      cssClasses: windowCssClasses,
      gdkmonitor,
      exclusivity: Astal.Exclusivity.EXCLUSIVE,
      anchor: TOP | LEFT | RIGHT | BOTTOM,
      keymode: Astal.Keymode.ON_DEMAND,
      application: app_default,
      $: () => {
        timeout(250, () => {
          setWindowVisible3(true);
        });
      },
      children: /* @__PURE__ */ jsx(
        Gtk2.Box,
        {
          cssClasses: ["SessionManagerContainer"],
          halign: Gtk2.Align.FILL,
          valign: Gtk2.Align.FILL,
          hexpand: true,
          vexpand: true,
          children: /* @__PURE__ */ jsxs(
            Gtk2.Box,
            {
              cssClasses: ["SessionManagerView"],
              orientation: Gtk2.Orientation.VERTICAL,
              halign: Gtk2.Align.FILL,
              valign: Gtk2.Align.CENTER,
              hexpand: true,
              children: [
                /* @__PURE__ */ jsx(UserCarousel, {}),
                /* @__PURE__ */ jsxs(
                  Gtk2.Box,
                  {
                    cssClasses: ["SessionManagerFields"],
                    orientation: Gtk2.Orientation.VERTICAL,
                    widthRequest: 280,
                    hexpand: false,
                    halign: Gtk2.Align.CENTER,
                    children: [
                      /* @__PURE__ */ jsx(SessionSelect, { cssClasses: ["SessionManagerField"] }),
                      /* @__PURE__ */ jsx(PasswordField, { cssClasses: ["SessionManagerField"] }),
                      /* @__PURE__ */ jsx(ErrorMessage, { cssClasses: ["SessionManagerField"] })
                    ]
                  }
                )
              ]
            }
          )
        }
      )
    }
  );
}

// ns/apps/LoginScreen/app.ts
app_default.start({
  main() {
    setConsoleLogDomain2(AppLogDomain.by_name(APP_LOG_DOMAIN.GREETER));
    SessionManagerScreen(app_default.get_monitors()[0]);
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibnMvYXBwcy9Mb2dpblNjcmVlbi9hcHAudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9nb2JqZWN0LnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC91dGlsLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvYXBwLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9kYnVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2FwcC9kYnVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvanN4LnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRnJhZ21lbnQudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9zdGF0ZS50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2Vudi50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3Njb3BlLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRm9yLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvV2l0aC50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L1RoaXMudHMiLCAibnMvbGlicy9sb2cvY29uc3RhbnRzLnRzIiwgIm5zL2xpYnMvbG9nL0ZpbGVMb2dnZXIudHMiLCAibnMvcHJvdmlkZXJzL2NvbmZpZy9pbmRleC50cyIsICJucy9saWJzL2xvZy91dGlscy9nZXRFcnJvck1lc3NhZ2UudHMiLCAibnMvbGlicy9sb2cvdXRpbHMvZ2V0S2V5QnlWYWx1ZS50cyIsICJucy9saWJzL2xvZy9TeXN0ZW1kQ2F0TG9nZ2VyLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvaW5kZXgudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvcHJvY2Vzcy50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi90aW1lLnRzIiwgIm5zL3NlcnZpY2VzL1Nlc3Npb25NYW5hZ2VyU2NyZWVuU2VydmljZS9pbmRleC50cyIsICJucy9saWJzL2duaW0tZXh0ZW5zaW9ucy9jcmVhdGVDb21wdXRlZE1hcC50cyIsICJucy9saWJzL2duaW0tZXh0ZW5zaW9ucy9jcmVhdGVDb21wdXRlZEFycmF5LnRzIiwgIm5zL2xpYnMvZ25pbS1leHRlbnNpb25zL2NyZWF0ZURpc3Bvc2VNYW5hZ2VyLnRzIiwgIm5zL2xpYnMvZ25pbS1leHRlbnNpb25zL3RvQWNjZXNzb3IudHMiLCAibnMvbGlicy9ncmVldGQtaXBjL0dyZWV0ZElQQy50cyIsICJucy9zZXJ2aWNlcy9Mb2dnZXJTZXJ2aWNlL2luZGV4LnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2ZpbGUudHMiLCAibnMvbGlicy9jb25mL3BhcnNlQ29uZmlnLnRzIiwgIm5zL3Byb3ZpZGVycy9wYW0tZmFpbGxvY2svZ2V0UGFtRmFpbGxvY2tDb25mLnRzIiwgIm5zL3Byb3ZpZGVycy9wYW0tZmFpbGxvY2svaW5kZXgudHMiLCAibnMvc2VydmljZXMvTG9naW5TdG9yYWdlU2VydmljZS9jb25zdGFudHMudHMiLCAibnMvc2VydmljZXMvTG9naW5TdG9yYWdlU2VydmljZS9yZWFkTG9naW5TdG9yYWdlU3RhdGUudHMiLCAibnMvc2VydmljZXMvTG9naW5TdG9yYWdlU2VydmljZS93cml0ZUxvZ2luU3RvcmFnZVN0YXRlLnRzIiwgIm5zL3Byb3ZpZGVycy91c2Vycy9pbmRleC50cyIsICJucy91dGlscy9jcmVhdGVJbWFnZVBhaW5pdGFibGUudHMiLCAibnMvc2VydmljZXMvVXNlckxpc3RTZXJ2aWNlL2NyZWF0ZVVzZXJMaXN0LnRzIiwgIm5zL3NlcnZpY2VzL1VzZXJMaXN0U2VydmljZS9pbmRleC50cyIsICJucy9wcm92aWRlcnMvc2Vzc2lvbnMvaW5kZXgudHMiLCAibnMvc2VydmljZXMvU2Vzc2lvbkxpc3RTZXJ2aWNlL2NyZWF0ZVNlc3Npb25MaXN0LnRzIiwgIm5zL3NlcnZpY2VzL1Nlc3Npb25MaXN0U2VydmljZS9pbmRleC50cyIsICJucy9zZXJ2aWNlcy9Mb2dpblN0b3JhZ2VTZXJ2aWNlL2luZGV4LnRzIiwgIm5zL3NlcnZpY2VzL0xvZ2luU2VydmljZS9pbmRleC50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIm5zL3dpZGdldHMvU2Vzc2lvbk1hbmFnZXJTY3JlZW4vRXJyb3JNZXNzYWdlL2luZGV4LnRzeCIsICJucy93aWRnZXRzL1Nlc3Npb25NYW5hZ2VyU2NyZWVuL1Bhc3N3b3JkRmllbGQvaW5kZXgudHN4IiwgIm5zL3dpZGdldHMvU2Vzc2lvbk1hbmFnZXJTY3JlZW4vUGFzc3dvcmRGaWVsZC9jcmVhdGVDb3VudGRvd25UaW1lci50cyIsICJucy93aWRnZXRzL1Nlc3Npb25NYW5hZ2VyU2NyZWVuL1Bhc3N3b3JkRmllbGQvY3JlYXRlUHVsc2VUaW1lci50cyIsICJzYXNzOi9ob21lL3NoaW1hcnVsaW4vXHUwNDFGXHUwNDQwXHUwNDNFXHUwNDM1XHUwNDNBXHUwNDQyXHUwNDRCL1dvcmtzdGF0aW9uL2tvdGFtaS9ucy93aWRnZXRzL1Nlc3Npb25NYW5hZ2VyU2NyZWVuL1Bhc3N3b3JkRmllbGQvc3R5bGUuc2NzcyIsICJucy93aWRnZXRzL1Nlc3Npb25NYW5hZ2VyU2NyZWVuL1Nlc3Npb25TZWxlY3QvaW5kZXgudHN4IiwgInNhc3M6L2hvbWUvc2hpbWFydWxpbi9cdTA0MUZcdTA0NDBcdTA0M0VcdTA0MzVcdTA0M0FcdTA0NDJcdTA0NEIvV29ya3N0YXRpb24va290YW1pL25zL3dpZGdldHMvU2Vzc2lvbk1hbmFnZXJTY3JlZW4vc3R5bGUuc2NzcyIsICJucy93aWRnZXRzL1Nlc3Npb25NYW5hZ2VyU2NyZWVuL1VzZXJDYXJvdXNlbC9pbmRleC50c3giLCAic2FzczovaG9tZS9zaGltYXJ1bGluL1x1MDQxRlx1MDQ0MFx1MDQzRVx1MDQzNVx1MDQzQVx1MDQ0Mlx1MDQ0Qi9Xb3Jrc3RhdGlvbi9rb3RhbWkvbnMvd2lkZ2V0cy9TZXNzaW9uTWFuYWdlclNjcmVlbi9Vc2VyQ2Fyb3VzZWwvc3R5bGUuc2NzcyIsICJucy93aWRnZXRzL1Nlc3Npb25NYW5hZ2VyU2NyZWVuL2luZGV4LnRzeCJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgc2V0Q29uc29sZUxvZ0RvbWFpbiB9IGZyb20gJ2NvbnNvbGUnXG5cbmltcG9ydCBhcHAgZnJvbSAnYWdzL2d0azQvYXBwJ1xuXG5pbXBvcnQgeyBBcHBMb2dEb21haW4sIEFQUF9MT0dfRE9NQUlOIH0gZnJvbSAnQGxpYnMvbG9nJ1xuaW1wb3J0IFNlc3Npb25NYW5hZ2VyU2NyZWVuIGZyb20gJ0B3aWRnZXRzL1Nlc3Npb25NYW5hZ2VyU2NyZWVuJ1xuXG5hcHAuc3RhcnQoe1xuICBtYWluKCkge1xuICAgIHNldENvbnNvbGVMb2dEb21haW4oQXBwTG9nRG9tYWluLmJ5X25hbWUoQVBQX0xPR19ET01BSU4uR1JFRVRFUikpXG4gICAgU2Vzc2lvbk1hbmFnZXJTY3JlZW4oYXBwLmdldF9tb25pdG9ycygpWzBdKVxuICB9LFxufSlcbiIsICIvKipcbiAqIFdvcmthcm91bmQgZm9yIFwiQ2FuJ3QgY29udmVydCBub24tbnVsbCBwb2ludGVyIHRvIEpTIHZhbHVlIFwiXG4gKi9cblxuZXhwb3J0IHt9XG5cbmZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMV8kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHN1cHByZXNzPFQ+KG1vZDogUHJvbWlzZTx7IGRlZmF1bHQ6IFQgfT4sIHBhdGNoOiAobTogVCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBtb2QudGhlbigobSkgPT4gcGF0Y2gobS5kZWZhdWx0KSkuY2F0Y2goKCkgPT4gdm9pZCAwKVxufVxuXG5mdW5jdGlvbiBwYXRjaDxQIGV4dGVuZHMgb2JqZWN0Pihwcm90bzogUCwgcHJvcDogRXh0cmFjdDxrZXlvZiBQLCBzdHJpbmc+KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvLCBwcm9wLCB7XG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzW2BnZXRfJHtzbmFrZWlmeShwcm9wKX1gXSgpXG4gICAgICAgIH0sXG4gICAgfSlcbn1cblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEFwcHNcIiksICh7IEFwcHMsIEFwcGxpY2F0aW9uIH0pID0+IHtcbiAgICBwYXRjaChBcHBzLnByb3RvdHlwZSwgXCJsaXN0XCIpXG4gICAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCBcImtleXdvcmRzXCIpXG4gICAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCBcImNhdGVnb3JpZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxCYXR0ZXJ5XCIpLCAoeyBVUG93ZXIgfSkgPT4ge1xuICAgIHBhdGNoKFVQb3dlci5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJsdWV0b290aFwiKSwgKHsgQWRhcHRlciwgQmx1ZXRvb3RoLCBEZXZpY2UgfSkgPT4ge1xuICAgIHBhdGNoKEFkYXB0ZXIucHJvdG90eXBlLCBcInV1aWRzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJhZGFwdGVyc1wiKVxuICAgIHBhdGNoKEJsdWV0b290aC5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKERldmljZS5wcm90b3R5cGUsIFwidXVpZHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxIeXBybGFuZFwiKSwgKHsgSHlwcmxhbmQsIE1vbml0b3IsIFdvcmtzcGFjZSB9KSA9PiB7XG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcImJpbmRzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcIm1vbml0b3JzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcIndvcmtzcGFjZXNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiY2xpZW50c1wiKVxuICAgIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCBcImF2YWlsYWJsZU1vZGVzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlX21vZGVzXCIpXG4gICAgcGF0Y2goV29ya3NwYWNlLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTXByaXNcIiksICh7IE1wcmlzLCBQbGF5ZXIgfSkgPT4ge1xuICAgIHBhdGNoKE1wcmlzLnByb3RvdHlwZSwgXCJwbGF5ZXJzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRfdXJpX3NjaGVtZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZFVyaVNjaGVtZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF9taW1lX3R5cGVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRNaW1lVHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcImNvbW1lbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTmV0d29ya1wiKSwgKHsgV2lmaSB9KSA9PiB7XG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzX3BvaW50c1wiKVxuICAgIHBhdGNoKFdpZmkucHJvdG90eXBlLCBcImFjY2Vzc1BvaW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE5vdGlmZFwiKSwgKHsgTm90aWZkLCBOb3RpZmljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKE5vdGlmZC5wcm90b3R5cGUsIFwibm90aWZpY2F0aW9uc1wiKVxuICAgIHBhdGNoKE5vdGlmaWNhdGlvbi5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFBvd2VyUHJvZmlsZXNcIiksICh7IFBvd2VyUHJvZmlsZXMgfSkgPT4ge1xuICAgIHBhdGNoKFBvd2VyUHJvZmlsZXMucHJvdG90eXBlLCBcImFjdGlvbnNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxXcFwiKSwgKHsgV3AsIEF1ZGlvLCBWaWRlbyB9KSA9PiB7XG4gICAgcGF0Y2goV3AucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwic3RyZWFtc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJyZWNvcmRlcnNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwibWljcm9waG9uZXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwic3BlYWtlcnNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzdHJlYW1zXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInJlY29yZGVyc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzaW5rc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzb3VyY2VzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcImRldmljZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxUcmF5XCIpLCAoeyBUcmF5IH0pID0+IHtcbiAgICBwYXRjaChUcmF5LnByb3RvdHlwZSwgXCJpdGVtc1wiKVxufSlcbiIsICIvKipcbiAqIEluIHRoZSBmdXR1cmUgSSB3b3VsZCBsaWtlIHRvIG1ha2UgdHlwZSBkZWNsYXJhdGlvbiBpbiBkZWNvcmF0b3JzIG9wdGlvbmFsXG4gKiBhbmQgaW5mZXIgaXQgZnJvbSB0eXBlc2NyaXB0IHR5cGVzIGF0IHRyYW5zcGlsZSB0aW1lLiBDdXJyZW50bHksIHdlIGNvdWxkXG4gKiBlaXRoZXIgdXNlIHN0YWdlIDIgZGVjb3JhdG9ycyB3aXRoIHRoZSBcImVtaXREZWNvcmF0b3JNZXRhZGF0YVwiIGFuZFxuICogXCJleHBlcmltZW50YWxEZWNvcmF0b3JzXCIgdHNjb25maWcgb3B0aW9ucy4gSG93ZXZlciwgbWV0YWRhdGEgaXMgbm90IHN1cHBvcnRlZFxuICogYnkgZXNidWlsZCB3aGljaCBpcyB3aGF0IEknbSBtb3N0bHkgdGFyZ2V0aW5nIGFzIHRoZSBidW5kbGVyIGZvciBwZXJmb3JtYW5jZVxuICogcmVhc29ucy4gaHR0cHM6Ly9naXRodWIuY29tL2V2YW53L2VzYnVpbGQvaXNzdWVzLzI1N1xuICogSG93ZXZlciwgSSBiZWxpZXZlIHRoYXQgd2Ugc2hvdWxkIG5vdCB1c2Ugc3RhZ2UgMiBhbnltb3JlLFxuICogc28gSSdtIHdhaXRpbmcgZm9yIGEgYmV0dGVyIGFsdGVybmF0aXZlLlxuICovXG5cbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiXG5pbXBvcnQgeyBkZWZpbmVQcm9wZXJ0eUdldHRlciwga2ViYWJpZnkgfSBmcm9tIFwiLi91dGlsLmpzXCJcblxuY29uc3QgcHJpdiA9IFN5bWJvbChcImdvYmplY3QgcHJpdmF0ZVwiKVxuY29uc3QgeyBkZWZpbmVQcm9wZXJ0eSwgZnJvbUVudHJpZXMsIGVudHJpZXMgfSA9IE9iamVjdFxuY29uc3QgeyBPYmplY3Q6IEdPYmosIHJlZ2lzdGVyQ2xhc3MgfSA9IEdPYmplY3RcblxuZXhwb3J0IHsgR09iamVjdCBhcyBkZWZhdWx0IH1cbmV4cG9ydCB7IEdPYmogYXMgT2JqZWN0IH1cblxuZXhwb3J0IGNvbnN0IFNpZ25hbEZsYWdzID0gR09iamVjdC5TaWduYWxGbGFnc1xuZXhwb3J0IHR5cGUgU2lnbmFsRmxhZ3MgPSBHT2JqZWN0LlNpZ25hbEZsYWdzXG5cbmV4cG9ydCBjb25zdCBBY2N1bXVsYXRvclR5cGUgPSBHT2JqZWN0LkFjY3VtdWxhdG9yVHlwZVxuZXhwb3J0IHR5cGUgQWNjdW11bGF0b3JUeXBlID0gR09iamVjdC5BY2N1bXVsYXRvclR5cGVcblxuZXhwb3J0IHR5cGUgUGFyYW1TcGVjPFQgPSB1bmtub3duPiA9IEdPYmplY3QuUGFyYW1TcGVjPFQ+XG5leHBvcnQgY29uc3QgUGFyYW1TcGVjID0gR09iamVjdC5QYXJhbVNwZWNcblxuZXhwb3J0IHR5cGUgUGFyYW1GbGFncyA9IEdPYmplY3QuUGFyYW1GbGFnc1xuZXhwb3J0IGNvbnN0IFBhcmFtRmxhZ3MgPSBHT2JqZWN0LlBhcmFtRmxhZ3NcblxuZXhwb3J0IHR5cGUgR1R5cGU8VCA9IHVua25vd24+ID0gR09iamVjdC5HVHlwZTxUPlxuXG50eXBlIEdPYmogPSBHT2JqZWN0Lk9iamVjdFxuXG5pbnRlcmZhY2UgR09ialByaXZhdGUgZXh0ZW5kcyBHT2JqIHtcbiAgICBbcHJpdl06IFJlY29yZDxzdHJpbmcsIGFueT5cbn1cblxudHlwZSBNZXRhID0ge1xuICAgIHByb3BlcnRpZXM/OiB7XG4gICAgICAgIFtmaWVsZE5hbWU6IHN0cmluZ106IHtcbiAgICAgICAgICAgIGZsYWdzOiBQYXJhbUZsYWdzXG4gICAgICAgICAgICB0eXBlOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjx1bmtub3duPlxuICAgICAgICB9XG4gICAgfVxuICAgIHNpZ25hbHM/OiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHtcbiAgICAgICAgICAgIGRlZmF1bHQ/OiBib29sZWFuXG4gICAgICAgICAgICBmbGFncz86IFNpZ25hbEZsYWdzXG4gICAgICAgICAgICBhY2N1bXVsYXRvcj86IEFjY3VtdWxhdG9yVHlwZVxuICAgICAgICAgICAgcmV0dXJuX3R5cGU/OiBHVHlwZVxuICAgICAgICAgICAgcGFyYW1fdHlwZXM/OiBBcnJheTxHVHlwZT5cbiAgICAgICAgICAgIG1ldGhvZDogKC4uLmFyZzogYW55W10pID0+IHVua25vd25cbiAgICAgICAgfVxuICAgIH1cbn1cblxudHlwZSBDb250ZXh0ID0geyBwcml2YXRlOiBmYWxzZTsgc3RhdGljOiBmYWxzZTsgbmFtZTogc3RyaW5nIH1cbnR5cGUgUHJvcGVydHlDb250ZXh0PFQ+ID0gQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG50eXBlIEdldHRlckNvbnRleHQ8VD4gPSBDbGFzc0dldHRlckRlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG50eXBlIFNldHRlckNvbnRleHQ8VD4gPSBDbGFzc1NldHRlckRlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG50eXBlIFNpZ25hbENvbnRleHQ8VCBleHRlbmRzICgpID0+IGFueT4gPSBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG5cbnR5cGUgU2lnbmFsT3B0aW9ucyA9IHtcbiAgICBkZWZhdWx0PzogYm9vbGVhblxuICAgIGZsYWdzPzogU2lnbmFsRmxhZ3NcbiAgICBhY2N1bXVsYXRvcj86IEFjY3VtdWxhdG9yVHlwZVxufVxuXG50eXBlIFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPFQ+ID1cbiAgICB8ICgobmFtZTogc3RyaW5nLCBmbGFnczogUGFyYW1GbGFncykgPT4gUGFyYW1TcGVjPFQ+KVxuICAgIHwgUGFyYW1TcGVjPFQ+XG4gICAgfCB7ICRndHlwZTogR1R5cGU8VD4gfVxuXG5mdW5jdGlvbiBhc3NlcnRGaWVsZChcbiAgICBjdHg6IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0LFxuKTogc3RyaW5nIHtcbiAgICBpZiAoY3R4LnByaXZhdGUpIHRocm93IEVycm9yKFwicHJpdmF0ZSBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWRcIilcbiAgICBpZiAoY3R4LnN0YXRpYykgdGhyb3cgRXJyb3IoXCJzdGF0aWMgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkXCIpXG5cbiAgICBpZiAodHlwZW9mIGN0eC5uYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwib25seSBzdHJpbmdzIGNhbiBiZSBnb2JqZWN0IHByb3BlcnR5IGtleXNcIilcbiAgICB9XG5cbiAgICByZXR1cm4gY3R4Lm5hbWVcbn1cblxuLyoqXG4gKiBEZWZpbmVzIGEgcmVhZGFibGUgKmFuZCogd3JpdGVhYmxlIHByb3BlcnR5IHRvIGJlIHJlZ2lzdGVyZWQgd2hlbiB1c2luZyB0aGUge0BsaW5rIHJlZ2lzdGVyfSBkZWNvcmF0b3IuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAcHJvcGVydHkoU3RyaW5nKSBteVByb3AgPSBcIlwiXG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByb3BlcnR5PFQ+KHR5cGVEZWNsYXJhdGlvbjogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248VD4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBfOiB2b2lkLFxuICAgICAgICBjdHg6IFByb3BlcnR5Q29udGV4dDxUPixcbiAgICAgICAgb3B0aW9ucz86IHsgbWV0YU9ubHk6IHRydWUgfSxcbiAgICApOiAodGhpczogR09iaiwgaW5pdDogVCkgPT4gVCB7XG4gICAgICAgIGNvbnN0IGZpZWxkTmFtZSA9IGFzc2VydEZpZWxkKGN0eClcbiAgICAgICAgY29uc3Qga2V5ID0ga2ViYWJpZnkoZmllbGROYW1lKVxuICAgICAgICBjb25zdCBtZXRhOiBQYXJ0aWFsPE1ldGE+ID0gY3R4Lm1ldGFkYXRhIVxuXG4gICAgICAgIG1ldGEucHJvcGVydGllcyA/Pz0ge31cbiAgICAgICAgbWV0YS5wcm9wZXJ0aWVzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBQYXJhbUZsYWdzLlJFQURXUklURSwgdHlwZTogdHlwZURlY2xhcmF0aW9uIH1cblxuICAgICAgICBjdHguYWRkSW5pdGlhbGl6ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZGVmaW5lUHJvcGVydHlHZXR0ZXIodGhpcywgZmllbGROYW1lIGFzIEV4dHJhY3Q8a2V5b2YgR09iaiwgc3RyaW5nPilcblxuICAgICAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5tZXRhT25seSkgcmV0dXJuXG5cbiAgICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRoaXMsIGZpZWxkTmFtZSwge1xuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzZXQodjogVCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpc1twcml2XVtrZXldICE9PSB2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzW3ByaXZdW2tleV0gPSB2XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShrZXkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCgpOiBUIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXNbcHJpdl1ba2V5XVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9IHNhdGlzZmllcyBUaGlzVHlwZTxHT2JqUHJpdmF0ZT4pXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpbml0OiBUKSB7XG4gICAgICAgICAgICBjb25zdCBkaWN0ID0gKCh0aGlzIGFzIEdPYmpQcml2YXRlKVtwcml2XSA/Pz0ge30pXG4gICAgICAgICAgICBkaWN0W2tleV0gPSBpbml0XG4gICAgICAgICAgICByZXR1cm4gaW5pdFxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIERlZmluZXMgYSByZWFkLW9ubHkgcHJvcGVydHkgdG8gYmUgcmVnaXN0ZXJlZCB3aGVuIHVzaW5nIHRoZSB7QGxpbmsgcmVnaXN0ZXJ9IGRlY29yYXRvci5cbiAqIElmIHRoZSBnZXR0ZXIgaGFzIGEgc2V0dGVyIHBhaXIgZGVjb3JhdGVkIHdpdGggdGhlIHtAbGluayBzZXR0ZXJ9IGRlY29yYXRvciB0aGUgcHJvcGVydHkgd2lsbCBiZSByZWFkYWJsZSAqYW5kKiB3cml0ZWFibGUuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAc2V0dGVyKFN0cmluZylcbiAqICAgICBzZXQgbXlQcm9wKHZhbHVlOiBzdHJpbmcpIHtcbiAqICAgICAgICAgLy9cbiAqICAgICB9XG4gKlxuICogICAgIFxcQGdldHRlcihTdHJpbmcpXG4gKiAgICAgZ2V0IG15UHJvcCgpOiBzdHJpbmcge1xuICogICAgICAgICByZXR1cm4gXCJcIlxuICogICAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0dGVyPFQ+KHR5cGVEZWNsYXJhdGlvbjogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248VD4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gZ2V0dGVyKGdldHRlcjogKHRoaXM6IEdPYmopID0+IFQsIGN0eDogR2V0dGVyQ29udGV4dDxUPik6ICh0aGlzOiBHT2JqKSA9PiBUIHtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gYXNzZXJ0RmllbGQoY3R4KVxuICAgICAgICBjb25zdCBtZXRhOiBQYXJ0aWFsPE1ldGE+ID0gY3R4Lm1ldGFkYXRhIVxuICAgICAgICBjb25zdCBwcm9wcyA9IChtZXRhLnByb3BlcnRpZXMgPz89IHt9KVxuICAgICAgICBpZiAoZmllbGROYW1lIGluIHByb3BzKSB7XG4gICAgICAgICAgICBjb25zdCB7IGZsYWdzLCB0eXBlIH0gPSBwcm9wc1tmaWVsZE5hbWVdXG4gICAgICAgICAgICBwcm9wc1tmaWVsZE5hbWVdID0geyBmbGFnczogZmxhZ3MgfCBQYXJhbUZsYWdzLlJFQURBQkxFLCB0eXBlIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBQYXJhbUZsYWdzLlJFQURBQkxFLCB0eXBlOiB0eXBlRGVjbGFyYXRpb24gfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBnZXR0ZXJcbiAgICB9XG59XG5cbi8qKlxuICogRGVmaW5lcyBhIHdyaXRlLW9ubHkgcHJvcGVydHkgdG8gYmUgcmVnaXN0ZXJlZCB3aGVuIHVzaW5nIHRoZSB7QGxpbmsgcmVnaXN0ZXJ9IGRlY29yYXRvci5cbiAqIElmIHRoZSBzZXR0ZXIgaGFzIGEgZ2V0dGVyIHBhaXIgZGVjb3JhdGVkIHdpdGggdGhlIHtAbGluayBnZXR0ZXJ9IGRlY29yYXRvciB0aGUgcHJvcGVydHkgd2lsbCBiZSB3cml0ZWFibGUgKmFuZCogcmVhZGFibGUuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAc2V0dGVyKFN0cmluZylcbiAqICAgICBzZXQgbXlQcm9wKHZhbHVlOiBzdHJpbmcpIHtcbiAqICAgICAgICAgLy9cbiAqICAgICB9XG4gKlxuICogICAgIFxcQGdldHRlcihTdHJpbmcpXG4gKiAgICAgZ2V0IG15UHJvcCgpOiBzdHJpbmcge1xuICogICAgICAgICByZXR1cm4gXCJcIlxuICogICAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0dGVyPFQ+KHR5cGVEZWNsYXJhdGlvbjogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248VD4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gc2V0dGVyKFxuICAgICAgICBzZXR0ZXI6ICh0aGlzOiBHT2JqLCB2YWx1ZTogVCkgPT4gdm9pZCxcbiAgICAgICAgY3R4OiBTZXR0ZXJDb250ZXh0PFQ+LFxuICAgICk6ICh0aGlzOiBHT2JqLCB2YWx1ZTogVCkgPT4gdm9pZCB7XG4gICAgICAgIGNvbnN0IGZpZWxkTmFtZSA9IGFzc2VydEZpZWxkKGN0eClcbiAgICAgICAgY29uc3QgbWV0YTogUGFydGlhbDxNZXRhPiA9IGN0eC5tZXRhZGF0YSFcbiAgICAgICAgY29uc3QgcHJvcHMgPSAobWV0YS5wcm9wZXJ0aWVzID8/PSB7fSlcbiAgICAgICAgaWYgKGZpZWxkTmFtZSBpbiBwcm9wcykge1xuICAgICAgICAgICAgY29uc3QgeyBmbGFncywgdHlwZSB9ID0gcHJvcHNbZmllbGROYW1lXVxuICAgICAgICAgICAgcHJvcHNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IGZsYWdzIHwgUGFyYW1GbGFncy5XUklUQUJMRSwgdHlwZSB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwcm9wc1tmaWVsZE5hbWVdID0geyBmbGFnczogUGFyYW1GbGFncy5XUklUQUJMRSwgdHlwZTogdHlwZURlY2xhcmF0aW9uIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2V0dGVyXG4gICAgfVxufVxuXG50eXBlIFBhcmFtVHlwZTxQPiA9IFAgZXh0ZW5kcyB7ICRndHlwZTogR1R5cGU8aW5mZXIgVD4gfSA/IFQgOiBQIGV4dGVuZHMgR1R5cGU8aW5mZXIgVD4gPyBUIDogbmV2ZXJcblxudHlwZSBQYXJhbVR5cGVzPFBhcmFtcz4gPSB7XG4gICAgW0sgaW4ga2V5b2YgUGFyYW1zXTogUGFyYW1UeXBlPFBhcmFtc1tLXT5cbn1cblxuLyoqXG4gKiBEZWZpbmVzIGEgc2lnbmFsIHRvIGJlIHJlZ2lzdGVyZWQgd2hlbiB1c2luZyB0aGUge0BsaW5rIHJlZ2lzdGVyfSBkZWNvcmF0b3IuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAc2lnbmFsKFtTdHJpbmcsIE51bWJlcl0sIEJvb2xlYW4sIHtcbiAqICAgICAgICAgYWNjdW11bGF0b3I6IEFjY3VtdWxhdG9yVHlwZS5GSVJTVF9XSU5TXG4gKiAgICAgfSlcbiAqICAgICBteVNpZ25hbChzdHI6IHN0cmluZywgbjogbnVtYmVyKTogYm9vbGVhbiB7XG4gKiAgICAgICAgIC8vIGRlZmF1bHQgaGFuZGxlclxuICogICAgICAgICByZXR1cm4gZmFsc2VcbiAqICAgICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpZ25hbDxcbiAgICBjb25zdCBQYXJhbXMgZXh0ZW5kcyBBcnJheTx7ICRndHlwZTogR1R5cGUgfSB8IEdUeXBlPixcbiAgICBSZXR1cm4gZXh0ZW5kcyB7ICRndHlwZTogR1R5cGUgfSB8IEdUeXBlLFxuPihcbiAgICBwYXJhbXM6IFBhcmFtcyxcbiAgICByZXR1cm5UeXBlPzogUmV0dXJuLFxuICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zLFxuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IEdPYmosIC4uLmFyZ3M6IFBhcmFtVHlwZXM8UGFyYW1zPikgPT4gUGFyYW1UeXBlPFJldHVybj4sXG4gICAgY3R4OiBTaWduYWxDb250ZXh0PHR5cGVvZiBtZXRob2Q+LFxuKSA9PiB0eXBlb2YgbWV0aG9kXG5cbi8qKlxuICogRGVmaW5lcyBhIHNpZ25hbCB0byBiZSByZWdpc3RlcmVkIHdoZW4gdXNpbmcgdGhlIHtAbGluayByZWdpc3Rlcn0gZGVjb3JhdG9yLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY2xhc3Mge1xuICogICAgIFxcQHNpZ25hbChTdHJpbmcsIE51bWJlcilcbiAqICAgICBteVNpZ25hbChzdHI6IHN0cmluZywgbjogbnVtYmVyKTogdm9pZCB7XG4gKiAgICAgICAgIC8vIGRlZmF1bHQgaGFuZGxlclxuICogICAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsPFBhcmFtcyBleHRlbmRzIEFycmF5PHsgJGd0eXBlOiBHVHlwZSB9IHwgR1R5cGU+PihcbiAgICAuLi5wYXJhbXM6IFBhcmFtc1xuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IEdPYmplY3QuT2JqZWN0LCAuLi5hcmdzOiBQYXJhbVR5cGVzPFBhcmFtcz4pID0+IHZvaWQsXG4gICAgY3R4OiBTaWduYWxDb250ZXh0PHR5cGVvZiBtZXRob2Q+LFxuKSA9PiB0eXBlb2YgbWV0aG9kXG5cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8XG4gICAgUGFyYW1zIGV4dGVuZHMgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZT4sXG4gICAgUmV0dXJuIGV4dGVuZHMgeyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZSxcbj4oXG4gICAgLi4uYXJnczogUGFyYW1zIHwgW3BhcmFtczogUGFyYW1zLCByZXR1cm5UeXBlPzogUmV0dXJuLCBvcHRpb25zPzogU2lnbmFsT3B0aW9uc11cbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBHT2JqLCAuLi5hcmdzOiBQYXJhbVR5cGVzPFBhcmFtcz4pID0+IFBhcmFtVHlwZTxSZXR1cm4+IHwgdm9pZCxcbiAgICBjdHg6IFNpZ25hbENvbnRleHQ8dHlwZW9mIG1ldGhvZD4sXG4pID0+IHR5cGVvZiBtZXRob2Qge1xuICAgIHJldHVybiBmdW5jdGlvbiAobWV0aG9kLCBjdHgpIHtcbiAgICAgICAgaWYgKGN0eC5wcml2YXRlKSB0aHJvdyBFcnJvcihcInByaXZhdGUgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkXCIpXG4gICAgICAgIGlmIChjdHguc3RhdGljKSB0aHJvdyBFcnJvcihcInN0YXRpYyBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWRcIilcblxuICAgICAgICBpZiAodHlwZW9mIGN0eC5uYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIm9ubHkgc3RyaW5ncyBjYW4gYmUgZ29iamVjdCBzaWduYWxzXCIpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzaWduYWxOYW1lID0ga2ViYWJpZnkoY3R4Lm5hbWUpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG4gICAgICAgIGNvbnN0IHNpZ25hbHMgPSAobWV0YS5zaWduYWxzID8/PSB7fSlcblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkge1xuICAgICAgICAgICAgY29uc3QgW3BhcmFtcywgcmV0dXJuVHlwZSwgb3B0aW9uc10gPSBhcmdzIGFzIFtcbiAgICAgICAgICAgICAgICBwYXJhbXM6IFBhcmFtcyxcbiAgICAgICAgICAgICAgICByZXR1cm5UeXBlPzogUmV0dXJuLFxuICAgICAgICAgICAgICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zLFxuICAgICAgICAgICAgXVxuXG4gICAgICAgICAgICBzaWduYWxzW3NpZ25hbE5hbWVdID0ge1xuICAgICAgICAgICAgICAgIG1ldGhvZCxcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiBvcHRpb25zPy5kZWZhdWx0ID8/IHRydWUsXG4gICAgICAgICAgICAgICAgcGFyYW1fdHlwZXM6IHBhcmFtcy5tYXAoKGkpID0+IChcIiRndHlwZVwiIGluIGkgPyBpLiRndHlwZSA6IGkpKSxcbiAgICAgICAgICAgICAgICAuLi4ocmV0dXJuVHlwZSAmJiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybl90eXBlOiBcIiRndHlwZVwiIGluIHJldHVyblR5cGUgPyByZXR1cm5UeXBlLiRndHlwZSA6IHJldHVyblR5cGUsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLi4uKG9wdGlvbnM/LmZsYWdzICYmIHtcbiAgICAgICAgICAgICAgICAgICAgZmxhZ3M6IG9wdGlvbnMuZmxhZ3MsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLi4uKHR5cGVvZiBvcHRpb25zPy5hY2N1bXVsYXRvciA9PT0gXCJudW1iZXJcIiAmJiB7XG4gICAgICAgICAgICAgICAgICAgIGFjY3VtdWxhdG9yOiBvcHRpb25zLmFjY3VtdWxhdG9yLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gYXJncyBhcyBQYXJhbXNcbiAgICAgICAgICAgIHNpZ25hbHNbc2lnbmFsTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgcGFyYW1fdHlwZXM6IHBhcmFtcy5tYXAoKGkpID0+IChcIiRndHlwZVwiIGluIGkgPyBpLiRndHlwZSA6IGkpKSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4ucGFyYW1zKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5lbWl0KHNpZ25hbE5hbWUsIC4uLnBhcmFtcykgYXMgUGFyYW1UeXBlPFJldHVybj5cbiAgICAgICAgfVxuICAgIH1cbn1cblxuY29uc3QgTUFYSU5UID0gMiAqKiAzMSAtIDFcbmNvbnN0IE1JTklOVCA9IC0oMiAqKiAzMSlcbmNvbnN0IE1BWFVJTlQgPSAyICoqIDMyIC0gMVxuY29uc3QgTUFYRkxPQVQgPSAzLjQwMjgyMzVlMzhcbmNvbnN0IE1JTkZMT0FUID0gLTMuNDAyODIzNWUzOFxuY29uc3QgTUlOSU5UNjQgPSBOdW1iZXIuTUlOX1NBRkVfSU5URUdFUlxuY29uc3QgTUFYSU5UNjQgPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUlxuXG5mdW5jdGlvbiBwc3BlY0Zyb21HVHlwZSh0eXBlOiBHVHlwZTx1bmtub3duPiwgbmFtZTogc3RyaW5nLCBmbGFnczogUGFyYW1GbGFncykge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9CT09MRUFOOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5ib29sZWFuKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBmYWxzZSlcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfU1RSSU5HOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5zdHJpbmcobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIFwiXCIpXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0lOVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuaW50KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBNSU5JTlQsIE1BWElOVCwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfVUlOVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMudWludChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgMCwgTUFYVUlOVCwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfSU5UNjQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmludDY0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBNSU5JTlQ2NCwgTUFYSU5UNjQsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1VJTlQ2NDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMudWludDY0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCAwLCBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfRkxPQVQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmZsb2F0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBNSU5GTE9BVCwgTUFYRkxPQVQsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0RPVUJMRTpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuZG91YmxlKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBOdW1iZXIuTUlOX1ZBTFVFLCBOdW1iZXIuTUlOX1ZBTFVFLCAwKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9KU09CSkVDVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuanNvYmplY3QobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MpXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1ZBUklBTlQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLm9iamVjdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncyBhcyBhbnksIEdMaWIuVmFyaWFudClcblxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9FTlVNOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9JTlRFUkZBQ0U6XG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0JPWEVEOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9QT0lOVEVSOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9QQVJBTTpcbiAgICAgICAgY2FzZSBHT2JqZWN0LnR5cGVfZnJvbV9uYW1lKFwiR1R5cGVcIik6XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGd1ZXNzIFBhcmFtU3BlYyBmcm9tIEdUeXBlIFwiJHt0eXBlfVwiYClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfT0JKRUNUOlxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5vYmplY3QobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MgYXMgYW55LCB0eXBlKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gcHNwZWMobmFtZTogc3RyaW5nLCBmbGFnczogUGFyYW1GbGFncywgZGVjbGFyYXRpb246IFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPHVua25vd24+KSB7XG4gICAgaWYgKGRlY2xhcmF0aW9uIGluc3RhbmNlb2YgUGFyYW1TcGVjKSByZXR1cm4gZGVjbGFyYXRpb25cblxuICAgIGlmIChkZWNsYXJhdGlvbiA9PT0gT2JqZWN0IHx8IGRlY2xhcmF0aW9uID09PSBGdW5jdGlvbiB8fCBkZWNsYXJhdGlvbiA9PT0gQXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5qc29iamVjdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncylcbiAgICB9XG5cbiAgICBpZiAoZGVjbGFyYXRpb24gPT09IFN0cmluZykge1xuICAgICAgICByZXR1cm4gUGFyYW1TcGVjLnN0cmluZyhuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgXCJcIilcbiAgICB9XG5cbiAgICBpZiAoZGVjbGFyYXRpb24gPT09IE51bWJlcikge1xuICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmRvdWJsZShuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgLU51bWJlci5NQVhfVkFMVUUsIE51bWJlci5NQVhfVkFMVUUsIDApXG4gICAgfVxuXG4gICAgaWYgKGRlY2xhcmF0aW9uID09PSBCb29sZWFuKSB7XG4gICAgICAgIHJldHVybiBQYXJhbVNwZWMuYm9vbGVhbihuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgZmFsc2UpXG4gICAgfVxuXG4gICAgaWYgKFwiJGd0eXBlXCIgaW4gZGVjbGFyYXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHBzcGVjRnJvbUdUeXBlKGRlY2xhcmF0aW9uLiRndHlwZSwgbmFtZSwgZmxhZ3MpXG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBkZWNsYXJhdGlvbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBkZWNsYXJhdGlvbihuYW1lLCBmbGFncylcbiAgICB9XG5cbiAgICB0aHJvdyBFcnJvcihcImludmFsaWQgUHJvcGVydHlUeXBlRGVjbGFyYXRpb25cIilcbn1cblxudHlwZSBNZXRhSW5mbyA9IEdPYmplY3QuTWV0YUluZm88bmV2ZXIsIEFycmF5PHsgJGd0eXBlOiBHVHlwZTx1bmtub3duPiB9PiwgbmV2ZXI+XG5cbi8qKlxuICogUmVwbGFjZW1lbnQgZm9yIHtAbGluayBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3N9XG4gKiBUaGlzIGRlY29yYXRvciBjb25zdW1lcyBtZXRhZGF0YSBuZWVkZWQgdG8gcmVnaXN0ZXIgdHlwZXMgd2hlcmUgdGhlIHByb3ZpZGVkIGRlY29yYXRvcnMgYXJlIHVzZWQ6XG4gKiAtIHtAbGluayBzaWduYWx9XG4gKiAtIHtAbGluayBwcm9wZXJ0eX1cbiAqIC0ge0BsaW5rIGdldHRlcn1cbiAqIC0ge0BsaW5rIHNldHRlcn1cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIFxcQHJlZ2lzdGVyKHsgR1R5cGVOYW1lOiBcIk15Q2xhc3NcIiB9KVxuICogY2xhc3MgTXlDbGFzcyBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHsgfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlcjxDbHMgZXh0ZW5kcyB7IG5ldyAoLi4uYXJnczogYW55KTogR09iaiB9PihvcHRpb25zOiBNZXRhSW5mbyA9IHt9KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjbHM6IENscywgY3R4OiBDbGFzc0RlY29yYXRvckNvbnRleHQ8Q2xzPikge1xuICAgICAgICBjb25zdCB0ID0gb3B0aW9ucy5UZW1wbGF0ZVxuXG4gICAgICAgIGlmICh0eXBlb2YgdCA9PT0gXCJzdHJpbmdcIiAmJiAhdC5zdGFydHNXaXRoKFwicmVzb3VyY2U6Ly9cIikgJiYgIXQuc3RhcnRzV2l0aChcImZpbGU6Ly9cIikpIHtcbiAgICAgICAgICAgIG9wdGlvbnMuVGVtcGxhdGUgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGEhIGFzIE1ldGFcblxuICAgICAgICBjb25zdCBwcm9wczogUmVjb3JkPHN0cmluZywgUGFyYW1TcGVjPHVua25vd24+PiA9IGZyb21FbnRyaWVzKFxuICAgICAgICAgICAgZW50cmllcyhtZXRhLnByb3BlcnRpZXMgPz8ge30pLm1hcCgoW2ZpZWxkTmFtZSwgeyBmbGFncywgdHlwZSB9XSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGtlYmFiaWZ5KGZpZWxkTmFtZSlcbiAgICAgICAgICAgICAgICBjb25zdCBzcGVjID0gcHNwZWMoa2V5LCBmbGFncywgdHlwZSlcbiAgICAgICAgICAgICAgICByZXR1cm4gW2tleSwgc3BlY11cbiAgICAgICAgICAgIH0pLFxuICAgICAgICApXG5cbiAgICAgICAgY29uc3Qgc2lnbmFscyA9IGZyb21FbnRyaWVzKFxuICAgICAgICAgICAgZW50cmllcyhtZXRhLnNpZ25hbHMgPz8ge30pLm1hcCgoW3NpZ25hbE5hbWUsIHsgZGVmYXVsdDogZGVmLCBtZXRob2QsIC4uLnNpZ25hbCB9XSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChkZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkoY2xzLnByb3RvdHlwZSwgYG9uXyR7c2lnbmFsTmFtZS5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IG1ldGhvZCxcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtzaWduYWxOYW1lLCBzaWduYWxdXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgKVxuXG4gICAgICAgIGRlbGV0ZSBtZXRhLnByb3BlcnRpZXNcbiAgICAgICAgZGVsZXRlIG1ldGEuc2lnbmFsc1xuXG4gICAgICAgIHJlZ2lzdGVyQ2xhc3MoeyAuLi5vcHRpb25zLCBQcm9wZXJ0aWVzOiBwcm9wcywgU2lnbmFsczogc2lnbmFscyB9LCBjbHMpXG4gICAgfVxufVxuXG4vKipcbiAqIEBleHBlcmltZW50YWxcbiAqIEFzc2VydHMgYSBndHlwZSBpbiBjYXNlcyB3aGVyZSB0aGUgdHlwZSBpcyB0b28gbG9vc2Uvc3RyaWN0LlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogdHlwZSBUdXBsZSA9IFtudW1iZXIsIG51bWJlcl1cbiAqIGNvbnN0IFR1cGxlID0gZ3R5cGU8VHVwbGU+KEFycmF5KVxuICpcbiAqIGNsYXNzIHtcbiAqICAgXFxAcHJvcGVydHkoVHVwbGUpIHZhbHVlID0gWzEsIDJdIGFzIFR1cGxlXG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGd0eXBlPEFzc2VydD4odHlwZTogR1R5cGU8YW55PiB8IHsgJGd0eXBlOiBHVHlwZTxhbnk+IH0pOiB7XG4gICAgJGd0eXBlOiBHVHlwZTxBc3NlcnQ+XG59IHtcbiAgICByZXR1cm4gXCIkZ3R5cGVcIiBpbiB0eXBlID8gdHlwZSA6IHsgJGd0eXBlOiB0eXBlIH1cbn1cblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIGludGVyZmFjZSBGdW5jdGlvbkNvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTwoLi4uYXJnczogYW55W10pID0+IGFueT5cbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgQXJyYXlDb25zdHJ1Y3RvciB7XG4gICAgICAgICRndHlwZTogR1R5cGU8YW55W10+XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIERhdGVDb25zdHJ1Y3RvciB7XG4gICAgICAgICRndHlwZTogR1R5cGU8RGF0ZT5cbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgTWFwQ29uc3RydWN0b3Ige1xuICAgICAgICAkZ3R5cGU6IEdUeXBlPE1hcDxhbnksIGFueT4+XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIFNldENvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTxTZXQ8YW55Pj5cbiAgICB9XG59XG5cbkZ1bmN0aW9uLiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgRnVuY3Rpb25Db25zdHJ1Y3RvcltcIiRndHlwZVwiXVxuQXJyYXkuJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBBcnJheUNvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG5EYXRlLiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgRGF0ZUNvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG5NYXAuJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBNYXBDb25zdHJ1Y3RvcltcIiRndHlwZVwiXVxuU2V0LiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgU2V0Q29uc3RydWN0b3JbXCIkZ3R5cGVcIl1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG5leHBvcnQgZnVuY3Rpb24ga2ViYWJpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiX1wiLCBcIi1cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYW1lbGlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvWy1fXSguKS9nLCAoXywgY2hhcikgPT4gY2hhci50b1VwcGVyQ2FzZSgpKVxufVxuXG5leHBvcnQgdHlwZSBQYXNjYWxpZnk8Uz4gPSBTIGV4dGVuZHMgYCR7aW5mZXIgSGVhZH0ke1wiLVwiIHwgXCJfXCJ9JHtpbmZlciBUYWlsfWBcbiAgICA/IGAke0NhcGl0YWxpemU8SGVhZD59JHtQYXNjYWxpZnk8VGFpbD59YFxuICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgPyBDYXBpdGFsaXplPFM+XG4gICAgICA6IG5ldmVyXG5cbmV4cG9ydCB0eXBlIFhtbE5vZGUgPSB7XG4gICAgbmFtZTogc3RyaW5nXG4gICAgYXR0cmlidXRlcz86IFJlY29yZDxzdHJpbmcsIHN0cmluZz5cbiAgICBjaGlsZHJlbj86IEFycmF5PFhtbE5vZGU+XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB4bWwoeyBuYW1lLCBhdHRyaWJ1dGVzLCBjaGlsZHJlbiB9OiBYbWxOb2RlKSB7XG4gICAgbGV0IGJ1aWxkZXIgPSBgPCR7bmFtZX1gXG5cbiAgICBjb25zdCBhdHRycyA9IE9iamVjdC5lbnRyaWVzKGF0dHJpYnV0ZXMgPz8gW10pXG5cbiAgICBpZiAoYXR0cnMubGVuZ3RoID4gMCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBhdHRycykge1xuICAgICAgICAgICAgYnVpbGRlciArPSBgICR7a2V5fT1cIiR7dmFsdWV9XCJgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICBidWlsZGVyICs9IFwiPlwiXG4gICAgICAgIGZvciAoY29uc3Qgbm9kZSBvZiBjaGlsZHJlbikge1xuICAgICAgICAgICAgYnVpbGRlciArPSB4bWwobm9kZSlcbiAgICAgICAgfVxuICAgICAgICBidWlsZGVyICs9IGA8LyR7bmFtZX0+YFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGJ1aWxkZXIgKz0gXCIgLz5cIlxuICAgIH1cblxuICAgIHJldHVybiBidWlsZGVyXG59XG5cbi8vIEJpbmRpbmdzIHdvcmsgb3ZlciBwcm9wZXJ0aWVzIGluIGtlYmFiLWNhc2UgYmVjYXVzZSB0aGF0cyB0aGUgY29udmVudGlvbiBvZiBnb2JqZWN0XG4vLyBob3dldmVyIGluIGpzIGl0cyBlaXRoZXIgc25ha2VfY2FzZSBvciBjYW1lbENhc2Vcbi8vIGFsc28gb24gREJ1cyBpbnRlcmZhY2VzIGl0cyBQYXNjYWxDYXNlIGJ5IGNvbnZlbnRpb25cbi8vIHNvIGFzIGEgd29ya2Fyb3VuZCB3ZSB1c2UgZ2V0X3Byb3BlcnR5X25hbWUgYW5kIG9ubHkgdXNlIHRoZSBwcm9wZXJ0eSBmaWVsZCBhcyBhIGZhbGxiYWNrXG5leHBvcnQgZnVuY3Rpb24gZGVmaW5lUHJvcGVydHlHZXR0ZXI8VCBleHRlbmRzIG9iamVjdD4ob2JqZWN0OiBULCBwcm9wOiBFeHRyYWN0PGtleW9mIFQsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBgZ2V0XyR7a2ViYWJpZnkocHJvcCkucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6ICgpID0+IG9iamVjdFtwcm9wXSxcbiAgICB9KVxufVxuXG4vLyBhdHRlbXB0IHNldHRpbmcgYSBwcm9wZXJ0eSBvZiBHT2JqZWN0Lk9iamVjdFxuZXhwb3J0IGZ1bmN0aW9uIHNldChvYmo6IEdPYmplY3QuT2JqZWN0LCBwcm9wOiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICBjb25zdCBrZXkgPSBzbmFrZWlmeShwcm9wKVxuICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtrZXl9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqXG4gICAgY29uc3Qgc2V0dGVyID0gYHNldF8ke2tleX1gIGFzIGtleW9mIHR5cGVvZiBvYmpcblxuICAgIGxldCBjdXJyZW50OiB1bmtub3duXG5cbiAgICBpZiAoZ2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW2dldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBjdXJyZW50ID0gKG9ialtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKClcbiAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50ID0gb2JqW3Byb3AgYXMga2V5b2YgdHlwZW9mIG9ial1cbiAgICB9XG5cbiAgICBpZiAoY3VycmVudCAhPT0gdmFsdWUpIHtcbiAgICAgICAgaWYgKHNldHRlciBpbiBvYmogJiYgdHlwZW9mIG9ialtzZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIDsob2JqW3NldHRlcl0gYXMgKHY6IGFueSkgPT4gdm9pZCkodmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKG9iaiwgeyBbcHJvcF06IHZhbHVlIH0pXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IFwiLi4vb3ZlcnJpZGVzLmpzXCJcbmltcG9ydCBHT2JqZWN0LCB7IHJlZ2lzdGVyLCBzaWduYWwsIHNldHRlciB9IGZyb20gXCJnbmltL2dvYmplY3RcIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2RrIGZyb20gXCJnaTovL0dkaz92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgeyBnZXR0ZXIgfSBmcm9tIFwiZ25pbS9nb2JqZWN0XCJcbmltcG9ydCB7IEFwcERCdXMgfSBmcm9tIFwiLi4vYXBwL2RidXMuanNcIlxuaW1wb3J0IHsgc2V0Q29uc29sZUxvZ0RvbWFpbiB9IGZyb20gXCJjb25zb2xlXCJcbmltcG9ydCB7IGV4aXQsIHByb2dyYW1BcmdzIH0gZnJvbSBcInN5c3RlbVwiXG5pbXBvcnQgeyBjcmVhdGVSb290IH0gZnJvbSBcImduaW1cIlxuXG5HdGsuaW5pdCgpXG5cbi8vIHN0b3AgdGhpcyBmcm9tIGxlYWtpbmcgaW50byBzdWJwcm9jZXNzZXNcbi8vIGFuZCBnaW8gbGF1bmNoIGludm9jYXRpb25zXG5HTGliLnVuc2V0ZW52KFwiTERfUFJFTE9BRFwiKVxuXG4vLyB1c2VycyBtaWdodCB3YW50IHRvIHVzZSBBZHdhaXRhIGluIHdoaWNoIGNhc2UgaXQgaGFzIHRvIGJlIGluaXRpYWxpemVkXG4vLyBpdCBtaWdodCBiZSBjb21tb24gcGl0ZmFsbCB0byBmb3JnZXQgaXQgYmVjYXVzZSBgQXBwYCBpcyBub3QgYEFkdy5BcHBsaWNhdGlvbmBcbmF3YWl0IGltcG9ydChcImdpOi8vQWR3P3ZlcnNpb249MVwiKS50aGVuKCh7IGRlZmF1bHQ6IEFkdyB9KSA9PiBBZHcuaW5pdCgpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG5cbnR5cGUgU3RhcnRDb25maWcgPSBQYXJ0aWFsPHtcbiAgICBpbnN0YW5jZU5hbWU6IHN0cmluZ1xuICAgIGNzczogc3RyaW5nXG4gICAgaWNvbnM6IHN0cmluZ1xuICAgIGd0a1RoZW1lOiBzdHJpbmdcbiAgICBpY29uVGhlbWU6IHN0cmluZ1xuICAgIGN1cnNvclRoZW1lOiBzdHJpbmdcbiAgICBtYWluKC4uLmFyZ3Y6IHN0cmluZ1tdKTogdm9pZFxuICAgIHJlcXVlc3RIYW5kbGVyKGFyZ3Y6IHN0cmluZ1tdLCByZXM6IChyZXNwb25zZTogYW55KSA9PiB2b2lkKTogdm9pZFxufT5cblxuaW50ZXJmYWNlIEFwcFNpZ25hbHMgZXh0ZW5kcyBHdGsuQXBwbGljYXRpb24uU2lnbmFsU2lnbmF0dXJlcyB7XG4gICAgcmVxdWVzdDogQXBwW1wicmVxdWVzdFwiXVxufVxuXG5AcmVnaXN0ZXIoKVxuY2xhc3MgQXBwIGV4dGVuZHMgR3RrLkFwcGxpY2F0aW9uIHtcbiAgICBkZWNsYXJlICRzaWduYWxzOiBBcHBTaWduYWxzXG5cbiAgICAjaW5zdGFuY2VOYW1lID0gXCJhZ3NcIlxuICAgICNtYWluPzogKC4uLmFyZ3Y6IHN0cmluZ1tdKSA9PiB2b2lkXG4gICAgI3JlcXVlc3RIYW5kbGVycyA9IDBcbiAgICAjZGJ1c1NlcnZpY2U6IEFwcERCdXNcbiAgICAjY3NzUHJvdmlkZXJzID0gbmV3IEFycmF5PEd0ay5Dc3NQcm92aWRlcj4oKVxuXG4gICAgZ2V0ICNzZXR0aW5ncygpOiBHdGsuU2V0dGluZ3Mge1xuICAgICAgICBjb25zdCBzZXR0aW5ncyA9IEd0ay5TZXR0aW5ncy5nZXRfZGVmYXVsdCgpXG4gICAgICAgIGlmICghc2V0dGluZ3MpIHRocm93IEVycm9yKFwiY291bGQgbm90IGdldCBzZXR0aW5nc1wiKVxuICAgICAgICByZXR1cm4gc2V0dGluZ3NcbiAgICB9XG5cbiAgICBnZXQgI2Rpc3BsYXkoKTogR2RrLkRpc3BsYXkge1xuICAgICAgICBjb25zdCBkaXNwbGF5ID0gR2RrLkRpc3BsYXkuZ2V0X2RlZmF1bHQoKVxuICAgICAgICBpZiAoIWRpc3BsYXkpIHRocm93IEVycm9yKFwiY291bGQgbm90IGdldCBkaXNwbGF5XCIpXG4gICAgICAgIHJldHVybiBkaXNwbGF5XG4gICAgfVxuXG4gICAgZ2V0IGluc3RhbmNlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI2luc3RhbmNlTmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBhbGwgbW9uaXRvcnMgZnJvbSB7QGxpbmsgR2RrLkRpc3BsYXl9LlxuICAgICAqL1xuICAgIGdldF9tb25pdG9ycygpIHtcbiAgICAgICAgY29uc3QgbW9ucyA9IHRoaXMuI2Rpc3BsYXkuZ2V0X21vbml0b3JzKCkgYXMgR2lvLkxpc3RNb2RlbDxHZGsuTW9uaXRvcj5cbiAgICAgICAgY29uc3QgbGlzdCA9IG5ldyBBcnJheTxHZGsuTW9uaXRvcj4oKVxuXG4gICAgICAgIGxldCBtb25pdG9yOiBHZGsuTW9uaXRvciB8IG51bGwgPSBudWxsXG4gICAgICAgIGxldCBpID0gMFxuXG4gICAgICAgIHdoaWxlICgobW9uaXRvciA9IG1vbnMuZ2V0X2l0ZW0oaSsrKSkgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGxpc3QucHVzaChtb25pdG9yKVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGxpc3RcbiAgICB9XG5cbiAgICBAc2lnbmFsKEd0ay5XaW5kb3cpXG4gICAgcHJpdmF0ZSB3aW5kb3dUb2dnbGVkKHdpbmRvdzogR3RrLldpbmRvdykge1xuICAgICAgICB2b2lkIHdpbmRvd1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBhbGwgbW9uaXRvcnMgZnJvbSB7QGxpbmsgR2RrLkRpc3BsYXl9LlxuICAgICAqL1xuICAgIEBnZXR0ZXIoQXJyYXkpXG4gICAgZ2V0IG1vbml0b3JzKCk6IEFycmF5PEdkay5Nb25pdG9yPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldF9tb25pdG9ycygpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogV2luZG93cyB0aGF0IGhhcyBiZWVuIGFkZGVkIHRvIHRoaXMgYXBwXG4gICAgICogdXNpbmcge0BsaW5rIEd0ay5BcHBsaWNhdGlvbi5wcm90b3R5cGUuYWRkX3dpbmRvd30uXG4gICAgICovXG4gICAgQGdldHRlcihBcnJheSlcbiAgICBnZXQgd2luZG93cygpOiBBcnJheTxHdGsuV2luZG93PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldF93aW5kb3dzKClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBzZXR0ZXIoU3RyaW5nKVxuICAgIHNldCBndGtUaGVtZShuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy4jc2V0dGluZ3MuZ3RrVGhlbWVOYW1lID0gbmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtUaGVtZU5hbWV9XG4gICAgICovXG4gICAgQGdldHRlcihTdHJpbmcpXG4gICAgZ2V0IGd0a1RoZW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jc2V0dGluZ3MuZ3RrVGhlbWVOYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a0ljb25UaGVtZU5hbWV9XG4gICAgICovXG4gICAgQHNldHRlcihTdHJpbmcpXG4gICAgc2V0IGljb25UaGVtZShuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy4jc2V0dGluZ3MuZ3RrSWNvblRoZW1lTmFtZSA9IG5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrSWNvblRoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAZ2V0dGVyKFN0cmluZylcbiAgICBnZXQgaWNvblRoZW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jc2V0dGluZ3MuZ3RrSWNvblRoZW1lTmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtDdXJzb3JUaGVtZU5hbWV9XG4gICAgICovXG4gICAgQHNldHRlcihTdHJpbmcpXG4gICAgc2V0IGN1cnNvclRoZW1lKG5hbWU6IHN0cmluZykge1xuICAgICAgICB0aGlzLiNzZXR0aW5ncy5ndGtDdXJzb3JUaGVtZU5hbWUgPSBuYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a0N1cnNvclRoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAZ2V0dGVyKFN0cmluZylcbiAgICBnZXQgY3Vyc29yVGhlbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNzZXR0aW5ncy5ndGtDdXJzb3JUaGVtZU5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgYSB3aW5kb3cgYnkgaXRzIHtAbGluayBHdGsuV2lkZ2V0LnByb3RvdHlwZS5uYW1lfSB0aGF0IGhhcyBiZWVuIGFkZGVkIHRvIHRoaXMgYXBwXG4gICAgICogdXNpbmcge0BsaW5rIEd0ay5BcHBsaWNhdGlvbi5wcm90b3R5cGUuYWRkX3dpbmRvd30uXG4gICAgICovXG4gICAgZ2V0X3dpbmRvdyhuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMud2luZG93cy5maW5kKCh3KSA9PiB3Lm5hbWUgPT09IG5hbWUpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVG9nZ2xlIHRoZSB2aXNpYmlsaXR5IG9mIGEgd2luZG93IGJ5IGl0cyB7QGxpbmsgR3RrLldpZGdldC5wcm90b3R5cGUubmFtZX1cbiAgICAgKiB0aGF0IGhhcyBiZWVuIGFkZGVkIHRvIHRoaXMgYXBwIHVzaW5nIHtAbGluayBHdGsuQXBwbGljYXRpb24ucHJvdG90eXBlLmFkZF93aW5kb3d9LlxuICAgICAqL1xuICAgIHRvZ2dsZV93aW5kb3cobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IHdpbiA9IHRoaXMuZ2V0X3dpbmRvdyhuYW1lKVxuICAgICAgICBpZiAoIXdpbikgdGhyb3cgRXJyb3IoYG5vIHdpbmRvdyByZWdpc3RlcmVkIHdpdGggbmFtZSBcIiR7bmFtZX1cImApXG4gICAgICAgIHdpbi52aXNpYmxlID0gIXdpbi52aXNpYmxlXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVzZXQgcHJldmlvdXNseSBzZXQgY3NzIHByb3ZpZGVycyB3aXRoIHtAbGluayBBcHAucHJvdG90eXBlLmFwcGx5X2Nzc30uXG4gICAgICovXG4gICAgcmVzZXRfY3NzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IHByb3ZpZGVyIG9mIHRoaXMuI2Nzc1Byb3ZpZGVycykge1xuICAgICAgICAgICAgR3RrLlN0eWxlQ29udGV4dC5yZW1vdmVfcHJvdmlkZXJfZm9yX2Rpc3BsYXkodGhpcy4jZGlzcGxheSwgcHJvdmlkZXIpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgYSBuZXcge0BsaW5rIEd0ay5Dc3NQcm92aWRlcn0uXG4gICAgICogQHBhcmFtIHN0eWxlIENzcyBzdHJpbmcgb3IgYSBwYXRoIHRvIGEgY3NzIGZpbGUuXG4gICAgICovXG4gICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0ID0gZmFsc2UpIHtcbiAgICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgR3RrLkNzc1Byb3ZpZGVyKClcblxuICAgICAgICBwcm92aWRlci5jb25uZWN0KFwicGFyc2luZy1lcnJvclwiLCAoXywgc2VjdGlvbiwgZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBzZWN0aW9uLmdldF9maWxlKCk/LmdldF9iYXNlbmFtZSgpID8/IFwiXCJcbiAgICAgICAgICAgIGNvbnN0IGxpbmUgPSBzZWN0aW9uLmdldF9zdGFydF9sb2NhdGlvbigpLmxpbmVzICsgMVxuICAgICAgICAgICAgY29uc3QgY2hhcnMgPSBzZWN0aW9uLmdldF9zdGFydF9sb2NhdGlvbigpLmxpbmVfY2hhcnMgKyAxXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBDU1MgRXJyb3IgJHtuYW1lfToke2xpbmV9OiR7Y2hhcnN9ICR7ZXJyb3IubWVzc2FnZX1gKVxuICAgICAgICB9KVxuXG4gICAgICAgIGlmIChyZXNldCkgdGhpcy5yZXNldF9jc3MoKVxuXG4gICAgICAgIGlmIChHTGliLmZpbGVfdGVzdChzdHlsZSwgR0xpYi5GaWxlVGVzdC5FWElTVFMpKSB7XG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fcGF0aChzdHlsZSlcbiAgICAgICAgfSBlbHNlIGlmIChzdHlsZS5zdGFydHNXaXRoKFwicmVzb3VyY2U6Ly9cIikpIHtcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9yZXNvdXJjZShzdHlsZS5yZXBsYWNlKFwicmVzb3VyY2U6Ly9cIiwgXCJcIikpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fc3RyaW5nKHN0eWxlKVxuICAgICAgICB9XG5cbiAgICAgICAgR3RrLlN0eWxlQ29udGV4dC5hZGRfcHJvdmlkZXJfZm9yX2Rpc3BsYXkoXG4gICAgICAgICAgICB0aGlzLiNkaXNwbGF5LFxuICAgICAgICAgICAgcHJvdmlkZXIsXG4gICAgICAgICAgICBHdGsuU1RZTEVfUFJPVklERVJfUFJJT1JJVFlfVVNFUixcbiAgICAgICAgKVxuXG4gICAgICAgIHRoaXMuI2Nzc1Byb3ZpZGVycy5wdXNoKHByb3ZpZGVyKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLkljb25UaGVtZS5wcm90b3R5cGUuYWRkX3NlYXJjaF9wYXRofS5cbiAgICAgKi9cbiAgICBhZGRfaWNvbnMocGF0aDogc3RyaW5nKSB7XG4gICAgICAgIEd0ay5JY29uVGhlbWUuZ2V0X2Zvcl9kaXNwbGF5KHRoaXMuI2Rpc3BsYXkpLmFkZF9zZWFyY2hfcGF0aChwYXRoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFF1aXQgYW5kIGV4aXQgdGhlIGFwcGxpY2F0aW9uLlxuICAgICAqL1xuICAgIHF1aXQoY29kZSA9IDApIHtcbiAgICAgICAgdGhpcy4jZGJ1c1NlcnZpY2Uuc3RvcCgpXG4gICAgICAgIHN1cGVyLnF1aXQoKVxuICAgICAgICBleGl0KGNvZGUpXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKHsgZmxhZ3M6IEdpby5BcHBsaWNhdGlvbkZsYWdzLkhBTkRMRVNfQ09NTUFORF9MSU5FIH0pXG5cbiAgICAgICAgdGhpcy4jZGJ1c1NlcnZpY2UgPSBuZXcgQXBwREJ1cyh7XG4gICAgICAgICAgICB0b2dnbGVXaW5kb3c6IHRoaXMudG9nZ2xlX3dpbmRvdy5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgcXVpdDogdGhpcy5xdWl0LmJpbmQodGhpcyksXG4gICAgICAgICAgICByZXF1ZXN0OiAoYXJndikgPT4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHRoaXMucmVxdWVzdChhcmd2LCByZXNvbHZlKSksXG4gICAgICAgICAgICBpbnNlY3RvcjogKCkgPT4ge1xuICAgICAgICAgICAgICAgIEd0ay5XaW5kb3cuc2V0X2ludGVyYWN0aXZlX2RlYnVnZ2luZyh0cnVlKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLiNkaXNwbGF5LmdldF9tb25pdG9ycygpLmNvbm5lY3QoXCJpdGVtcy1jaGFuZ2VkXCIsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMubm90aWZ5KFwibW9uaXRvcnNcIilcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLmNvbm5lY3QoXCJ3aW5kb3ctYWRkZWRcIiwgKF8sIHdpbmRvdykgPT4ge1xuICAgICAgICAgICAgY29uc3QgaWQxID0gd2luZG93LmNvbm5lY3QoXCJub3RpZnk6OnZpc2libGVcIiwgKCkgPT4gdGhpcy53aW5kb3dUb2dnbGVkKHdpbmRvdykpXG4gICAgICAgICAgICBjb25zdCBpZDIgPSB0aGlzLmNvbm5lY3QoXCJ3aW5kb3ctcmVtb3ZlZFwiLCAoXywgcmVtb3ZlZCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChyZW1vdmVkID09IHdpbmRvdykge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuZGlzY29ubmVjdChpZDEpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzY29ubmVjdChpZDIpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLiNzZXR0aW5ncy5jb25uZWN0KFwibm90aWZ5XCIsIChfLCB7IG5hbWUgfSkgPT4ge1xuICAgICAgICAgICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcImd0ay10aGVtZS1uYW1lXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KFwiZ3RrLXRoZW1lXCIpXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgICAgY2FzZSBcImd0ay1pY29uLXRoZW1lLW5hbWVcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3RpZnkoXCJpY29uLXRoZW1lXCIpXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgICAgY2FzZSBcImd0ay1jdXJzb3ItdGhlbWUtbmFtZVwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShcImN1cnNvci10aGVtZVwiKVxuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgQHNpZ25hbChBcnJheSwgRnVuY3Rpb24pXG4gICAgcHJpdmF0ZSByZXF1ZXN0KGFyZ3M6IHN0cmluZ1tdLCByZXNwb25zZTogKHJlc3BvbnNlOiBzdHJpbmcpID0+IHZvaWQpIHtcbiAgICAgICAgaWYgKHRoaXMuI3JlcXVlc3RIYW5kbGVycyA9PT0gMCkge1xuICAgICAgICAgICAgcmVzcG9uc2UoYGluc3RhbmNlIFwiJHt0aGlzLmluc3RhbmNlTmFtZX1cIiBoYXMgbm8gcmVxdWVzdCBoYW5kbGVyIGltcGxlbWVudGVkYClcbiAgICAgICAgfVxuICAgICAgICB2b2lkIGFyZ3NcbiAgICB9XG5cbiAgICB2ZnVuY19jb21tYW5kX2xpbmUoY21kOiBHaW8uQXBwbGljYXRpb25Db21tYW5kTGluZSk6IG51bWJlciB7XG4gICAgICAgIGlmIChjbWQuaXNSZW1vdGUpIHtcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdChjbWQuZ2V0X2FyZ3VtZW50cygpLCAoc3RyKSA9PiB7XG4gICAgICAgICAgICAgICAgY21kLnByaW50X2xpdGVyYWwoc3RyICsgXCJcXG5cIilcbiAgICAgICAgICAgICAgICBjbWQuZG9uZSgpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5ob2xkKClcbiAgICAgICAgICAgIHRoaXMuI2RidXNTZXJ2aWNlLnNlcnZlKHtcbiAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLmFwcGxpY2F0aW9uSWQsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdChcInNodXRkb3duXCIsIGRpc3Bvc2UpXG4gICAgICAgICAgICAgICAgdGhpcy4jbWFpbj8uKC4uLnByb2dyYW1BcmdzKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAwXG4gICAgfVxuXG4gICAgc3RhcnQoY29uZmlnOiBTdGFydENvbmZpZykge1xuICAgICAgICBjb25zdCB7IG1haW4sIHJlcXVlc3RIYW5kbGVyLCBpbnN0YW5jZU5hbWUsIGNzcywgaWNvbnMsIC4uLmNmZyB9ID0gY29uZmlnXG5cbiAgICAgICAgdGhpcy4jbWFpbiA9IG1haW5cbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjZmcpXG5cbiAgICAgICAgaWYgKHJlcXVlc3RIYW5kbGVyKSB7XG4gICAgICAgICAgICB0aGlzLmNvbm5lY3QoXCJyZXF1ZXN0XCIsIChfLCBhcmdzLCByZXNwb25zZSkgPT4gcmVxdWVzdEhhbmRsZXIoYXJncywgcmVzcG9uc2UpKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGluc3RhbmNlTmFtZSkgdGhpcy4jaW5zdGFuY2VOYW1lID0gaW5zdGFuY2VOYW1lXG4gICAgICAgIGlmIChjc3MpIHRoaXMuYXBwbHlfY3NzKGNzcywgZmFsc2UpXG4gICAgICAgIGlmIChpY29ucykgYXBwLmFkZF9pY29ucyhpY29ucylcblxuICAgICAgICB0aGlzLmFwcGxpY2F0aW9uSWQgPSBcImlvLkFzdGFsLlwiICsgdGhpcy5pbnN0YW5jZU5hbWVcbiAgICAgICAgc2V0Q29uc29sZUxvZ0RvbWFpbih0aGlzLmluc3RhbmNlTmFtZSlcbiAgICAgICAgdGhpcy5ydW5Bc3luYyhwcm9ncmFtQXJncylcbiAgICB9XG5cbiAgICBjb25uZWN0PFMgZXh0ZW5kcyBrZXlvZiBBcHBTaWduYWxzPihcbiAgICAgICAgc2lnbmFsOiBTLFxuICAgICAgICBjYWxsYmFjazogR09iamVjdC5TaWduYWxDYWxsYmFjazx0aGlzLCBBcHBTaWduYWxzW1NdPixcbiAgICApOiBudW1iZXIge1xuICAgICAgICBpZiAoc2lnbmFsID09PSBcInJlcXVlc3RcIikgdGhpcy4jcmVxdWVzdEhhbmRsZXJzICs9IDFcbiAgICAgICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaylcbiAgICB9XG59XG5cbmNvbnN0IGFwcCA9IG5ldyBBcHAoKVxuZXhwb3J0IGRlZmF1bHQgYXBwXG4iLCAiLyoqXG4gKiBBIHtAbGluayBTZXJ2aWNlfSBjdXJyZW50bHkgb25seSBhbGxvd3MgaW50ZXJmYWNpbmcgd2l0aCBhIHNpbmdsZSBpbnRlcmZhY2Ugb2YgYSByZW1vdGUgb2JqZWN0LlxuICogSW4gdGhlIGZ1dHVyZSBJIHdhbnQgdG8gY29tZSB1cCB3aXRoIGFuIEFQSSB0byBiZSBhYmxlIHRvIGNyZWF0ZSBTZXJ2aWNlIG9iamVjdHMgZm9yIG11bHRpcGxlXG4gKiBpbnRlcmZhY2VzIG9mIGFuIG9iamVjdCBhdCB0aGUgc2FtZSB0aW1lLiBFeGFtcGxlIHVzYWdlIHdvdWxkIGJlIGZvciBleGFtcGxlIGNvbWJpbmluZ1xuICogXCJvcmcubXByaXMuTWVkaWFQbGF5ZXIyXCIgYW5kIFwib3JnLm1wcmlzLk1lZGlhUGxheWVyMi5QbGF5ZXJcIiBpbnRvIGEgc2luZ2xlIG9iamVjdC5cbiAqL1xuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW9cIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiXG5pbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IGRlZmluZVByb3BlcnR5R2V0dGVyLCBrZWJhYmlmeSwgeG1sIH0gZnJvbSBcIi4vdXRpbC5qc1wiXG5pbXBvcnQgdHlwZSB7IERlZXBJbmZlciB9IGZyb20gXCIuL3ZhcmlhbnQuanNcIlxuaW1wb3J0IHtcbiAgICByZWdpc3RlcixcbiAgICBwcm9wZXJ0eSBhcyBncHJvcGVydHksXG4gICAgc2lnbmFsIGFzIGdzaWduYWwsXG4gICAgZ2V0dGVyIGFzIGdnZXR0ZXIsXG4gICAgc2V0dGVyIGFzIGdzZXR0ZXIsXG59IGZyb20gXCIuL2dvYmplY3QuanNcIlxuXG5jb25zdCBERUZBVUxUX1RJTUVPVVQgPSAxMF8wMDBcblxuZXhwb3J0IGNvbnN0IFZhcmlhbnQgPSBHTGliLlZhcmlhbnRcbmV4cG9ydCB0eXBlIFZhcmlhbnQ8VCBleHRlbmRzIHN0cmluZz4gPSBHTGliLlZhcmlhbnQ8VD5cblxuY29uc3QgaW5mbyA9IFN5bWJvbChcImRidXMgaW50ZXJmYWNlIGluZm9cIilcbmNvbnN0IGludGVybmFscyA9IFN5bWJvbChcImRidXMgaW50ZXJmYWNlIGludGVybmFsc1wiKVxuY29uc3QgcmVtb3RlTWV0aG9kID0gU3ltYm9sKFwicHJveHkgcmVtb3RlTWV0aG9kXCIpXG5jb25zdCByZW1vdGVNZXRob2RBc3luYyA9IFN5bWJvbChcInByb3h5IHJlbW90ZU1ldGhvZEFzeW5jXCIpXG5jb25zdCByZW1vdGVQcm9wZXJ0eVNldCA9IFN5bWJvbChcInByb3h5IHJlbW90ZVByb3BlcnR5U2V0XCIpXG5cbnR5cGUgQ3R4ID0geyBwcml2YXRlOiBmYWxzZTsgc3RhdGljOiBmYWxzZTsgbmFtZTogc3RyaW5nIH1cblxuLyoqXG4gKiBCYXNlIHR5cGUgZm9yIERCdXMgc2VydmljZXMgYW5kIHByb3hpZXMuIEludGVyZmFjZSBuYW1lIGlzIHNldCB3aXRoXG4gKiB0aGUge0BsaW5rIGlmYWNlfSBkZWNvcmF0b3Igd2hpY2ggYWxzbyByZWdpc3RlciBpdCBhcyBhIEdPYmplY3QgdHlwZS5cbiAqL1xuZXhwb3J0IGNsYXNzIFNlcnZpY2UgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgc3RhdGljIFtpbmZvXT86IEdpby5EQnVzSW50ZXJmYWNlSW5mb1xuXG4gICAgc3RhdGljIHtcbiAgICAgICAgR09iamVjdC5yZWdpc3RlckNsYXNzKHRoaXMpXG4gICAgfVxuXG4gICAgW2ludGVybmFsc106IHtcbiAgICAgICAgZGJ1c09iamVjdD86IEdpby5EQnVzRXhwb3J0ZWRPYmplY3RcbiAgICAgICAgcHJveHk/OiBHaW8uREJ1c1Byb3h5XG4gICAgICAgIHByaXY6IFJlY29yZDxzdHJpbmcgfCBzeW1ib2wsIHVua25vd24+XG4gICAgICAgIG9uU3RvcDogU2V0PCgpID0+IHZvaWQ+XG4gICAgfSA9IHtcbiAgICAgICAgcHJpdjoge30sXG4gICAgICAgIG9uU3RvcDogbmV3IFNldDwoKSA9PiB2b2lkPigpLFxuICAgIH1cblxuICAgICNpbmZvOiBHaW8uREJ1c0ludGVyZmFjZUluZm9cblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIGNvbnN0IHNlcnZpY2UgPSB0aGlzLmNvbnN0cnVjdG9yIGFzIHVua25vd24gYXMgdHlwZW9mIFNlcnZpY2VcbiAgICAgICAgaWYgKCFzZXJ2aWNlW2luZm9dKSB0aHJvdyBFcnJvcihcIm1pc3NpbmcgaW50ZXJmYWNlIGluZm9cIilcbiAgICAgICAgdGhpcy4jaW5mbyA9IHNlcnZpY2VbaW5mb11cbiAgICB9XG5cbiAgICBub3RpZnkocHJvcGVydHlOYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4gfCAoc3RyaW5nICYge30pKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IHByb3AgPSB0aGlzLiNpbmZvLmxvb2t1cF9wcm9wZXJ0eShwcm9wZXJ0eU5hbWUpXG5cbiAgICAgICAgaWYgKHByb3AgJiYgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QpIHtcbiAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0LmVtaXRfcHJvcGVydHlfY2hhbmdlZChcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eU5hbWUsXG4gICAgICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChwcm9wLnNpZ25hdHVyZSwgdGhpc1twcm9wZXJ0eU5hbWUgYXMga2V5b2YgdGhpc10pLFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgc3VwZXIubm90aWZ5KHByb3AgPyBrZWJhYmlmeShwcm9wZXJ0eU5hbWUpIDogcHJvcGVydHlOYW1lKVxuICAgIH1cblxuICAgIGVtaXQobmFtZTogc3RyaW5nLCAuLi5wYXJhbXM6IHVua25vd25bXSk6IHZvaWQge1xuICAgICAgICBjb25zdCBzaWduYWwgPSB0aGlzLiNpbmZvLmxvb2t1cF9zaWduYWwobmFtZSlcblxuICAgICAgICBpZiAoc2lnbmFsICYmIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0KSB7XG4gICAgICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBgKCR7c2lnbmFsLmFyZ3MubWFwKChhKSA9PiBhLnNpZ25hdHVyZSkuam9pbihcIlwiKX0pYFxuICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QuZW1pdF9zaWduYWwobmFtZSwgbmV3IEdMaWIuVmFyaWFudChzaWduYXR1cmUsIHBhcmFtcykpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gc3VwZXIuZW1pdChzaWduYWwgPyBrZWJhYmlmeShuYW1lKSA6IG5hbWUsIC4uLnBhcmFtcylcbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjaGFuZGxlUHJvcGVydHlHZXQoXzogR2lvLkRCdXNFeHBvcnRlZE9iamVjdCwgcHJvcGVydHlOYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4pIHtcbiAgICAgICAgY29uc3QgcHJvcCA9IHRoaXMuI2luZm8ubG9va3VwX3Byb3BlcnR5KHByb3BlcnR5TmFtZSlcblxuICAgICAgICBpZiAoIXByb3ApIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0gaGFzIG5vIGV4cG9ydGVkIHByb3BlcnR5OiBcIiR7cHJvcGVydHlOYW1lfVwiYClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpc1twcm9wZXJ0eU5hbWVdXG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgR0xpYi5WYXJpYW50KHByb3Auc2lnbmF0dXJlLCB2YWx1ZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjaGFuZGxlUHJvcGVydHlTZXQoXG4gICAgICAgIF86IEdpby5EQnVzRXhwb3J0ZWRPYmplY3QsXG4gICAgICAgIHByb3BlcnR5TmFtZTogRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+LFxuICAgICAgICB2YWx1ZTogR0xpYi5WYXJpYW50LFxuICAgICkge1xuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHZhbHVlLmRlZXBVbnBhY2soKVxuICAgICAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkocHJvcGVydHlOYW1lKVxuXG4gICAgICAgIGlmICghcHJvcCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYCR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfSBoYXMgbm8gcHJvcGVydHk6IFwiJHtwcm9wZXJ0eU5hbWV9XCJgKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXNbcHJvcGVydHlOYW1lXSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXNbcHJvcGVydHlOYW1lXSA9IHZhbHVlLmRlZXBVbnBhY2s8YW55PigpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjcmV0dXJuRXJyb3IoZXJyb3I6IHVua25vd24sIGludm9jYXRpb246IEdpby5EQnVzTWV0aG9kSW52b2NhdGlvbikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKVxuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBHTGliLkVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gaW52b2NhdGlvbi5yZXR1cm5fZ2Vycm9yKGVycm9yKVxuICAgICAgICB9XG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gaW52b2NhdGlvbi5yZXR1cm5fZGJ1c19lcnJvcihcbiAgICAgICAgICAgICAgICBlcnJvci5uYW1lLmluY2x1ZGVzKFwiLlwiKSA/IGVycm9yLm5hbWUgOiBgZ2pzLkpTRXJyb3IuJHtlcnJvci5uYW1lfWAsXG4gICAgICAgICAgICAgICAgZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgICBpbnZvY2F0aW9uLnJldHVybl9kYnVzX2Vycm9yKFwiZ2pzLkRCdXNTZXJ2aWNlLlVua25vd25FcnJvclwiLCBgJHtlcnJvcn1gKVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgICNyZXR1cm5WYWx1ZSh2YWx1ZTogdW5rbm93biwgbWV0aG9kTmFtZTogc3RyaW5nLCBpbnZvY2F0aW9uOiBHaW8uREJ1c01ldGhvZEludm9jYXRpb24pIHtcbiAgICAgICAgaWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnZvY2F0aW9uLnJldHVybl92YWx1ZShuZXcgR0xpYi5WYXJpYW50KFwiKClcIiwgW10pKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgYXJncyA9IHRoaXMuI2luZm8ubG9va3VwX21ldGhvZChtZXRob2ROYW1lKT8ub3V0X2FyZ3MgPz8gW11cbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYCgke2FyZ3MubWFwKChhcmcpID0+IGFyZy5zaWduYXR1cmUpLmpvaW4oXCJcIil9KWBcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkgdGhyb3cgRXJyb3IoXCJ2YWx1ZSBoYXMgdG8gYmUgYSB0dXBsZVwiKVxuICAgICAgICBpbnZvY2F0aW9uLnJldHVybl92YWx1ZShuZXcgR0xpYi5WYXJpYW50KHNpZ25hdHVyZSwgdmFsdWUpKVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgICNoYW5kbGVNZXRob2RDYWxsKFxuICAgICAgICBfOiBHaW8uREJ1c0V4cG9ydGVkT2JqZWN0LFxuICAgICAgICBtZXRob2ROYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4sXG4gICAgICAgIHBhcmFtZXRlcnM6IEdMaWIuVmFyaWFudCxcbiAgICAgICAgaW52b2NhdGlvbjogR2lvLkRCdXNNZXRob2RJbnZvY2F0aW9uLFxuICAgICk6IHZvaWQge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSAodGhpc1ttZXRob2ROYW1lXSBhcyAoLi4uYXJnczogdW5rbm93bltdKSA9PiB1bmtub3duKShcbiAgICAgICAgICAgICAgICAuLi5wYXJhbWV0ZXJzLmRlZXBVbnBhY2s8QXJyYXk8dW5rbm93bj4+KCksXG4gICAgICAgICAgICApXG5cbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEdMaWIuVmFyaWFudCkge1xuICAgICAgICAgICAgICAgIGludm9jYXRpb24ucmV0dXJuX3ZhbHVlKHZhbHVlKVxuICAgICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICAudGhlbigodmFsdWUpID0+IHRoaXMuI3JldHVyblZhbHVlKHZhbHVlLCBtZXRob2ROYW1lLCBpbnZvY2F0aW9uKSlcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gdGhpcy4jcmV0dXJuRXJyb3IoZXJyb3IsIGludm9jYXRpb24pKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLiNyZXR1cm5WYWx1ZSh2YWx1ZSwgbWV0aG9kTmFtZSwgaW52b2NhdGlvbilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHRoaXMuI3JldHVybkVycm9yKGVycm9yLCBpbnZvY2F0aW9uKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gc2VydmVyXG4gICAgYXN5bmMgc2VydmUoe1xuICAgICAgICBidXNUeXBlID0gR2lvLkJ1c1R5cGUuU0VTU0lPTixcbiAgICAgICAgbmFtZSA9IHRoaXMuI2luZm8ubmFtZSxcbiAgICAgICAgb2JqZWN0UGF0aCA9IFwiL1wiICsgdGhpcy4jaW5mby5uYW1lLnNwbGl0KFwiLlwiKS5qb2luKFwiL1wiKSxcbiAgICAgICAgZmxhZ3MgPSBHaW8uQnVzTmFtZU93bmVyRmxhZ3MuTk9ORSxcbiAgICAgICAgdGltZW91dCA9IERFRkFVTFRfVElNRU9VVCxcbiAgICB9OiB7XG4gICAgICAgIGJ1c1R5cGU/OiBHaW8uQnVzVHlwZVxuICAgICAgICBuYW1lPzogc3RyaW5nXG4gICAgICAgIG9iamVjdFBhdGg/OiBzdHJpbmdcbiAgICAgICAgZmxhZ3M/OiBHaW8uQnVzTmFtZU93bmVyRmxhZ3NcbiAgICAgICAgdGltZW91dD86IG51bWJlclxuICAgIH0gPSB7fSk6IFByb21pc2U8dGhpcz4ge1xuICAgICAgICBjb25zdCBpbXBsID0gbmV3IEdpby5EQnVzRXhwb3J0ZWRPYmplY3QoXG4gICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIG1pc3NpbmcgY29uc3RydWN0b3IgdHlwZVxuICAgICAgICAgICAgeyBnX2ludGVyZmFjZV9pbmZvOiB0aGlzLiNpbmZvIH0sXG4gICAgICAgIClcblxuICAgICAgICBpbXBsLmNvbm5lY3QoXCJoYW5kbGUtbWV0aG9kLWNhbGxcIiwgdGhpcy4jaGFuZGxlTWV0aG9kQ2FsbC5iaW5kKHRoaXMpKVxuICAgICAgICBpbXBsLmNvbm5lY3QoXCJoYW5kbGUtcHJvcGVydHktZ2V0XCIsIHRoaXMuI2hhbmRsZVByb3BlcnR5R2V0LmJpbmQodGhpcykpXG4gICAgICAgIGltcGwuY29ubmVjdChcImhhbmRsZS1wcm9wZXJ0eS1zZXRcIiwgdGhpcy4jaGFuZGxlUHJvcGVydHlTZXQuYmluZCh0aGlzKSlcblxuICAgICAgICB0aGlzLiNpbmZvLmNhY2hlX2J1aWxkKClcblxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgbGV0IHNvdXJjZSA9XG4gICAgICAgICAgICAgICAgdGltZW91dCA+IDBcbiAgICAgICAgICAgICAgICAgICAgPyBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KEVycm9yKGBzZXJ2ZSB0aW1lZCBvdXRgKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgIH0sIHRpbWVvdXQpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuXG4gICAgICAgICAgICBjb25zdCBjbGVhciA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChzb3VyY2UpXG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZSA9IG51bGxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGJ1c0lkID0gR2lvLmJ1c19vd25fbmFtZShcbiAgICAgICAgICAgICAgICBidXNUeXBlLFxuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgZmxhZ3MsXG4gICAgICAgICAgICAgICAgKGNvbm46IEdpby5EQnVzQ29ubmVjdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW1wbC5leHBvcnQoY29ubiwgb2JqZWN0UGF0aClcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0ID0gaW1wbFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLm9uU3RvcC5hZGQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdpby5idXNfdW5vd25fbmFtZShidXNJZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbXBsLnVuZXhwb3J0KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiNpbmZvLmNhY2hlX3JlbGVhc2UoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzKVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjbGVhcixcbiAgICAgICAgICAgICAgICBjbGVhcixcbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgICNoYW5kbGVQcm9wZXJ0aWVzQ2hhbmdlZChcbiAgICAgICAgXzogR2lvLkRCdXNQcm94eSxcbiAgICAgICAgY2hhbmdlZDogR0xpYi5WYXJpYW50PFwiYXtzdn1cIj4sXG4gICAgICAgIGludmFsaWRhdGVkOiBzdHJpbmdbXSxcbiAgICApIHtcbiAgICAgICAgY29uc3Qgc2V0ID0gbmV3IFNldChbLi4uT2JqZWN0LmtleXMoY2hhbmdlZC5kZWVwVW5wYWNrKCkpLCAuLi5pbnZhbGlkYXRlZF0pXG4gICAgICAgIGZvciAoY29uc3QgcHJvcCBvZiBzZXQudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIHRoaXMubm90aWZ5KHByb3AgYXMgRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICAjaGFuZGxlU2lnbmFsKFxuICAgICAgICBfOiBHaW8uREJ1c1Byb3h5LFxuICAgICAgICBfc2VuZGVyOiBzdHJpbmcgfCBudWxsLFxuICAgICAgICBzaWduYWw6IHN0cmluZyxcbiAgICAgICAgcGFyYW1ldGVyczogR0xpYi5WYXJpYW50LFxuICAgICkge1xuICAgICAgICB0aGlzLmVtaXQoa2ViYWJpZnkoc2lnbmFsKSwgLi4ucGFyYW1ldGVycy5kZWVwVW5wYWNrPEFycmF5PHVua25vd24+PigpKVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgI3JlbW90ZU1ldGhvZFBhcmFtcyhcbiAgICAgICAgbWV0aG9kTmFtZTogc3RyaW5nLFxuICAgICAgICBhcmdzOiB1bmtub3duW10sXG4gICAgKTogUGFyYW1ldGVyczxHaW8uREJ1c1Byb3h5W1wiY2FsbF9zeW5jXCJdPiB7XG4gICAgICAgIGNvbnN0IHsgcHJveHkgfSA9IHRoaXNbaW50ZXJuYWxzXVxuICAgICAgICBpZiAoIXByb3h5KSB0aHJvdyBFcnJvcihcImludmFsaWQgcmVtb3RlTWV0aG9kIGludm9jYXRpb246IG5vdCBhIHByb3h5XCIpXG5cbiAgICAgICAgY29uc3QgbWV0aG9kID0gdGhpcy4jaW5mby5sb29rdXBfbWV0aG9kKG1ldGhvZE5hbWUpXG4gICAgICAgIGlmICghbWV0aG9kKSB0aHJvdyBFcnJvcihcIm1ldGhvZCBub3QgZm91bmRcIilcblxuICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBgKCR7bWV0aG9kLmluX2FyZ3MubWFwKChhKSA9PiBhLnNpZ25hdHVyZSkuam9pbihcIlwiKX0pYFxuXG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBtZXRob2ROYW1lLFxuICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChzaWduYXR1cmUsIGFyZ3MpLFxuICAgICAgICAgICAgR2lvLkRCdXNDYWxsRmxhZ3MuTk9ORSxcbiAgICAgICAgICAgIERFRkFVTFRfVElNRU9VVCxcbiAgICAgICAgICAgIG51bGwsXG4gICAgICAgIF1cbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgIFtyZW1vdGVNZXRob2RdKG1ldGhvZE5hbWU6IHN0cmluZywgYXJnczogdW5rbm93bltdKTogR0xpYi5WYXJpYW50IHtcbiAgICAgICAgY29uc3QgcGFyYW1zID0gdGhpcy4jcmVtb3RlTWV0aG9kUGFyYW1zKG1ldGhvZE5hbWUsIGFyZ3MpXG4gICAgICAgIHJldHVybiB0aGlzW2ludGVybmFsc10ucHJveHkhLmNhbGxfc3luYyguLi5wYXJhbXMpXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICBbcmVtb3RlTWV0aG9kQXN5bmNdKG1ldGhvZE5hbWU6IHN0cmluZywgYXJnczogdW5rbm93bltdKTogUHJvbWlzZTxHTGliLlZhcmlhbnQ+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gdGhpcy4jcmVtb3RlTWV0aG9kUGFyYW1zKG1ldGhvZE5hbWUsIGFyZ3MpXG4gICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLnByb3h5IS5jYWxsKC4uLnBhcmFtcywgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzW2ludGVybmFsc10ucHJveHkhLmNhbGxfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICBbcmVtb3RlUHJvcGVydHlTZXRdKG5hbWU6IHN0cmluZywgdmFsdWU6IHVua25vd24pIHtcbiAgICAgICAgY29uc3QgcHJveHkgPSB0aGlzW2ludGVybmFsc10ucHJveHkhXG4gICAgICAgIGNvbnN0IHByb3AgPSB0aGlzLiNpbmZvLmxvb2t1cF9wcm9wZXJ0eShuYW1lKSFcblxuICAgICAgICBjb25zdCB2YXJpYW50ID0gbmV3IEdMaWIuVmFyaWFudChwcm9wLnNpZ25hdHVyZSwgdmFsdWUpXG4gICAgICAgIHByb3h5LnNldF9jYWNoZWRfcHJvcGVydHkobmFtZSwgdmFyaWFudClcblxuICAgICAgICBwcm94eS5jYWxsKFxuICAgICAgICAgICAgXCJvcmcuZnJlZWRlc2t0b3AuREJ1cy5Qcm9wZXJ0aWVzLlNldFwiLFxuICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChcIihzc3YpXCIsIFtwcm94eS5nSW50ZXJmYWNlTmFtZSwgbmFtZSwgdmFyaWFudF0pLFxuICAgICAgICAgICAgR2lvLkRCdXNDYWxsRmxhZ3MuTk9ORSxcbiAgICAgICAgICAgIC0xLFxuICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBwcm94eS5jYWxsX2ZpbmlzaChyZXMpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgKVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgYXN5bmMgcHJveHkoe1xuICAgICAgICBidXMgPSBHaW8uREJ1cy5zZXNzaW9uLFxuICAgICAgICBuYW1lID0gdGhpcy4jaW5mby5uYW1lLFxuICAgICAgICBvYmplY3RQYXRoID0gXCIvXCIgKyB0aGlzLiNpbmZvLm5hbWUuc3BsaXQoXCIuXCIpLmpvaW4oXCIvXCIpLFxuICAgICAgICBmbGFncyA9IEdpby5EQnVzUHJveHlGbGFncy5OT05FLFxuICAgICAgICB0aW1lb3V0ID0gREVGQVVMVF9USU1FT1VULFxuICAgIH06IHtcbiAgICAgICAgYnVzPzogR2lvLkRCdXNDb25uZWN0aW9uXG4gICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgb2JqZWN0UGF0aD86IHN0cmluZ1xuICAgICAgICBmbGFncz86IEdpby5EQnVzUHJveHlGbGFnc1xuICAgICAgICB0aW1lb3V0PzogbnVtYmVyXG4gICAgfSA9IHt9KTogUHJvbWlzZTx0aGlzPiB7XG4gICAgICAgIGNvbnN0IHByb3h5ID0gbmV3IEdpby5EQnVzUHJveHkoe1xuICAgICAgICAgICAgZ0Nvbm5lY3Rpb246IGJ1cyxcbiAgICAgICAgICAgIGdJbnRlcmZhY2VOYW1lOiB0aGlzLiNpbmZvLm5hbWUsXG4gICAgICAgICAgICBnSW50ZXJmYWNlSW5mbzogdGhpcy4jaW5mbyxcbiAgICAgICAgICAgIGdOYW1lOiBuYW1lLFxuICAgICAgICAgICAgZ0ZsYWdzOiBmbGFncyxcbiAgICAgICAgICAgIGdPYmplY3RQYXRoOiBvYmplY3RQYXRoLFxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjYW5jYWxsYWJsZSA9IG5ldyBHaW8uQ2FuY2VsbGFibGUoKVxuXG4gICAgICAgICAgICBsZXQgc291cmNlID1cbiAgICAgICAgICAgICAgICB0aW1lb3V0ID4gMFxuICAgICAgICAgICAgICAgICAgICA/IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoRXJyb3IoYHByb3h5IHRpbWVkIG91dGApKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgPSBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNhbmNhbGxhYmxlLmNhbmNlbCgpXG4gICAgICAgICAgICAgICAgICAgICAgfSwgdGltZW91dClcbiAgICAgICAgICAgICAgICAgICAgOiBudWxsXG5cbiAgICAgICAgICAgIHByb3h5LmluaXRfYXN5bmMoR0xpYi5QUklPUklUWV9ERUZBVUxULCBjYW5jYWxsYWJsZSwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChzb3VyY2UpXG4gICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgPSBudWxsXG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBwcm94eS5pbml0X2ZpbmlzaChyZXMpXG4gICAgICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5wcm94eSA9IHByb3h5XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaWRzID0gW1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJveHkuY29ubmVjdChcImctc2lnbmFsXCIsIHRoaXMuI2hhbmRsZVNpZ25hbC5iaW5kKHRoaXMpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3h5LmNvbm5lY3QoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJnLXByb3BlcnRpZXMtY2hhbmdlZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuI2hhbmRsZVByb3BlcnRpZXNDaGFuZ2VkLmJpbmQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBdXG5cbiAgICAgICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLm9uU3RvcC5hZGQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWRzLmZvckVhY2goKGlkKSA9PiBwcm94eS5kaXNjb25uZWN0KGlkKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzW2ludGVybmFsc10ucHJveHlcbiAgICAgICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRoaXMpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgc3RvcCgpIHtcbiAgICAgICAgY29uc3QgeyBvblN0b3AgfSA9IHRoaXNbaW50ZXJuYWxzXVxuICAgICAgICBmb3IgKGNvbnN0IGNiIG9mIG9uU3RvcC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgb25TdG9wLmRlbGV0ZShjYilcbiAgICAgICAgICAgIGNiKClcbiAgICAgICAgfVxuICAgIH1cbn1cblxudHlwZSBJbnRlcmZhY2VNZXRhID0ge1xuICAgIGRidXNNZXRob2RzPzogUmVjb3JkPFxuICAgICAgICBzdHJpbmcsXG4gICAgICAgIEFycmF5PHtcbiAgICAgICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICAgICAgICAgICAgZGlyZWN0aW9uOiBcImluXCIgfCBcIm91dFwiXG4gICAgICAgIH0+XG4gICAgPlxuICAgIGRidXNTaWduYWxzPzogUmVjb3JkPFxuICAgICAgICBzdHJpbmcsXG4gICAgICAgIEFycmF5PHtcbiAgICAgICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICAgICAgICB9PlxuICAgID5cbiAgICBkYnVzUHJvcGVydGllcz86IFJlY29yZDxcbiAgICAgICAgc3RyaW5nLFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBzdHJpbmdcbiAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICAgICAgICAgICAgcmVhZD86IHRydWVcbiAgICAgICAgICAgIHdyaXRlPzogdHJ1ZVxuICAgICAgICB9XG4gICAgPlxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIHtAbGluayBTZXJ2aWNlfSBhcyBhIGRidXMgaW50ZXJmYWNlLlxuICpcbiAqIEBwYXJhbSBuYW1lIEludGVyZmFjZSBuYW1lIG9mIHRoZSBvYmplY3QuIEZvciBleGFtcGxlIFwib3JnLmdub21lLlNoZWxsLlNlYXJjaFByb3ZpZGVyMlwiXG4gKiBAcGFyYW0gb3B0aW9ucyBvcHRpb25hbCBwcm9wZXJ0aWVzIHRvIHBhc3MgdG8ge0BsaW5rIHJlZ2lzdGVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaWZhY2UobmFtZTogc3RyaW5nLCBvcHRpb25zPzogUGFyYW1ldGVyczx0eXBlb2YgcmVnaXN0ZXI+WzBdKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjbHM6IHsgbmV3ICguLi5hcmdzOiBhbnlbXSk6IFNlcnZpY2UgfSwgY3R4OiBDbGFzc0RlY29yYXRvckNvbnRleHQpIHtcbiAgICAgICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YVxuICAgICAgICBpZiAoIW1ldGEpIHRocm93IEVycm9yKGAke2Nscy5uYW1lfSBpcyBub3QgYW4gaW50ZXJmYWNlYClcblxuICAgICAgICBjb25zdCB7IGRidXNNZXRob2RzID0ge30sIGRidXNTaWduYWxzID0ge30sIGRidXNQcm9wZXJ0aWVzID0ge30gfSA9IG1ldGEgYXMgSW50ZXJmYWNlTWV0YVxuXG4gICAgICAgIGNvbnN0IGluZm9YbWwgPSB4bWwoe1xuICAgICAgICAgICAgbmFtZTogXCJub2RlXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJpbnRlcmZhY2VcIixcbiAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogeyBuYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5PYmplY3QuZW50cmllcyhkYnVzTWV0aG9kcykubWFwKChbbmFtZSwgYXJnc10pID0+ICh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtZXRob2RcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7IG5hbWUgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogYXJncy5tYXAoKGFyZykgPT4gKHsgbmFtZTogXCJhcmdcIiwgYXR0cmlidXRlczogYXJnIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLk9iamVjdC5lbnRyaWVzKGRidXNTaWduYWxzKS5tYXAoKFtuYW1lLCBhcmdzXSkgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInNpZ25hbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHsgbmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBhcmdzLm1hcCgoYXJnKSA9PiAoeyBuYW1lOiBcImFyZ1wiLCBhdHRyaWJ1dGVzOiBhcmcgfSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgLi4uT2JqZWN0LnZhbHVlcyhkYnVzUHJvcGVydGllcykubWFwKCh7IG5hbWUsIHR5cGUsIHJlYWQsIHdyaXRlIH0pID0+ICh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJwcm9wZXJ0eVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uKG5hbWUgJiYgeyBuYW1lIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3M6IChyZWFkID8gXCJyZWFkXCIgOiBcIlwiKSArICh3cml0ZSA/IFwid3JpdGVcIiA6IFwiXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0pXG5cbiAgICAgICAgT2JqZWN0LmFzc2lnbihjbHMsIHsgW2luZm9dOiBHaW8uREJ1c0ludGVyZmFjZUluZm8ubmV3X2Zvcl94bWwoaW5mb1htbCkgfSlcbiAgICAgICAgcmVnaXN0ZXIob3B0aW9ucykoY2xzLCBjdHgpXG4gICAgfVxufVxuXG50eXBlIERCdXNUeXBlID0gc3RyaW5nIHwgeyB0eXBlOiBzdHJpbmc7IG5hbWU6IHN0cmluZyB9XG5cbnR5cGUgSW5mZXJWYXJpYW50VHlwZXM8VCBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4gPSB7XG4gICAgW0sgaW4ga2V5b2YgVF06IFRbS10gZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgPyBEZWVwSW5mZXI8VFtLXT5cbiAgICAgICAgOiBUW0tdIGV4dGVuZHMgeyB0eXBlOiBpbmZlciBTIH1cbiAgICAgICAgICA/IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgICAgICAgPyBEZWVwSW5mZXI8Uz5cbiAgICAgICAgICAgICAgOiBuZXZlclxuICAgICAgICAgIDogdW5rbm93blxufVxuXG5mdW5jdGlvbiBpbnN0YWxsTWV0aG9kPEFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIGFyZ3M6IEFyZ3MgfCBbQXJncywgQXJncz9dLFxuICAgIG1ldGhvZDogKC4uLmFyZ3M6IGFueVtdKSA9PiB1bmtub3duLFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSB7XG4gICAgY29uc3QgbmFtZSA9IGN0eC5uYW1lXG4gICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YSEgYXMgSW50ZXJmYWNlTWV0YVxuICAgIGNvbnN0IG1ldGhvZHMgPSAobWV0YS5kYnVzTWV0aG9kcyA/Pz0ge30pXG5cbiAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJvbmx5IHN0cmluZyBuYW1lZCBtZXRob2RzIGFyZSBhbGxvd2VkXCIpXG4gICAgfVxuXG4gICAgY29uc3QgW2luQXJncywgb3V0QXJncyA9IFtdXSA9IChBcnJheS5pc0FycmF5KGFyZ3NbMF0pID8gYXJncyA6IFthcmdzXSkgYXMgW0FyZ3MsIEFyZ3NdXG5cbiAgICBtZXRob2RzW25hbWVdID0gW1xuICAgICAgICAuLi5pbkFyZ3MubWFwKChhcmcpID0+ICh7XG4gICAgICAgICAgICBkaXJlY3Rpb246IFwiaW5cIiBhcyBjb25zdCxcbiAgICAgICAgICAgIC4uLih0eXBlb2YgYXJnID09PSBcInN0cmluZ1wiID8geyB0eXBlOiBhcmcgfSA6IGFyZyksXG4gICAgICAgIH0pKSxcbiAgICAgICAgLi4ub3V0QXJncy5tYXAoKGFyZykgPT4gKHtcbiAgICAgICAgICAgIGRpcmVjdGlvbjogXCJvdXRcIiBhcyBjb25zdCxcbiAgICAgICAgICAgIC4uLih0eXBlb2YgYXJnID09PSBcInN0cmluZ1wiID8geyB0eXBlOiBhcmcgfSA6IGFyZyksXG4gICAgICAgIH0pKSxcbiAgICBdXG5cbiAgICByZXR1cm4gbmFtZVxufVxuXG5mdW5jdGlvbiBpbnN0YWxsUHJvcGVydHk8VCBleHRlbmRzIHN0cmluZz4oXG4gICAgdHlwZTogVCxcbiAgICBjdHg6IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0LFxuKSB7XG4gICAgY29uc3Qga2luZCA9IGN0eC5raW5kXG4gICAgY29uc3QgbmFtZSA9IGN0eC5uYW1lXG4gICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YSEgYXMgSW50ZXJmYWNlTWV0YVxuICAgIGNvbnN0IHByb3BlcnRpZXMgPSAobWV0YS5kYnVzUHJvcGVydGllcyA/Pz0ge30pXG5cbiAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJvbmx5IHN0cmluZyBuYW1lZCBwcm9wZXJ0aWVzIGFyZSBhbGxvd2VkXCIpXG4gICAgfVxuXG4gICAgY29uc3QgcmVhZCA9IGtpbmQgPT09IFwiZmllbGRcIiB8fCBraW5kID09PSBcImdldHRlclwiXG4gICAgY29uc3Qgd3JpdGUgPSBraW5kID09PSBcImZpZWxkXCIgfHwga2luZCA9PT0gXCJzZXR0ZXJcIlxuXG4gICAgaWYgKG5hbWUgaW4gcHJvcGVydGllcykge1xuICAgICAgICBpZiAod3JpdGUpIHByb3BlcnRpZXNbbmFtZV0ud3JpdGUgPSB0cnVlXG4gICAgICAgIGlmIChyZWFkKSBwcm9wZXJ0aWVzW25hbWVdLnJlYWQgPSB0cnVlXG4gICAgfSBlbHNlIHtcbiAgICAgICAgcHJvcGVydGllc1tuYW1lXSA9IHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgLi4uKHJlYWQgJiYgeyByZWFkIH0pLFxuICAgICAgICAgICAgLi4uKHdyaXRlICYmIHsgd3JpdGUgfSksXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmFtZVxufVxuXG5mdW5jdGlvbiBpbnN0YWxsU2lnbmFsPFBhcmFtcyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgcGFyYW1zOiBQYXJhbXMsXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZT4sXG4pIHtcbiAgICBjb25zdCBuYW1lID0gY3R4Lm5hbWVcbiAgICBjb25zdCBtZXRhID0gY3R4Lm1ldGFkYXRhISBhcyBJbnRlcmZhY2VNZXRhXG4gICAgY29uc3Qgc2lnbmFscyA9IChtZXRhLmRidXNTaWduYWxzID8/PSB7fSlcblxuICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gXCJzeW1ib2xcIikge1xuICAgICAgICB0aHJvdyBFcnJvcihcInN5bWJvbHMgYXJlIG5vdCB2YWxpZCBzaWduYWxzXCIpXG4gICAgfVxuXG4gICAgc2lnbmFsc1tuYW1lXSA9IHBhcmFtcy5tYXAoKGFyZykgPT4gKHR5cGVvZiBhcmcgPT09IFwic3RyaW5nXCIgPyB7IHR5cGU6IGFyZyB9IDogYXJnKSlcblxuICAgIHJldHVybiBuYW1lXG59XG5cbmZ1bmN0aW9uIGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlOiBEQnVzVHlwZSk6IEdPYmplY3QuR1R5cGU8YW55PiB7XG4gICAgaWYgKHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiKSByZXR1cm4gaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGUudHlwZSlcblxuICAgIGlmICh0eXBlLnN0YXJ0c1dpdGgoXCJhXCIpIHx8IHR5cGUuc3RhcnRzV2l0aChcIihcIikpIHtcbiAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9KU09CSkVDVFxuICAgIH1cblxuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIFwidlwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9WQVJJQU5UXG4gICAgICAgIGNhc2UgXCJiXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0JPT0xFQU5cbiAgICAgICAgY2FzZSBcInlcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVFxuICAgICAgICBjYXNlIFwiblwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlRcbiAgICAgICAgY2FzZSBcInFcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVFxuICAgICAgICBjYXNlIFwiaVwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlRcbiAgICAgICAgY2FzZSBcInVcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVFxuICAgICAgICBjYXNlIFwieFwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlQ2NFxuICAgICAgICBjYXNlIFwidFwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9VSU5UNjRcbiAgICAgICAgY2FzZSBcImhcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfSU5UXG4gICAgICAgIGNhc2UgXCJkXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0RPVUJMRVxuICAgICAgICBjYXNlIFwic1wiOlxuICAgICAgICBjYXNlIFwiZ1wiOlxuICAgICAgICBjYXNlIFwib1wiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9TVFJJTkdcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGJyZWFrXG4gICAgfVxuXG4gICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBpbmZlciBHVHlwZSBmcm9tIHZhcmlhbnQgXCIke3R5cGV9XCJgKVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHtAbGluayBtZXRob2RBc3luY30gd2hlbiBwcm94eWluZywgZHVlIHRvIElPIGJsb2NraW5nLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2RBc3luY30gb24gZXhwb3J0ZWQgb2JqZWN0cy5cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPiwgY29uc3QgT3V0QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgaW5BcmdzOiBJbkFyZ3MsXG4gICAgb3V0QXJnczogT3V0QXJncyxcbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPixcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbikgPT4gdm9pZFxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHtAbGluayBtZXRob2RBc3luY30gd2hlbiBwcm94eWluZywgZHVlIHRvIElPIGJsb2NraW5nLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2RBc3luY30gb24gZXhwb3J0ZWQgb2JqZWN0cy5cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgLi4uaW5BcmdzOiBJbkFyZ3Ncbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiB2b2lkLFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2Q8Y29uc3QgSW5BcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LCBjb25zdCBPdXRBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PihcbiAgICAuLi5hcmdzOiBJbkFyZ3MgfCBbaW5BcmdzOiBJbkFyZ3MsIG91dEFyZ3M/OiBPdXRBcmdzXVxuKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChcbiAgICAgICAgbWV0aG9kOiAoXG4gICAgICAgICAgICB0aGlzOiBTZXJ2aWNlLFxuICAgICAgICAgICAgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPlxuICAgICAgICApID0+IEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+IHwgdm9pZCxcbiAgICAgICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4gICAgKTogdHlwZW9mIG1ldGhvZCB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBpbnN0YWxsTWV0aG9kKGFyZ3MsIG1ldGhvZCwgY3R4KVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPikge1xuICAgICAgICAgICAgaWYgKHRoaXNbaW50ZXJuYWxzXS5wcm94eSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpc1tyZW1vdGVNZXRob2RdKG5hbWUsIGFyZ3MpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmRlZXBVbnBhY2s8SW5mZXJWYXJpYW50VHlwZXM8T3V0QXJncz4+KClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1ldGhvZC5hcHBseSh0aGlzLCBhcmdzKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHRoaXMgb3ZlciB7QGxpbmsgbWV0aG9kfSB3aGVuIHByb3h5aW5nLCBzaW5jZSB0aGlzIGRvZXMgbm90IGJsb2NrIElPLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2R9IG9uIGV4cG9ydGVkIG9iamVjdHMuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZEFzeW5jPFxuICAgIGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPixcbiAgICBjb25zdCBPdXRBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LFxuPihcbiAgICBpbkFyZ3M6IEluQXJncyxcbiAgICBvdXRBcmdzOiBPdXRBcmdzLFxuKTogKFxuICAgIG1ldGhvZDogKFxuICAgICAgICB0aGlzOiBTZXJ2aWNlLFxuICAgICAgICAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+XG4gICAgKSA9PiBQcm9taXNlPEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+PixcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbikgPT4gdm9pZFxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHRoaXMgb3ZlciB7QGxpbmsgbWV0aG9kfSB3aGVuIHByb3h5aW5nLCBzaW5jZSB0aGlzIGRvZXMgbm90IGJsb2NrIElPLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2R9IG9uIGV4cG9ydGVkIG9iamVjdHMuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZEFzeW5jPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgLi4uaW5BcmdzOiBJbkFyZ3Ncbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBQcm9taXNlPHZvaWQ+LFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2RBc3luYzxcbiAgICBjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4sXG4gICAgY29uc3QgT3V0QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPixcbj4oLi4uYXJnczogSW5BcmdzIHwgW2luQXJnczogSW5BcmdzLCBvdXRBcmdzPzogT3V0QXJnc10pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBtZXRob2Q6IChcbiAgICAgICAgICAgIHRoaXM6IFNlcnZpY2UsXG4gICAgICAgICAgICAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+XG4gICAgICAgICkgPT4gUHJvbWlzZTxJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPiB8IHZvaWQ+LFxuICAgICAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbiAgICApOiB0eXBlb2YgbWV0aG9kIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxNZXRob2QoYXJncywgbWV0aG9kLCBjdHgpXG5cbiAgICAgICAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uICguLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSB7XG4gICAgICAgICAgICBpZiAodGhpc1tpbnRlcm5hbHNdLnByb3h5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBhd2FpdCB0aGlzW3JlbW90ZU1ldGhvZEFzeW5jXShuYW1lLCBhcmdzKVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS5kZWVwVW5wYWNrPEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+PigpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBtZXRob2QuYXBwbHkodGhpcywgYXJncylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSByZWFkLXdyaXRlIHByb3BlcnR5LiBXaGVuIGEgbmV3IHZhbHVlIGlzIGFzc2lnbmVkIHRoZSBub3RpZnkgc2lnbmFsXG4gKiBpcyBhdXRvbWF0aWNhbGx5IGVtaXR0ZWQgb24gdGhlIGxvY2FsIGFuZCBleHBvcnRlZCBvYmplY3QuXG4gKlxuICogTm90ZSB0aGF0IG5ldyB2YWx1ZXMgYXJlIGNoZWNrZWQgYnkgcmVmZXJlbmNlIHNvIGFzc2lnbmluZyB0aGUgc2FtZSBvYmplY3Qgd2lsbFxuICogbm90IGVtaXQgdGhlIG5vdGlmeSBzaWduYWwuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByb3BlcnR5PFQgZXh0ZW5kcyBzdHJpbmc+KHR5cGU6IFQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBfOiB2b2lkLFxuICAgICAgICBjdHg6IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIERlZXBJbmZlcjxUPj4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIGluaXQ6IERlZXBJbmZlcjxUPikgPT4gRGVlcEluZmVyPFQ+IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxQcm9wZXJ0eSh0eXBlLCBjdHgpXG5cbiAgICAgICAgdm9pZCBncHJvcGVydHkoeyAkZ3R5cGU6IGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlKSB9KShcbiAgICAgICAgICAgIF8sXG4gICAgICAgICAgICBjdHggYXMgQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQ8R09iamVjdC5PYmplY3Q+ICYgQ3R4LFxuICAgICAgICAgICAgeyBtZXRhT25seTogdHJ1ZSB9LFxuICAgICAgICApXG5cbiAgICAgICAgY3R4LmFkZEluaXRpYWxpemVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBuYW1lLCB7XG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNldCh2YWx1ZTogRGVlcEluZmVyPFQ+KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJveHksIHByaXYgfSA9IHRoaXNbaW50ZXJuYWxzXVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcm94eSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1tyZW1vdGVQcm9wZXJ0eVNldF0obmFtZSwgdmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcml2W25hbWVdICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJpdltuYW1lXSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShuYW1lIGFzIEV4dHJhY3Q8a2V5b2YgU2VydmljZSwgc3RyaW5nPilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0KCk6IERlZXBJbmZlcjxUPiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJveHksIHByaXYgfSA9IHRoaXNbaW50ZXJuYWxzXVxuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm94eVxuICAgICAgICAgICAgICAgICAgICAgICAgPyBwcm94eS5nZXRfY2FjaGVkX3Byb3BlcnR5KG5hbWUpIS5kZWVwVW5wYWNrPERlZXBJbmZlcjxUPj4oKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiAocHJpdltuYW1lXSBhcyBEZWVwSW5mZXI8VD4pXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gc2F0aXNmaWVzIFRoaXNUeXBlPFNlcnZpY2U+KVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoaW5pdCkge1xuICAgICAgICAgICAgY29uc3QgcHJpdiA9IHRoaXNbaW50ZXJuYWxzXS5wcml2XG4gICAgICAgICAgICBwcml2W25hbWVdID0gaW5pdFxuICAgICAgICAgICAgLy8gd2UgZG9uJ3QgbmVlZCB0byBzdG9yZSB0aGUgdmFsdWUgb24gdGhlIG9iamVjdFxuICAgICAgICAgICAgcmV0dXJuIHZvaWQgMCBhcyB1bmtub3duIGFzIERlZXBJbmZlcjxUPlxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIHJlYWQtb25seSBwcm9wZXJ0eS4gQ2FuIGJlIHVzZWQgaW4gY29uanVjdGlvbiB3aXRoIHtAbGluayBzZXR0ZXJ9IHRvIGRlZmluZVxuICogcmVhZC13cml0ZSBwcm9wZXJ0aWVzIGFzIGFjY2Vzc29ycy5cbiAqXG4gKiBOb3RlIHRoYXQgeW91IHdpbGwgbmVlZCB0byBleHBsaWNpdGx5IGVtaXQgdGhlIG5vdGlmeSBzaWduYWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXR0ZXI8VCBleHRlbmRzIHN0cmluZz4odHlwZTogVCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIGdldHRlcjogKHRoaXM6IFNlcnZpY2UpID0+IERlZXBJbmZlcjxUPixcbiAgICAgICAgY3R4OiBDbGFzc0dldHRlckRlY29yYXRvckNvbnRleHQ8U2VydmljZSwgRGVlcEluZmVyPFQ+PixcbiAgICApOiAodGhpczogU2VydmljZSkgPT4gRGVlcEluZmVyPFQ+IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxQcm9wZXJ0eSh0eXBlLCBjdHgpXG5cbiAgICAgICAgY3R4LmFkZEluaXRpYWxpemVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRlZmluZVByb3BlcnR5R2V0dGVyKHRoaXMsIG5hbWUgYXMgRXh0cmFjdDxrZXlvZiBTZXJ2aWNlLCBzdHJpbmc+KVxuICAgICAgICB9KVxuXG4gICAgICAgIHZvaWQgZ2dldHRlcih7ICRndHlwZTogaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGUpIH0pKFxuICAgICAgICAgICAgKCkgPT4ge30sXG4gICAgICAgICAgICBjdHggYXMgQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0PEdPYmplY3QuT2JqZWN0PiAmIEN0eCxcbiAgICAgICAgKVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBjb25zdCB7IHByb3h5IH0gPSB0aGlzW2ludGVybmFsc11cbiAgICAgICAgICAgIHJldHVybiBwcm94eVxuICAgICAgICAgICAgICAgID8gcHJveHkuZ2V0X2NhY2hlZF9wcm9wZXJ0eShuYW1lKSEuZGVlcFVucGFjazxEZWVwSW5mZXI8VD4+KClcbiAgICAgICAgICAgICAgICA6IGdldHRlci5jYWxsKHRoaXMpXG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgd3JpdGUtb25seSBwcm9wZXJ0eS4gQ2FuIGJlIHVzZWQgaW4gY29uanVjdGlvbiB3aXRoIHtAbGluayBnZXR0ZXJ9IHRvIGRlZmluZVxuICogcmVhZC13cml0ZSBwcm9wZXJ0aWVzIGFzIGFjY2Vzc29ycy5cbiAqXG4gKiBOb3RlIHRoYXQgeW91IHdpbGwgbmVlZCB0byBleHBsaWNpdGx5IGVtaXQgdGhlIG5vdGlmeSBzaWduYWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXR0ZXI8VCBleHRlbmRzIHN0cmluZz4odHlwZTogVCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIHNldHRlcjogKHRoaXM6IFNlcnZpY2UsIHZhbHVlOiBEZWVwSW5mZXI8VD4pID0+IHZvaWQsXG4gICAgICAgIGN0eDogQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIERlZXBJbmZlcjxUPj4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIHZhbHVlOiBEZWVwSW5mZXI8VD4pID0+IHZvaWQge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbFByb3BlcnR5KHR5cGUsIGN0eClcblxuICAgICAgICB2b2lkIGdzZXR0ZXIoeyAkZ3R5cGU6IGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlKSB9KShcbiAgICAgICAgICAgICgpID0+IHt9LFxuICAgICAgICAgICAgY3R4IGFzIENsYXNzU2V0dGVyRGVjb3JhdG9yQ29udGV4dDxHT2JqZWN0Lk9iamVjdD4gJiBDdHgsXG4gICAgICAgIClcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHZhbHVlOiBEZWVwSW5mZXI8VD4pIHtcbiAgICAgICAgICAgIGNvbnN0IHsgcHJveHkgfSA9IHRoaXNbaW50ZXJuYWxzXVxuXG4gICAgICAgICAgICBpZiAocHJveHkpIHtcbiAgICAgICAgICAgICAgICB0aGlzW3JlbW90ZVByb3BlcnR5U2V0XShuYW1lLCB2YWx1ZSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2V0dGVyLmNhbGwodGhpcywgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgc2lnbmFsIHdoaWNoIHdoZW4gaW52b2tlZCB3aWxsIGVtaXQgdGhlIHNpZ25hbFxuICogb24gdGhlIGxvY2FsIG9iamVjdCBhbmQgdGhlIGV4cG9ydGVkIG9iamVjdC5cbiAqXG4gKiAqKk5vdGUqKjogaXRzIG5vdCBwb3NzaWJsZSB0byBlbWl0IHNpZ25hbHMgb24gcmVtb3RlIG9iamVjdHMgdGhyb3VnaCBwcm94aWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsPGNvbnN0IFBhcmFtcyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oLi4ucGFyYW1zOiBQYXJhbXMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5wYXJhbXM6IEluZmVyVmFyaWFudFR5cGVzPFBhcmFtcz4pID0+IHZvaWQsXG4gICAgICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuICAgICk6IHR5cGVvZiBtZXRob2Qge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbFNpZ25hbChwYXJhbXMsIGN0eClcblxuICAgICAgICB2b2lkIGdzaWduYWwoLi4ucGFyYW1zLm1hcChpbmZlckdUeXBlRnJvbVZhcmlhbnQpKShcbiAgICAgICAgICAgICgpID0+IHt9LFxuICAgICAgICAgICAgY3R4IGFzIENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxHT2JqZWN0Lk9iamVjdD4gJiBDdHgsXG4gICAgICAgIClcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLnBhcmFtczogSW5mZXJWYXJpYW50VHlwZXM8UGFyYW1zPikge1xuICAgICAgICAgICAgaWYgKHRoaXNbaW50ZXJuYWxzXS5wcm94eSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgY2Fubm90IGVtaXQgc2lnbmFsIFwiJHtuYW1lfVwiIG9uIHJlbW90ZSBvYmplY3RgKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QgfHwgIXRoaXNbaW50ZXJuYWxzXS5wcm94eSkge1xuICAgICAgICAgICAgICAgIG1ldGhvZC5hcHBseSh0aGlzLCBwYXJhbXMpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVtaXQobmFtZSwgLi4ucGFyYW1zKVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCB7IFNlcnZpY2UsIGlmYWNlLCBtZXRob2RBc3luYyB9IGZyb20gXCJnbmltL2RidXNcIlxuXG5leHBvcnQgaW50ZXJmYWNlIEFwcERCdXNJbXBsIHtcbiAgICBpbnNlY3RvcigpOiB2b2lkXG4gICAgdG9nZ2xlV2luZG93KG5hbWU6IHN0cmluZyk6IHZvaWRcbiAgICBxdWl0KCk6IHZvaWRcbiAgICByZXF1ZXN0KGFyZ3Y6IHN0cmluZ1tdKTogUHJvbWlzZTxzdHJpbmc+XG59XG5cbkBpZmFjZShcImlvLkFzdGFsLkFwcGxpY2F0aW9uXCIpXG5leHBvcnQgY2xhc3MgQXBwREJ1cyBleHRlbmRzIFNlcnZpY2Uge1xuICAgIHByaXZhdGUgaW1wbDogQXBwREJ1c0ltcGxcblxuICAgIEBtZXRob2RBc3luYygpXG4gICAgYXN5bmMgSW5zcGVjdG9yKCk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuaW1wbC5pbnNlY3RvcigpKVxuICAgIH1cblxuICAgIEBtZXRob2RBc3luYyhcInNcIilcbiAgICBhc3luYyBUb2dnbGVXaW5kb3cobmFtZTogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5pbXBsLnRvZ2dsZVdpbmRvdyhuYW1lKSlcbiAgICB9XG5cbiAgICBAbWV0aG9kQXN5bmMoKVxuICAgIGFzeW5jIFF1aXQoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5pbXBsLnF1aXQoKSlcbiAgICB9XG5cbiAgICBAbWV0aG9kQXN5bmMoW1wiYXNcIl0sIFtcInNcIl0pXG4gICAgYXN5bmMgUmVxdWVzdChhcmd2OiBzdHJpbmdbXSk6IFByb21pc2U8W3N0cmluZ10+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW1wbC5yZXF1ZXN0KGFyZ3YpLnRoZW4oKHJlcykgPT4gW3Jlc10pXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoaW1wbDogQXBwREJ1c0ltcGwpIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICB0aGlzLmltcGwgPSBpbXBsXG4gICAgfVxuXG4gICAgc3RhdGljIHByb3h5KGluc3RhbmNlTmFtZTogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IGFwcCA9IG5ldyBBcHBEQnVzKHtcbiAgICAgICAgICAgIGluc2VjdG9yKCkge30sXG4gICAgICAgICAgICB0b2dnbGVXaW5kb3coKSB7fSxcbiAgICAgICAgICAgIHF1aXQoKSB7fSxcbiAgICAgICAgICAgIHJlcXVlc3Q6ICgpID0+IFByb21pc2UucmVqZWN0KCksXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIGFwcC5wcm94eSh7XG4gICAgICAgICAgICBuYW1lOiBcImlvLkFzdGFsLlwiICsgaW5zdGFuY2VOYW1lLFxuICAgICAgICB9KVxuICAgIH1cbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyB0eXBlIENDLCB0eXBlIEZDLCBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsga2ViYWJpZnksIHR5cGUgUGFzY2FsaWZ5LCBzZXQgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgeyBvbkNsZWFudXAgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbi8qKlxuICogUmVwcmVzZW50cyBhbGwgb2YgdGhlIHRoaW5ncyB0aGF0IGNhbiBiZSBwYXNzZWQgYXMgYSBjaGlsZCB0byBjbGFzcyBjb21wb25lbnRzLlxuICovXG5leHBvcnQgdHlwZSBOb2RlID1cbiAgICB8IEFycmF5PEdPYmplY3QuT2JqZWN0PlxuICAgIHwgR09iamVjdC5PYmplY3RcbiAgICB8IG51bWJlclxuICAgIHwgc3RyaW5nXG4gICAgfCBib29sZWFuXG4gICAgfCBudWxsXG4gICAgfCB1bmRlZmluZWRcblxuZXhwb3J0IGNvbnN0IGd0a1R5cGUgPSBTeW1ib2woXCJndGsgYnVpbGRlciB0eXBlXCIpXG5cbi8qKlxuICogU3BlY2lhbCBzeW1ib2wgd2hpY2ggbGV0cyB5b3UgaW1wbGVtZW50IGhvdyB3aWRnZXRzIGFyZSBhcHBlbmRlZCBpbiBKU1guXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gKiAgIFthcHBlbmRDaGlsZF0oY2hpbGQ6IEdPYmplY3QuT2JqZWN0LCB0eXBlOiBzdHJpbmcgfCBudWxsKSB7XG4gKiAgICAgLy8gaW1wbGVtZW50XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgYXBwZW5kQ2hpbGQgPSBTeW1ib2woXCJKU1ggYWRkIGNoaWxkIG1ldGhvZFwiKVxuXG4vKipcbiAqIFNwZWNpYWwgc3ltYm9sIHdoaWNoIGxldHMgeW91IGltcGxlbWVudCBob3cgd2lkZ2V0cyBhcmUgcmVtb3ZlZCBpbiBKU1guXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gKiAgIFtyZW1vdmVDaGlsZF0oY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gKiAgICAgLy8gaW1wbGVtZW50XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgcmVtb3ZlQ2hpbGQgPSBTeW1ib2woXCJKU1ggYWRkIHJlbW92ZSBtZXRob2RcIilcblxuLyoqXG4gKiBHZXQgdGhlIHR5cGUgb2YgdGhlIG9iamVjdCBzcGVjaWZpZWQgdGhyb3VnaCB0aGUgYCR0eXBlYCBwcm9wZXJ0eVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHlwZShvYmplY3Q6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgcmV0dXJuIGd0a1R5cGUgaW4gb2JqZWN0ID8gKG9iamVjdFtndGtUeXBlXSBhcyBzdHJpbmcpIDogbnVsbFxufVxuXG4vKipcbiAqIEZ1bmN0aW9uIENvbXBvbmVudCBQcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCB0eXBlIEZDUHJvcHM8U2VsZiwgUHJvcHM+ID0gUHJvcHMgJiB7XG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIGFzIGEgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG4gICAgLyoqXG4gICAgICogc2V0dXAgZnVuY3Rpb25cbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCBhcyBhIHBhcmFtZXRlcnNcbiAgICAgKi9cbiAgICAkPyhzZWxmOiBTZWxmKTogdm9pZFxufVxuXG4vKipcbiAqIENsYXNzIENvbXBvbmVudCBQcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCB0eXBlIENDUHJvcHM8U2VsZiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQcm9wcz4gPSB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsIGNoaWxkcmVuIGVsZW1lbnRzXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgIGNoaWxkcmVuPzogQXJyYXk8Tm9kZT4gfCBOb2RlXG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuICAgIC8qKlxuICAgICAqIGZ1bmN0aW9uIHRvIHVzZSBhcyBhIGNvbnN0cnVjdG9yLFxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkY29uc3RydWN0b3I/KHByb3BzOiBQYXJ0aWFsPFByb3BzPik6IFNlbGZcbiAgICAvKipcbiAgICAgKiBzZXR1cCBmdW5jdGlvbixcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJD8oc2VsZjogU2VsZik6IHZvaWRcbiAgICAvKipcbiAgICAgKiBDU1MgY2xhc3MgbmFtZXNcbiAgICAgKi9cbiAgICBjbGFzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbiAgICAvKipcbiAgICAgKiBpbmxpbmUgQ1NTXG4gICAgICovXG4gICAgY3NzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBQcm9wc106IEFjY2Vzc29yPE5vbk51bGxhYmxlPFByb3BzW0tdPj4gfCBQcm9wc1tLXVxufSAmIHtcbiAgICBbUyBpbiBrZXlvZiBTZWxmW1wiJHNpZ25hbHNcIl0gYXMgUyBleHRlbmRzIGBub3RpZnk6OiR7aW5mZXIgUH1gXG4gICAgICAgID8gYG9uTm90aWZ5JHtQYXNjYWxpZnk8UD59YFxuICAgICAgICA6IFMgZXh0ZW5kcyBgJHtpbmZlciBFfTo6JHtpbmZlciBEfWBcbiAgICAgICAgICA/IGBvbiR7UGFzY2FsaWZ5PGAke0V9OiR7RH1gPn1gXG4gICAgICAgICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgICAgICA/IGBvbiR7UGFzY2FsaWZ5PFM+fWBcbiAgICAgICAgICAgIDogbmV2ZXJdPzogR09iamVjdC5TaWduYWxDYWxsYmFjazxTZWxmLCBTZWxmW1wiJHNpZ25hbHNcIl1bU10+XG59XG5cbi8vIHByZXR0aWVyLWlnbm9yZVxudHlwZSBKc3hQcm9wczxDLCBQcm9wcz4gPVxuICAgIEMgZXh0ZW5kcyB0eXBlb2YgRnJhZ21lbnQgPyAoUHJvcHMgJiB7fSlcbiAgICAvLyBpbnRyaW5zaWNFbGVtZW50cyBhbHdheXMgcmVzb2x2ZSBhcyBGQ1xuICAgIC8vIHNvIHdlIGNhbid0IG5hcnJvdyBpdCBkb3duLCBhbmQgaW4gc29tZSBjYXNlc1xuICAgIC8vIHRoZSBzZXR1cCBmdW5jdGlvbiBpcyB0eXBlZCBhcyBhIHVuaW9uIG9mIE9iamVjdCBhbmQgYWN0dWFsIHR5cGVcbiAgICAvLyBhcyBhIGZpeCB1c2VycyBjYW4gYW5kIHNob3VsZCB1c2UgRkNQcm9wc1xuICAgIDogQyBleHRlbmRzIEZDID8gUHJvcHMgJiBPbWl0PEZDUHJvcHM8UmV0dXJuVHlwZTxDPiwgUHJvcHM+LCBcIiRcIj5cbiAgICA6IEMgZXh0ZW5kcyBDQyA/IENDUHJvcHM8SW5zdGFuY2VUeXBlPEM+LCBQcm9wcz5cbiAgICA6IG5ldmVyXG5cbmZ1bmN0aW9uIGlzR09iamVjdEN0b3IoY3RvcjogYW55KTogY3RvciBpcyBDQyB7XG4gICAgcmV0dXJuIGN0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3Rcbn1cblxuZnVuY3Rpb24gaXNGdW5jdGlvbkN0b3IoY3RvcjogYW55KTogY3RvciBpcyBGQyB7XG4gICAgcmV0dXJuIHR5cGVvZiBjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgIWlzR09iamVjdEN0b3IoY3Rvcilcbn1cblxuLy8gb25Ob3RpZnlQcm9wTmFtZSAtPiBub3RpZnk6OnByb3AtbmFtZVxuLy8gb25QYXNjYWxOYW1lOmRldGFpbE5hbWUgLT4gcGFzY2FsLW5hbWU6OmRldGFpbC1uYW1lXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsTmFtZShrZXk6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgY29uc3QgW3NpZywgZGV0YWlsXSA9IGtlYmFiaWZ5KGtleS5zbGljZSgyKSkuc3BsaXQoXCI6XCIpXG5cbiAgICBpZiAoc2lnLnN0YXJ0c1dpdGgoXCJub3RpZnktXCIpKSB7XG4gICAgICAgIHJldHVybiBgbm90aWZ5Ojoke3NpZy5zbGljZSg3KX1gXG4gICAgfVxuXG4gICAgcmV0dXJuIGRldGFpbCA/IGAke3NpZ306OiR7ZGV0YWlsfWAgOiBzaWdcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZShwYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBjaGlsZDogR09iamVjdC5PYmplY3QpIHtcbiAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgcGFyZW50LnJlbW92ZShjaGlsZClcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHJlbW92ZUNoaWxkIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50W3JlbW92ZUNoaWxkXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHBhcmVudFtyZW1vdmVDaGlsZF0oY2hpbGQpXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGVudi5yZW1vdmVDaGlsZChwYXJlbnQsIGNoaWxkKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwZW5kKHBhcmVudDogR09iamVjdC5PYmplY3QsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICBwYXJlbnQuYXBwZW5kKGNoaWxkKVxuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICBhcHBlbmQocGFyZW50LCBjaClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGFwcGVuZEhhbmRsZXIgPSBjaGlsZC5jb25uZWN0KFwiYXBwZW5kXCIsIChfLCBjaCkgPT4ge1xuICAgICAgICAgICAgaWYgKCEoY2ggaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCBhZGQgJHtjaH0gdG8gJHtwYXJlbnR9YCkpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhcHBlbmQocGFyZW50LCBjaClcbiAgICAgICAgfSlcblxuICAgICAgICBjb25zdCByZW1vdmVIYW5kbGVyID0gY2hpbGQuY29ubmVjdChcInJlbW92ZVwiLCAoXywgY2gpID0+IHtcbiAgICAgICAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoVHlwZUVycm9yKGBjYW5ub3QgcmVtb3ZlICR7Y2h9IGZyb20gJHtwYXJlbnR9YCkpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZW1vdmUocGFyZW50LCBjaClcbiAgICAgICAgfSlcblxuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgY2hpbGQuZGlzY29ubmVjdChhcHBlbmRIYW5kbGVyKVxuICAgICAgICAgICAgY2hpbGQuZGlzY29ubmVjdChyZW1vdmVIYW5kbGVyKVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmIChhcHBlbmRDaGlsZCBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudFthcHBlbmRDaGlsZF0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBwYXJlbnRbYXBwZW5kQ2hpbGRdKGNoaWxkLCBnZXRUeXBlKGNoaWxkKSlcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZW52LmFwcGVuZENoaWxkKHBhcmVudCwgY2hpbGQpXG59XG5cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRUeXBlKG9iamVjdDogb2JqZWN0LCB0eXBlOiBzdHJpbmcpIHtcbiAgICBpZiAoZ3RrVHlwZSBpbiBvYmplY3QgJiYgb2JqZWN0W2d0a1R5cGVdICE9PSBcIlwiKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihgdHlwZSBvdmVycmlkZW4gZnJvbSAke29iamVjdFtndGtUeXBlXX0gdG8gJHt0eXBlfSBvbiAke29iamVjdH1gKVxuICAgIH1cblxuICAgIE9iamVjdC5hc3NpZ24ob2JqZWN0LCB7IFtndGtUeXBlXTogdHlwZSB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyAocHJvcHM6IGFueSkgPT4gR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IFQsXG4gICAgcHJvcHM6IEpzeFByb3BzPFQsIFBhcmFtZXRlcnM8VD5bMF0+LFxuKTogUmV0dXJuVHlwZTxUPlxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyBuZXcgKHByb3BzOiBhbnkpID0+IEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBULFxuICAgIHByb3BzOiBKc3hQcm9wczxULCBDb25zdHJ1Y3RvclBhcmFtZXRlcnM8VD5bMF0+LFxuKTogSW5zdGFuY2VUeXBlPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBrZXlvZiAodHlwZW9mIGVudilbXCJpbnRyaW5zaWNFbGVtZW50c1wiXSB8IChuZXcgKHByb3BzOiBhbnkpID0+IFQpIHwgKChwcm9wczogYW55KSA9PiBUKSxcbiAgICBpbnByb3BzOiBhbnksXG4gICAgLy8ga2V5IGlzIGEgc3BlY2lhbCBwcm9wIGluIGpzeCB3aGljaCBpcyBwYXNzZWQgYXMgYSB0aGlyZCBhcmd1bWVudCBhbmQgbm90IGluIHByb3BzXG4gICAga2V5Pzogc3RyaW5nLFxuKTogVCB7XG4gICAgY29uc3QgeyAkLCAkdHlwZSwgJGNvbnN0cnVjdG9yLCBjaGlsZHJlbiwgLi4ucmVzdCB9ID0gaW5wcm9wcyBhcyBDQ1Byb3BzPFQsIGFueT5cbiAgICBjb25zdCBwcm9wcyA9IHJlc3QgYXMgUmVjb3JkPHN0cmluZywgYW55PlxuXG4gICAgaWYgKGtleSkgT2JqZWN0LmFzc2lnbihwcm9wcywgeyBrZXkgfSlcblxuICAgIGNvbnN0IGRlZmVyUHJvcHMgPSBlbnYuaW5pdFByb3BzKGN0b3IsIHByb3BzKSA/PyBbXVxuICAgIGNvbnN0IGRlZmVycmVkUHJvcHM6IFJlY29yZDxzdHJpbmcsIHVua25vd24+ID0ge31cblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZGVsZXRlIHByb3BzW2tleV1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkZWZlclByb3BzLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgICAgIGRlZmVycmVkUHJvcHNba2V5XSA9IHByb3BzW2tleV1cbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGN0b3IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKGN0b3IgaW4gZW52LmludHJpbnNpY0VsZW1lbnRzKSB7XG4gICAgICAgICAgICBjdG9yID0gZW52LmludHJpbnNpY0VsZW1lbnRzW2N0b3JdIGFzIEZDPFQ+IHwgQ0M8VD5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGB1bmtub3duIGludHJpbnNpYyBlbGVtZW50IFwiJHtjdG9yfVwiYClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uQ3RvcihjdG9yKSkge1xuICAgICAgICBjb25zdCBvYmplY3QgPSBjdG9yKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pXG4gICAgICAgIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKVxuICAgICAgICAkPy4ob2JqZWN0KVxuICAgICAgICByZXR1cm4gb2JqZWN0XG4gICAgfVxuXG4gICAgLy8gY29sbGVjdCBjc3MgYW5kIGNsYXNzTmFtZVxuICAgIGNvbnN0IHsgY3NzLCBjbGFzczogY2xhc3NOYW1lIH0gPSBwcm9wc1xuICAgIGRlbGV0ZSBwcm9wcy5jc3NcbiAgICBkZWxldGUgcHJvcHMuY2xhc3NcblxuICAgIGNvbnN0IHNpZ25hbHM6IEFycmF5PFtzdHJpbmcsICguLi5wcm9wczogdW5rbm93bltdKSA9PiB1bmtub3duXT4gPSBbXVxuICAgIGNvbnN0IGJpbmRpbmdzOiBBcnJheTxbc3RyaW5nLCBBY2Nlc3Nvcjx1bmtub3duPl0+ID0gW11cblxuICAgIC8vIGNvbGxlY3Qgc2lnbmFscyBhbmQgYmluZGluZ3NcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcbiAgICAgICAgICAgIHNpZ25hbHMucHVzaChba2V5LCB2YWx1ZSBhcyAoKSA9PiB1bmtub3duXSlcbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGJpbmRpbmdzLnB1c2goW2tleSwgdmFsdWVdKVxuICAgICAgICAgICAgcHJvcHNba2V5XSA9IHZhbHVlLmdldCgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb25zdHJ1Y3RcbiAgICBjb25zdCBvYmplY3QgPSAkY29uc3RydWN0b3IgPyAkY29uc3RydWN0b3IocHJvcHMpIDogbmV3IChjdG9yIGFzIENDPFQ+KShwcm9wcylcbiAgICBpZiAoJGNvbnN0cnVjdG9yKSBPYmplY3QuYXNzaWduKG9iamVjdCwgcHJvcHMpXG4gICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG5cbiAgICBpZiAoY3NzKSBlbnYuc2V0Q3NzKG9iamVjdCwgY3NzKVxuICAgIGlmIChjbGFzc05hbWUpIGVudi5zZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSlcblxuICAgIC8vIGFkZCBjaGlsZHJlblxuICAgIGZvciAobGV0IGNoaWxkIG9mIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dKSB7XG4gICAgICAgIGlmIChjaGlsZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKEVycm9yKFwiVHJ5aW5nIHRvIGFkZCBib29sZWFuIHZhbHVlIG9mIGB0cnVlYCBhcyBhIGNoaWxkLlwiKSlcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZCkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQpIHtcbiAgICAgICAgICAgICAgICBhcHBlbmQob2JqZWN0LCBjaClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChjaGlsZCkge1xuICAgICAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICBjaGlsZCA9IGVudi50ZXh0Tm9kZShjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFwcGVuZChvYmplY3QsIGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gaGFuZGxlIHNpZ25hbHNcbiAgICBjb25zdCBkaXNwb3NlSGFuZGxlcnMgPSBzaWduYWxzLm1hcCgoW3NpZywgaGFuZGxlcl0pID0+IHtcbiAgICAgICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChzaWduYWxOYW1lKHNpZyksIGhhbmRsZXIpXG4gICAgICAgIHJldHVybiAoKSA9PiBvYmplY3QuZGlzY29ubmVjdChpZClcbiAgICB9KVxuXG4gICAgLy8gZGVmZXJyZWQgcHJvcHNcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhkZWZlcnJlZFByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgYmluZGluZ3MucHVzaChba2V5LCB2YWx1ZV0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKG9iamVjdCwgeyBba2V5XTogdmFsdWUgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGhhbmRsZSBiaW5kaW5nc1xuICAgIGNvbnN0IGRpc3Bvc2VCaW5kaW5ncyA9IGJpbmRpbmdzLm1hcCgoW3Byb3AsIGJpbmRpbmddKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBiaW5kaW5nLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgICAgICB9KVxuICAgICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgICAgICByZXR1cm4gZGlzcG9zZVxuICAgIH0pXG5cbiAgICAvLyBjbGVhbnVwXG4gICAgaWYgKGRpc3Bvc2VCaW5kaW5ncy5sZW5ndGggPiAwIHx8IGRpc3Bvc2VIYW5kbGVycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICBkaXNwb3NlSGFuZGxlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICBkaXNwb3NlQmluZGluZ3MuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgJD8uKG9iamVjdClcbiAgICByZXR1cm4gb2JqZWN0XG59XG5cbi8vIFRPRE86IG1ha2UgdXNlIG9mIGpzeHNcbmV4cG9ydCBjb25zdCBqc3hzID0ganN4XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZVxuICAgIG5hbWVzcGFjZSBKU1gge1xuICAgICAgICB0eXBlIEVsZW1lbnRUeXBlID0ga2V5b2YgSW50cmluc2ljRWxlbWVudHMgfCBGQyB8IENDXG4gICAgICAgIHR5cGUgRWxlbWVudCA9IEdPYmplY3QuT2JqZWN0XG4gICAgICAgIHR5cGUgRWxlbWVudENsYXNzID0gR09iamVjdC5PYmplY3RcblxuICAgICAgICB0eXBlIExpYnJhcnlNYW5hZ2VkQXR0cmlidXRlczxDLCBQcm9wcz4gPSBKc3hQcm9wczxDLCBQcm9wcz4gJiB7XG4gICAgICAgICAgICAvLyBGSVhNRTogd2h5IGRvZXMgYW4gaW50cmluc2ljIGVsZW1lbnQgYWx3YXlzIHJlc29sdmUgYXMgRkM/XG4gICAgICAgICAgICAvLyBfX3R5cGU/OiBDIGV4dGVuZHMgQ0MgPyBcIkNDXCIgOiBDIGV4dGVuZHMgRkMgPyBcIkZDXCIgOiBuZXZlclxuICAgICAgICB9XG5cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICBpbnRlcmZhY2UgSW50cmluc2ljRWxlbWVudHMge1xuICAgICAgICAgICAgLy8gY2M6IENDUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzLCBHdGsuQm94LlNpZ25hbFNpZ25hdHVyZXM+XG4gICAgICAgICAgICAvLyBmYzogRkNQcm9wczxHdGsuV2lkZ2V0LCBGblByb3BzPlxuICAgICAgICB9XG5cbiAgICAgICAgaW50ZXJmYWNlIEVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LW9iamVjdC10eXBlXG4gICAgICAgICAgICBjaGlsZHJlbjoge31cbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcblxuaW50ZXJmYWNlIEZyYWdtZW50U2lnbmFsczxUPiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LlNpZ25hbFNpZ25hdHVyZXMge1xuICAgIGFwcGVuZDogKGNoaWxkOiBUKSA9PiB2b2lkXG4gICAgcmVtb3ZlOiAoY2hpbGQ6IFQpID0+IHZvaWRcbn1cblxuZXhwb3J0IGNsYXNzIEZyYWdtZW50PFQgPSBhbnk+IGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICAgIGRlY2xhcmUgJHNpZ25hbHM6IEZyYWdtZW50U2lnbmFsczxUPlxuXG4gICAgc3RhdGljIFtHT2JqZWN0LnNpZ25hbHNdID0ge1xuICAgICAgICBhcHBlbmQ6IHsgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNUXSB9LFxuICAgICAgICByZW1vdmU6IHsgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNUXSB9LFxuICAgIH1cblxuICAgIHN0YXRpYyBbR09iamVjdC5wcm9wZXJ0aWVzXSA9IHtcbiAgICAgICAgY2hpbGRyZW46IEdPYmplY3QuUGFyYW1TcGVjLmpzb2JqZWN0KFwiY2hpbGRyZW5cIiwgXCJcIiwgXCJcIiwgR09iamVjdC5QYXJhbUZsYWdzLlJFQURBQkxFKSxcbiAgICB9XG5cbiAgICBzdGF0aWMge1xuICAgICAgICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3ModGhpcylcbiAgICB9XG5cbiAgICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHlpZWxkKiB0aGlzLl9jaGlsZHJlblxuICAgIH1cblxuICAgIHByaXZhdGUgX2NoaWxkcmVuOiBBcnJheTxUPlxuXG4gICAgYXBwZW5kKGNoaWxkOiBUKTogdm9pZCB7XG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgbmVzdGluZyBGcmFnbWVudHMgYXJlIG5vdCB5ZXQgc3VwcG9ydGVkYClcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuLnB1c2goY2hpbGQpXG4gICAgICAgIHRoaXMuZW1pdChcImFwcGVuZFwiLCBjaGlsZClcbiAgICAgICAgdGhpcy5ub3RpZnkoXCJjaGlsZHJlblwiKVxuICAgIH1cblxuICAgIHJlbW92ZShjaGlsZDogVCk6IHZvaWQge1xuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuX2NoaWxkcmVuLmZpbmRJbmRleCgoaSkgPT4gaSA9PT0gY2hpbGQpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuLnNwbGljZShpbmRleCwgMSlcblxuICAgICAgICB0aGlzLmVtaXQoXCJyZW1vdmVcIiwgY2hpbGQpXG4gICAgICAgIHRoaXMubm90aWZ5KFwiY2hpbGRyZW5cIilcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcih7IGNoaWxkcmVuID0gW10gfTogUGFydGlhbDx7IGNoaWxkcmVuOiBBcnJheTxUPiB8IFQgfT4gPSB7fSkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuID0gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl1cbiAgICB9XG5cbiAgICBjb25uZWN0PFMgZXh0ZW5kcyBrZXlvZiBGcmFnbWVudFNpZ25hbHM8VD4+KFxuICAgICAgICBzaWduYWw6IFMsXG4gICAgICAgIGNhbGxiYWNrOiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPHRoaXMsIEZyYWdtZW50U2lnbmFsczxUPltTXT4sXG4gICAgKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaylcbiAgICB9XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpb1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IHR5cGUgUGFzY2FsaWZ5LCBjYW1lbGlmeSwga2ViYWJpZnkgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgdHlwZSB7IERlZXBJbmZlciwgUmVjdXJzaXZlSW5mZXIgfSBmcm9tIFwiLi4vdmFyaWFudC5qc1wiXG5cbnR5cGUgU3Vic2NyaWJlQ2FsbGJhY2sgPSAoKSA9PiB2b2lkXG50eXBlIERpc3Bvc2VGdW5jdGlvbiA9ICgpID0+IHZvaWRcbnR5cGUgU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKSA9PiBEaXNwb3NlRnVuY3Rpb25cblxuZXhwb3J0IHR5cGUgQWNjZXNzZWQ8VD4gPSBUIGV4dGVuZHMgQWNjZXNzb3I8aW5mZXIgVj4gPyBWIDogbmV2ZXJcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtZGVjbGFyYXRpb24tbWVyZ2luZ1xuZXhwb3J0IGNsYXNzIEFjY2Vzc29yPFQgPSB1bmtub3duPiBleHRlbmRzIEZ1bmN0aW9uIHtcbiAgICBzdGF0aWMgJGd0eXBlID0gR09iamVjdC5UWVBFX0pTT0JKRUNUIGFzIHVua25vd24gYXMgR09iamVjdC5HVHlwZTxBY2Nlc3Nvcj5cblxuICAgICNnZXQ6ICgpID0+IFRcbiAgICAjc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvblxuXG4gICAgY29uc3RydWN0b3IoZ2V0OiAoKSA9PiBULCBzdWJzY3JpYmU/OiBTdWJzY3JpYmVGdW5jdGlvbikge1xuICAgICAgICBzdXBlcihcInJldHVybiBhcmd1bWVudHMuY2FsbGVlLl9jYWxsLmFwcGx5KGFyZ3VtZW50cy5jYWxsZWUsIGFyZ3VtZW50cylcIilcbiAgICAgICAgdGhpcy4jc3Vic2NyaWJlID0gc3Vic2NyaWJlID8/ICgoKSA9PiAoKSA9PiB2b2lkIDApXG4gICAgICAgIHRoaXMuI2dldCA9IGdldFxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN1YnNjcmliZSBmb3IgdmFsdWUgY2hhbmdlcy5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgVGhlIGZ1bmN0aW9uIHRvIHJ1biB3aGVuIHRoZSBjdXJyZW50IHZhbHVlIGNoYW5nZXMuXG4gICAgICogQHJldHVybnMgVW5zdWJzY3JpYmUgZnVuY3Rpb24uXG4gICAgICovXG4gICAgc3Vic2NyaWJlKGNhbGxiYWNrOiBTdWJzY3JpYmVDYWxsYmFjayk6IERpc3Bvc2VGdW5jdGlvbiB7XG4gICAgICAgIC8vIFRPRE86IGF1dG8gdW5zdWIgd2hlbiBhIHNjb3BlIGlzIGF2YWlsYWJsZT9cbiAgICAgICAgcmV0dXJuIHRoaXMuI3N1YnNjcmliZShjYWxsYmFjaylcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyBUaGUgY3VycmVudCB2YWx1ZS5cbiAgICAgKi9cbiAgICBnZXQoKTogVCB7XG4gICAgICAgIHJldHVybiB0aGlzLiNnZXQoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBgQWNjZXNzb3JgIHRoYXQgYXBwbGllcyBhIHRyYW5zZm9ybWF0aW9uIG9uIGl0cyB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBhczxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPiB7XG4gICAgICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gdHJhbnNmb3JtKHRoaXMuI2dldCgpKSwgdGhpcy4jc3Vic2NyaWJlKVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBfY2FsbDxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmFzKHRyYW5zZm9ybSlcbiAgICB9XG5cbiAgICB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gYEFjY2Vzc29yPCR7dGhpcy5nZXQoKX0+YFxuICAgIH1cblxuICAgIFtTeW1ib2wudG9QcmltaXRpdmVdKCkge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJBY2Nlc3NvciBpbXBsaWNpdGx5IGNvbnZlcnRlZCB0byBhIHByaW1pdGl2ZSB2YWx1ZS5cIilcbiAgICAgICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKVxuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBBY2Nlc3NvcjxUPiB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGBBY2Nlc3NvcmAgdGhhdCBhcHBsaWVzIGEgdHJhbnNmb3JtYXRpb24gb24gaXRzIHZhbHVlLlxuICAgICAqIEBwYXJhbSB0cmFuc2Zvcm0gVGhlIHRyYW5zZm9ybWF0aW9uIHRvIGFwcGx5LiBTaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIDxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPlxufVxuXG5leHBvcnQgdHlwZSBTZXR0ZXI8VD4gPSB7XG4gICAgKHZhbHVlOiBUKTogdm9pZFxuICAgICh2YWx1ZTogKHByZXY6IFQpID0+IFQpOiB2b2lkXG59XG5cbmV4cG9ydCB0eXBlIFN0YXRlPFQ+ID0gW0FjY2Vzc29yPFQ+LCBTZXR0ZXI8VD5dXG5cbi8qKlxuICogQ3JlYXRlIGEgd3JpdGFibGUgc2lnbmFsLlxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbnRpYWwgdmFsdWUgb2YgdGhlIHNpZ25hbFxuICogQHJldHVybnMgQW4gYEFjY2Vzc29yYCBhbmQgYSBzZXR0ZXIgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0YXRlPFQ+KGluaXQ6IFQpOiBTdGF0ZTxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuICAgICAgICByZXR1cm4gKCkgPT4gc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIGNvbnN0IHNldCA9IChuZXdWYWx1ZTogdW5rbm93bikgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZTogVCA9IHR5cGVvZiBuZXdWYWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gbmV3VmFsdWUoY3VycmVudFZhbHVlKSA6IG5ld1ZhbHVlXG4gICAgICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICBjdXJyZW50VmFsdWUgPSB2YWx1ZVxuICAgICAgICAgICAgLy8gcnVubmluZyBjYWxsYmFja3MgbWlnaHQgbXV0YXRlIHN1YnNjcmliZXJzXG4gICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBbbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKSwgc2V0IGFzIFNldHRlcjxUPl1cbn1cblxuY29uc3QgZW1wdHkgPSBTeW1ib2woXCJlbXB0eSBjb21wdXRlZCB2YWx1ZVwiKVxuXG5mdW5jdGlvbiBjcmVhdGVDb21wdXRlZFByb2R1Y2VyPFQ+KGZuOiAodHJhY2s6IDxWPihzaWduYWw6IEFjY2Vzc29yPFY+KSA9PiBWKSA9PiBUKTogQWNjZXNzb3I8VD4ge1xuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGxldCB2YWx1ZTogdHlwZW9mIGVtcHR5IHwgVCA9IGVtcHR5XG4gICAgbGV0IHByZXZEZXBzID0gbmV3IE1hcDxBY2Nlc3NvciwgRGlzcG9zZUZ1bmN0aW9uPigpXG5cbiAgICBjb25zdCBlZmZlY3QgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGRlcHMgPSBuZXcgU2V0PEFjY2Vzc29yPigpXG4gICAgICAgIHZhbHVlID0gZm4oKHYpID0+IChkZXBzLmFkZCh2KSwgdi5nZXQoKSkpXG5cbiAgICAgICAgY29uc3QgbmV3RGVwcyA9IG5ldyBNYXA8QWNjZXNzb3IsIERpc3Bvc2VGdW5jdGlvbj4oKVxuXG4gICAgICAgIGZvciAoY29uc3QgW2RlcCwgdW5zdWJdIG9mIHByZXZEZXBzKSB7XG4gICAgICAgICAgICBpZiAoIWRlcHMuaGFzKGRlcCkpIHtcbiAgICAgICAgICAgICAgICB1bnN1YigpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld0RlcHMuc2V0KGRlcCwgdW5zdWIpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGNvbnN0IGRlcCBvZiBkZXBzKSB7XG4gICAgICAgICAgICBpZiAoIW5ld0RlcHMuaGFzKGRlcCkpIHtcbiAgICAgICAgICAgICAgICBuZXdEZXBzLnNldChkZXAsIGRlcC5zdWJzY3JpYmUoZWZmZWN0KSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByZXZEZXBzID0gbmV3RGVwc1xuICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICB9XG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBlZmZlY3QoKVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gZW1wdHlcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFssIHVuc3ViXSBvZiBwcmV2RGVwcykge1xuICAgICAgICAgICAgICAgICAgICB1bnN1YigpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZ2V0ID0gKCk6IFQgPT4ge1xuICAgICAgICByZXR1cm4gdmFsdWUgPT09IGVtcHR5ID8gZm4oKHYpID0+IHYuZ2V0KCkpIDogdmFsdWVcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxufVxuXG5mdW5jdGlvbiBjcmVhdGVDb21wdXRlZEFyZ3M8XG4gICAgY29uc3QgRGVwcyBleHRlbmRzIEFycmF5PEFjY2Vzc29yPGFueT4+LFxuICAgIEFyZ3MgZXh0ZW5kcyB7IFtLIGluIGtleW9mIERlcHNdOiBBY2Nlc3NlZDxEZXBzW0tdPiB9LFxuICAgIFYgPSBBcmdzLFxuPihkZXBzOiBEZXBzLCB0cmFuc2Zvcm0/OiAoLi4uYXJnczogQXJncykgPT4gVik6IEFjY2Vzc29yPFY+IHtcbiAgICBsZXQgZGlzcG9zZTogQXJyYXk8RGlzcG9zZUZ1bmN0aW9uPlxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IGNhY2hlID0gbmV3IEFycmF5PHVua25vd24+KGRlcHMubGVuZ3RoKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IGRlcHMubWFwKChkZXAsIGkpID0+XG4gICAgICAgICAgICAgICAgZGVwLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZVtpXSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlW2ldID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UubWFwKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgICAgICBjYWNoZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogViA9PiB7XG4gICAgICAgIGNvbnN0IGFyZ3MgPSBkZXBzLm1hcCgoZGVwLCBpKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNhY2hlW2ldKSB7XG4gICAgICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlW2ldXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybSA/IHRyYW5zZm9ybSguLi4oYXJncyBhcyBBcmdzKSkgOiAoYXJncyBhcyBWKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgZnJvbSBhIHByb2R1Y2VyIGZ1bmN0aW9uIHRoYXQgdHJhY2tzIGl0cyBkZXBlbmRlbmNpZXMuXG4gKlxuICogYGBgdHMgRXhhbXBsZVxuICogbGV0IGE6IEFjY2Vzc29yPG51bWJlcj5cbiAqIGxldCBiOiBBY2Nlc3NvcjxudW1iZXI+XG4gKiBjb25zdCBjOiBBY2Nlc3NvcjxudW1iZXI+ID0gY3JlYXRlQ29tcHV0ZWQoKGdldCkgPT4gZ2V0KGEpICsgZ2V0KGIpKVxuICogYGBgXG4gKlxuICogQGV4cGVyaW1lbnRhbFxuICogQHBhcmFtIHByb2R1Y2VyIFRoZSBwcm9kdWNlciBmdW5jdGlvbiB3aGljaCBsZXQncyB5b3UgdHJhY2sgZGVwZW5kZW5jaWVzXG4gKiBAcmV0dXJucyBUaGUgY29tcHV0ZWQgYEFjY2Vzc29yYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkPFQ+KFxuICAgIHByb2R1Y2VyOiAodHJhY2s6IDxWPihzaWduYWw6IEFjY2Vzc29yPFY+KSA9PiBWKSA9PiBULFxuKTogQWNjZXNzb3I8VD5cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBpcyBjb21wdXRlZCBmcm9tIGEgbGlzdCBvZiBnaXZlbiBgQWNjZXNzb3Jgcy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBsZXQgYTogQWNjZXNzb3I8bnVtYmVyPlxuICogbGV0IGI6IEFjY2Vzc29yPHN0cmluZz5cbiAqIGNvbnN0IGM6IEFjY2Vzc29yPFtudW1iZXIsIHN0cmluZ10+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdKVxuICogY29uc3QgZDogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbXB1dGVkKFthLCBiXSwgKGE6IG51bWJlciwgYjogc3RyaW5nKSA9PiBgJHthfSAke2J9YClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBkZXBzIExpc3Qgb2YgYEFjY2Vzc29yc2AuXG4gKiBAcGFyYW0gdHJhbnNmb3JtIEFuIG9wdGlvbmFsIHRyYW5zZm9ybSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBjb21wdXRlZCBgQWNjZXNzb3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQ8XG4gICAgY29uc3QgRGVwcyBleHRlbmRzIEFycmF5PEFjY2Vzc29yPGFueT4+LFxuICAgIEFyZ3MgZXh0ZW5kcyB7IFtLIGluIGtleW9mIERlcHNdOiBBY2Nlc3NlZDxEZXBzW0tdPiB9LFxuICAgIFQgPSBBcmdzLFxuPihkZXBzOiBEZXBzLCB0cmFuc2Zvcm0/OiAoLi4uYXJnczogQXJncykgPT4gVCk6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wdXRlZChcbiAgICAuLi5hcmdzOlxuICAgICAgICB8IFtwcm9kdWNlcjogKHRyYWNrOiA8Vj4oc2lnbmFsOiBBY2Nlc3NvcjxWPikgPT4gVikgPT4gdW5rbm93bl1cbiAgICAgICAgfCBbZGVwczogQXJyYXk8QWNjZXNzb3I+LCB0cmFuc2Zvcm0/OiAoLi4uYXJnczogdW5rbm93bltdKSA9PiB1bmtub3duXVxuKSB7XG4gICAgY29uc3QgW2RlcHNPclByb2R1Y2VyLCB0cmFuc2Zvcm1dID0gYXJnc1xuICAgIGlmICh0eXBlb2YgZGVwc09yUHJvZHVjZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29tcHV0ZWRQcm9kdWNlcihkZXBzT3JQcm9kdWNlcilcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29tcHV0ZWRBcmdzKGRlcHNPclByb2R1Y2VyLCB0cmFuc2Zvcm0pXG4gICAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdPYmplY3QuT2JqZWN0YCdzIGBwcm9wZXJ0eWAuXG4gKlxuICogQHBhcmFtIG9iamVjdCBUaGUgYEdPYmplY3QuT2JqZWN0YCB0byBjcmVhdGUgdGhlIGBBY2Nlc3NvcmAgb24uXG4gKiBAcGFyYW0gcHJvcGVydHkgT25lIG9mIGl0cyByZWdpc3RlcmVkIHByb3BlcnRpZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCwgUCBleHRlbmRzIGtleW9mIFQ+KFxuICAgIG9iamVjdDogVCxcbiAgICBwcm9wZXJ0eTogRXh0cmFjdDxQLCBzdHJpbmc+LFxuKTogQWNjZXNzb3I8VFtQXT5cblxuLy8gVE9ETzogc3VwcG9ydCBuZXN0ZWQgYmluZGluZ3Ncbi8vIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFxuLy8gICAgIFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbi8vICAgICBQMSBleHRlbmRzIGtleW9mIFQsXG4vLyAgICAgUDIgZXh0ZW5kcyBrZXlvZiBOb25OdWxsYWJsZTxUW1AxXT4sXG4vLyA+KFxuLy8gICAgIG9iamVjdDogVCxcbi8vICAgICBwcm9wZXJ0eTE6IEV4dHJhY3Q8UDEsIHN0cmluZz4sXG4vLyAgICAgcHJvcGVydHkyOiBFeHRyYWN0PFAyLCBzdHJpbmc+LFxuLy8gKTogQWNjZXNzb3I8Tm9uTnVsbGFibGU8VFtQMV0+W1AyXT5cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCBvbiBhIGBHaW8uU2V0dGluZ3NgJ3MgYGtleWAuXG4gKiBWYWx1ZXMgYXJlIHJlY3Vyc2l2ZWx5IHVucGFja2VkLlxuICpcbiAqIEBkZXByZWNhdGVkIHByZWZlciB1c2luZyB7QGxpbmsgY3JlYXRlU2V0dGluZ3N9LlxuICogQHBhcmFtIG9iamVjdCBUaGUgYEdpby5TZXR0aW5nc2AgdG8gY3JlYXRlIHRoZSBgQWNjZXNzb3JgIG9uLlxuICogQHBhcmFtIGtleSBUaGUgc2V0dGluZ3Mga2V5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQ+KHNldHRpbmdzOiBHaW8uU2V0dGluZ3MsIGtleTogc3RyaW5nKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VD4ob2JqZWN0OiBHT2JqZWN0Lk9iamVjdCB8IEdpby5TZXR0aW5ncywga2V5OiBzdHJpbmcpOiBBY2Nlc3NvcjxUPiB7XG4gICAgY29uc3QgcHJvcCA9IGtlYmFiaWZ5KGtleSkgYXMga2V5b2YgdHlwZW9mIG9iamVjdFxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBjb25zdCBzaWcgPSBvYmplY3QgaW5zdGFuY2VvZiBHaW8uU2V0dGluZ3MgPyBcImNoYW5nZWRcIiA6IFwibm90aWZ5XCJcbiAgICAgICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChgJHtzaWd9Ojoke3Byb3B9YCwgKCkgPT4gY2FsbGJhY2soKSlcbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBUID0+IHtcbiAgICAgICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncykge1xuICAgICAgICAgICAgcmV0dXJuIG9iamVjdC5nZXRfdmFsdWUoa2V5KS5yZWN1cnNpdmVVbnBhY2soKSBhcyBUXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBnZXR0ZXIgPSBgZ2V0XyR7cHJvcC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XG5cbiAgICAgICAgICAgIGlmIChnZXR0ZXIgaW4gb2JqZWN0ICYmIHR5cGVvZiBvYmplY3RbZ2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChvYmplY3RbZ2V0dGVyXSBhcyAoKSA9PiB1bmtub3duKSgpIGFzIFRcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb3AgaW4gb2JqZWN0KSByZXR1cm4gb2JqZWN0W3Byb3BdIGFzIFRcbiAgICAgICAgICAgIGlmIChrZXkgaW4gb2JqZWN0KSByZXR1cm4gb2JqZWN0W2tleSBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XSBhcyBUXG5cbiAgICAgICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgZ2V0IHByb3BlcnR5ICR7a2V5fWApXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxufVxuXG50eXBlIENvbm5lY3Rpb25IYW5kbGVyPFxuICAgIE8gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTIGV4dGVuZHMga2V5b2YgT1tcIiRzaWduYWxzXCJdLFxuICAgIFQsXG4+ID0gT1tcIiRzaWduYWxzXCJdW1NdIGV4dGVuZHMgKC4uLmFyZ3M6IGFueVtdKSA9PiBpbmZlciBSXG4gICAgPyB2b2lkIGV4dGVuZHMgUlxuICAgICAgICA/ICguLi5hcmdzOiBbLi4uUGFyYW1ldGVyczxPW1wiJHNpZ25hbHNcIl1bU10+LCBjdXJyZW50VmFsdWU6IFRdKSA9PiBUXG4gICAgICAgIDogbmV2ZXJcbiAgICA6IG5ldmVyXG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgd2hpY2ggc2V0cyB1cCBhIGxpc3Qgb2YgYEdPYmplY3QuT2JqZWN0YCBzaWduYWwgY29ubmVjdGlvbnMuXG4gKlxuICogYGBgdHMgRXhhbXBsZVxuICogY29uc3QgdmFsdWU6IEFjY2Vzc29yPHN0cmluZz4gPSBjcmVhdGVDb25uZWN0aW9uKFxuICogICBcImluaXRpYWwgdmFsdWVcIixcbiAqICAgW29iajEsIFwic2lnLW5hbWVcIiwgKC4uLmFyZ3MpID0+IFwic3RyXCJdLFxuICogICBbb2JqMiwgXCJzaWctbmFtZVwiLCAoLi4uYXJncykgPT4gXCJzdHJcIl1cbiAqIClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0gc2lnbmFscyBBIGxpc3Qgb2YgYEdPYmplY3QuT2JqZWN0YCwgc2lnbmFsIG5hbWUgYW5kIGNhbGxiYWNrIHBhaXJzIHRvIGNvbm5lY3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0aW9uPFxuICAgIFQsXG4gICAgTzEgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMSBleHRlbmRzIGtleW9mIE8xW1wiJHNpZ25hbHNcIl0sXG4gICAgTzIgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMiBleHRlbmRzIGtleW9mIE8yW1wiJHNpZ25hbHNcIl0sXG4gICAgTzMgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMyBleHRlbmRzIGtleW9mIE8zW1wiJHNpZ25hbHNcIl0sXG4gICAgTzQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNCBleHRlbmRzIGtleW9mIE80W1wiJHNpZ25hbHNcIl0sXG4gICAgTzUgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNSBleHRlbmRzIGtleW9mIE81W1wiJHNpZ25hbHNcIl0sXG4gICAgTzYgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNiBleHRlbmRzIGtleW9mIE82W1wiJHNpZ25hbHNcIl0sXG4gICAgTzcgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNyBleHRlbmRzIGtleW9mIE83W1wiJHNpZ25hbHNcIl0sXG4gICAgTzggZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTOCBleHRlbmRzIGtleW9mIE84W1wiJHNpZ25hbHNcIl0sXG4gICAgTzkgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTOSBleHRlbmRzIGtleW9mIE85W1wiJHNpZ25hbHNcIl0sXG4+KFxuICAgIGluaXQ6IFQsXG4gICAgaDE6IFtPMSwgUzEsIENvbm5lY3Rpb25IYW5kbGVyPE8xLCBTMSwgVD5dLFxuICAgIGgyPzogW08yLCBTMiwgQ29ubmVjdGlvbkhhbmRsZXI8TzIsIFMyLCBUPl0sXG4gICAgaDM/OiBbTzMsIFMzLCBDb25uZWN0aW9uSGFuZGxlcjxPMywgUzMsIFQ+XSxcbiAgICBoND86IFtPNCwgUzQsIENvbm5lY3Rpb25IYW5kbGVyPE80LCBTNCwgVD5dLFxuICAgIGg1PzogW081LCBTNSwgQ29ubmVjdGlvbkhhbmRsZXI8TzUsIFM1LCBUPl0sXG4gICAgaDY/OiBbTzYsIFM2LCBDb25uZWN0aW9uSGFuZGxlcjxPNiwgUzYsIFQ+XSxcbiAgICBoNz86IFtPNywgUzcsIENvbm5lY3Rpb25IYW5kbGVyPE83LCBTNywgVD5dLFxuICAgIGg4PzogW084LCBTOCwgQ29ubmVjdGlvbkhhbmRsZXI8TzgsIFM4LCBUPl0sXG4gICAgaDk/OiBbTzksIFM5LCBDb25uZWN0aW9uSGFuZGxlcjxPOSwgUzksIFQ+XSxcbikge1xuICAgIGxldCB2YWx1ZSA9IGluaXRcbiAgICBsZXQgZGlzcG9zZTogQXJyYXk8RGlzcG9zZUZ1bmN0aW9uPlxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IHNpZ25hbHMgPSBbaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgaDcsIGg4LCBoOV0uZmlsdGVyKChoKSA9PiBoICE9PSB1bmRlZmluZWQpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gc2lnbmFscy5tYXAoKFtvYmplY3QsIHNpZ25hbCwgY2FsbGJhY2tdKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWQgPSBHT2JqZWN0Lk9iamVjdC5wcm90b3R5cGUuY29ubmVjdC5jYWxsKFxuICAgICAgICAgICAgICAgICAgICBvYmplY3QsXG4gICAgICAgICAgICAgICAgICAgIHNpZ25hbCBhcyBzdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgIChfLCAuLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGNhbGxiYWNrKC4uLmFyZ3MsIHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApXG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gR09iamVjdC5PYmplY3QucHJvdG90eXBlLmRpc2Nvbm5lY3QuY2FsbChvYmplY3QsIGlkKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlLm1hcCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgZGlzcG9zZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IHZhbHVlLCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgc2lnbmFsIGZyb20gYSBwcm92aWVyIGZ1bmN0aW9uLlxuICogVGhlIHByb3ZpZGVyIGlzIGNhbGxlZCB3aGVuIHRoZSBmaXJzdCBzdWJzY3JpYmVyIGFwcGVhcnMgYW5kIHRoZSByZXR1cm5lZCBkaXNwb3NlXG4gKiBmdW5jdGlvbiBmcm9tIHRoZSBwcm92aWRlciB3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBudW1iZXIgb2Ygc3Vic2NyaWJlcnMgZHJvcCB0byB6ZXJvLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHZhbHVlID0gY3JlYXRlRXh0ZXJuYWwoMCwgKHNldCkgPT4ge1xuICogICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHNldCgodikgPT4gdiArIDEpKVxuICogICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbClcbiAqIH0pXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHByb2R1Y2VyIFRoZSBwcm9kdWNlciBmdW5jdGlvbiB3aGljaCBzaG91bGQgcmV0dXJuIGEgY2xlYW51cCBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXh0ZXJuYWw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBwcm9kdWNlcjogKHNldDogU2V0dGVyPFQ+KSA9PiBEaXNwb3NlRnVuY3Rpb24sXG4pOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBsZXQgZGlzcG9zZTogRGlzcG9zZUZ1bmN0aW9uXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gcHJvZHVjZXIoKHY6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZTogVCA9IHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KGN1cnJlbnRWYWx1ZSkgOiB2XG4gICAgICAgICAgICAgICAgaWYgKG5ld1ZhbHVlICE9PSBjdXJyZW50VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG5cbi8qKiBAZXhwZXJpbWVudGFsICovXG50eXBlIFNldHRpbmdzPFQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+PiA9IHtcbiAgICBbSyBpbiBrZXlvZiBUIGFzIFVuY2FwaXRhbGl6ZTxQYXNjYWxpZnk8Sz4+XTogQWNjZXNzb3I8UmVjdXJzaXZlSW5mZXI8VFtLXT4+XG59ICYge1xuICAgIFtLIGluIGtleW9mIFQgYXMgYHNldCR7UGFzY2FsaWZ5PEs+fWBdOiBTZXR0ZXI8RGVlcEluZmVyPFRbS10+PlxufVxuXG4vKipcbiAqIEBleHBlcmltZW50YWxcbiAqXG4gKiBXcmFwIGEge0BsaW5rIEdpby5TZXR0aW5nc30gaW50byBhIGNvbGxlY3Rpb24gb2Ygc2V0dGVycyBhbmQgYWNjZXNzb3JzLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHMgPSBjcmVhdGVTZXR0aW5ncyhzZXR0aW5ncywge1xuICogICBcImNvbXBsZXgta2V5XCI6IFwiYXtzYXtzc319XCIsXG4gKiAgIFwic2ltcGxlLWtleVwiOiBcInNcIixcbiAqIH0pXG4gKlxuICogcy5jb21wbGV4S2V5LnN1YnNjcmliZSgoKSA9PiB7XG4gKiAgIHByaW50KHMuY29tcGxleEtleS5nZXQoKSlcbiAqIH0pXG4gKlxuICogcy5zZXRDb21wbGV4S2V5KChwcmV2KSA9PiAoe1xuICogICAuLi5wcmV2LFxuICogICBrZXk6IHsgbmVzdGVkOiBcIlwiIH0sXG4gKiB9KSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2V0dGluZ3M8Y29uc3QgVCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHN0cmluZz4+KFxuICAgIHNldHRpbmdzOiBHaW8uU2V0dGluZ3MsXG4gICAga2V5czogVCxcbik6IFNldHRpbmdzPFQ+IHtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKFxuICAgICAgICBPYmplY3QuZW50cmllcyhrZXlzKS5mbGF0TWFwKChba2V5LCB0eXBlXSkgPT4gW1xuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIGNhbWVsaWZ5KGtleSksXG4gICAgICAgICAgICAgICAgbmV3IEFjY2Vzc29yKFxuICAgICAgICAgICAgICAgICAgICAoKSA9PiBzZXR0aW5ncy5nZXRfdmFsdWUoa2V5KS5yZWN1cnNpdmVVbnBhY2soKSxcbiAgICAgICAgICAgICAgICAgICAgKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpZCA9IHNldHRpbmdzLmNvbm5lY3QoYGNoYW5nZWQ6OiR7a2V5fWAsIGNhbGxiYWNrKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgpID0+IHNldHRpbmdzLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgYHNldCR7a2V5WzBdLnRvVXBwZXJDYXNlKCkgKyBjYW1lbGlmeShrZXkpLnNsaWNlKDEpfWAsXG4gICAgICAgICAgICAgICAgKHY6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3Muc2V0X3ZhbHVlKFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KHNldHRpbmdzLmdldF92YWx1ZShrZXkpLmRlZXBVbnBhY2soKSkgOiB2LFxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICBdKSxcbiAgICApXG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IHR5cGUgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5cbnR5cGUgR09iaiA9IEdPYmplY3QuT2JqZWN0XG5leHBvcnQgdHlwZSBDQzxUIGV4dGVuZHMgR09iaiA9IEdPYmo+ID0geyBuZXcgKHByb3BzOiBhbnkpOiBUIH1cbmV4cG9ydCB0eXBlIEZDPFQgZXh0ZW5kcyBHT2JqID0gR09iaj4gPSAocHJvcHM6IGFueSkgPT4gVFxuXG50eXBlIENzc1NldHRlciA9IChvYmplY3Q6IEdPYmosIGNzczogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPikgPT4gdm9pZFxuXG5leHBvcnQgZnVuY3Rpb24gY29uZmlndWUoY29uZjogUGFydGlhbDxKc3hFbnY+KSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZW52LCBjb25mKVxufVxuXG50eXBlIEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czogUmVjb3JkPHN0cmluZywgQ0MgfCBGQz5cbiAgICB0ZXh0Tm9kZShub2RlOiBzdHJpbmcgfCBudW1iZXIpOiBHT2JqXG4gICAgYXBwZW5kQ2hpbGQocGFyZW50OiBHT2JqLCBjaGlsZDogR09iaik6IHZvaWRcbiAgICByZW1vdmVDaGlsZChwYXJlbnQ6IEdPYmosIGNoaWxkOiBHT2JqKTogdm9pZFxuICAgIHNldENzczogQ3NzU2V0dGVyXG4gICAgc2V0Q2xhc3M6IENzc1NldHRlclxuICAgIC8vIHN0cmluZ1tdIGNhbiBiZSB1c2UgdG8gZGVsYXkgc2V0dGluZyBwcm9wcyBhZnRlciBjaGlsZHJlblxuICAgIC8vIGUuZyBHdGsuU3RhY2tbXCJ2aXNpYmxlQ2hpbGROYW1lXCJdIGRlcGVuZHMgb24gY2hpbGRyZW5cbiAgICBpbml0UHJvcHMoY3RvcjogdW5rbm93biwgcHJvcHM6IGFueSk6IHZvaWQgfCBzdHJpbmdbXVxuICAgIGRlZmF1bHRDbGVhbnVwKG9iamVjdDogR09iaik6IHZvaWRcbn1cblxuZnVuY3Rpb24gbWlzc2luZ0ltcGwoKTogYW55IHtcbiAgICB0aHJvdyBFcnJvcihcIm1pc3NpbmcgaW1wbFwiKVxufVxuXG5leHBvcnQgY29uc3QgZW52OiBKc3hFbnYgPSB7XG4gICAgaW50cmluc2ljRWxlbWVudHM6IHt9LFxuICAgIHRleHROb2RlOiBtaXNzaW5nSW1wbCxcbiAgICBhcHBlbmRDaGlsZDogbWlzc2luZ0ltcGwsXG4gICAgcmVtb3ZlQ2hpbGQ6IG1pc3NpbmdJbXBsLFxuICAgIHNldENzczogbWlzc2luZ0ltcGwsXG4gICAgc2V0Q2xhc3M6IG1pc3NpbmdJbXBsLFxuICAgIGluaXRQcm9wczogKCkgPT4gdm9pZCAwLFxuICAgIGRlZmF1bHRDbGVhbnVwOiAoKSA9PiB2b2lkIDAsXG59XG4iLCAiZXhwb3J0IGNsYXNzIFNjb3BlIHtcbiAgICBzdGF0aWMgY3VycmVudD86IFNjb3BlIHwgbnVsbFxuXG4gICAgcGFyZW50PzogU2NvcGUgfCBudWxsXG4gICAgY29udGV4dHMgPSBuZXcgTWFwPENvbnRleHQsIHVua25vd24+KClcblxuICAgIHByaXZhdGUgY2xlYW51cHMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcbiAgICBwcml2YXRlIG1vdW50cyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRlZCA9IGZhbHNlXG5cbiAgICBjb25zdHJ1Y3RvcihwYXJlbnQ/OiBTY29wZSB8IG51bGwpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnRcbiAgICB9XG5cbiAgICBvbkNsZWFudXAoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwcz8uYWRkKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIG9uTW91bnQoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgaWYgKHRoaXMucGFyZW50ICYmICF0aGlzLnBhcmVudC5tb3VudGVkKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmVudC5vbk1vdW50KGNhbGxiYWNrKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tb3VudHMuYWRkKGNhbGxiYWNrKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcnVuPFQ+KGZuOiAoKSA9PiBUKSB7XG4gICAgICAgIGNvbnN0IHByZXYgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIFNjb3BlLmN1cnJlbnQgPSB0aGlzXG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBmbigpXG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLm1vdW50cy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmNsZWFyKClcbiAgICAgICAgICAgIHRoaXMubW91bnRlZCA9IHRydWVcbiAgICAgICAgICAgIFNjb3BlLmN1cnJlbnQgPSBwcmV2XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLmNsZWFudXBzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB0aGlzLmNsZWFudXBzLmNsZWFyKClcbiAgICAgICAgdGhpcy5jb250ZXh0cy5jbGVhcigpXG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmVudFxuICAgIH1cbn1cblxuZXhwb3J0IHR5cGUgQ29udGV4dDxUID0gYW55PiA9IHtcbiAgICB1c2UoKTogVFxuICAgIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUlxuICAgIChwcm9wczogeyB2YWx1ZTogVDsgY2hpbGRyZW46ICgpID0+IEpTWC5FbGVtZW50IH0pOiBKU1guRWxlbWVudFxufVxuXG4vKipcbiAqIEV4YW1wbGUgVXNhZ2U6XG4gKiBgYGB0c3hcbiAqIGNvbnN0IE15Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQoXCJmYWxsYmFjay12YWx1ZVwiKVxuICpcbiAqIGZ1bmN0aW9uIENvbnN1bWVyQ29tcG9uZW50KCkge1xuICogICBjb25zdCB2YWx1ZSA9IE15Q29udGV4dC51c2UoKVxuICpcbiAqICAgcmV0dXJuIDxHdGsuTGFiZWwgbGFiZWw9e3ZhbHVlfSAvPlxuICogfVxuICpcbiAqIGZ1bmN0aW9uIFByb3ZpZGVyQ29tcG9uZW50KCkge1xuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuQm94PlxuICogICAgICAgPE15Q29udGV4dCB2YWx1ZT1cIm15LXZhbHVlXCI+XG4gKiAgICAgICAgIHsoKSA9PiA8Q29uc3VtZXJDb21wb25lbnQgLz59XG4gKiAgICAgICA8L015Q29udGV4dD5cbiAqICAgICA8L0d0ay5Cb3g+XG4gKiAgIClcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29udGV4dDxUPihkZWZhdWx0VmFsdWU6IFQpOiBDb250ZXh0PFQ+IHtcbiAgICBsZXQgY3R4OiBDb250ZXh0PFQ+XG5cbiAgICBmdW5jdGlvbiBwcm92aWRlPFI+KHZhbHVlOiBULCBmbjogKCkgPT4gUik6IFIge1xuICAgICAgICBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAgICAgICAgc2NvcGUuY29udGV4dHMuc2V0KGN0eCwgdmFsdWUpXG4gICAgICAgIHJldHVybiBzY29wZS5ydW4oZm4pXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXNlKCk6IFQge1xuICAgICAgICBsZXQgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIHdoaWxlIChzY29wZSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBzY29wZS5jb250ZXh0cy5nZXQoY3R4KVxuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHJldHVybiB2YWx1ZSBhcyBUXG4gICAgICAgICAgICBzY29wZSA9IHNjb3BlLnBhcmVudFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWVcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb250ZXh0KHsgdmFsdWUsIGNoaWxkcmVuIH06IHsgdmFsdWU6IFQ7IGNoaWxkcmVuOiAoKSA9PiBKU1guRWxlbWVudCB9KSB7XG4gICAgICAgIHJldHVybiBwcm92aWRlKHZhbHVlLCBjaGlsZHJlbilcbiAgICB9XG5cbiAgICByZXR1cm4gKGN0eCA9IE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgICAgICBwcm92aWRlLFxuICAgICAgICB1c2UsXG4gICAgfSkpXG59XG5cbi8qKlxuICogR2V0cyB0aGUgc2NvcGUgdGhhdCBvd25zIHRoZSBjdXJyZW50bHkgcnVubmluZyBjb2RlLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY29uc3Qgc2NvcGUgPSBnZXRTY29wZSgpXG4gKiBzZXRUaW1lb3V0KCgpID0+IHtcbiAqICAgLy8gVGhpcyBjYWxsYmFjayBnZXRzIHJ1biB3aXRob3V0IGFuIG93bmVyIHNjb3BlLlxuICogICAvLyBSZXN0b3JlIG93bmVyIHZpYSBzY29wZS5ydW46XG4gKiAgIHNjb3BlLnJ1bigoKSA9PiB7XG4gKiAgICAgY29uc3QgZm9vID0gRm9vQ29udGV4dC51c2UoKVxuICogICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gKiAgICAgICBwcmludChcInNvbWUgY2xlYW51cFwiKVxuICogICAgIH0pXG4gKiAgIH0pXG4gKiB9LCAxMDAwKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTY29wZSgpOiBTY29wZSB7XG4gICAgY29uc3Qgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgaWYgKCFzY29wZSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcImNhbm5vdCBnZXQgc2NvcGU6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNjb3BlXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2xlYW51cCBjYWxsYmFjayB0byB0aGUgY3VycmVudCB7QGxpbmsgU2NvcGV9LlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25DbGVhbnVwKGNsZWFudXA6ICgpID0+IHZvaWQpIHtcbiAgICBpZiAoIVNjb3BlLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihFcnJvcihcIm91dCBvZiB0cmFja2luZyBjb250ZXh0OiB3aWxsIG5vdCBiZSBhYmxlIHRvIGNsZWFudXBcIikpXG4gICAgfVxuXG4gICAgU2NvcGUuY3VycmVudD8ub25DbGVhbnVwKGNsZWFudXApXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2FsbGJhY2sgdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnRseSBydW5uaW5nIHtAbGluayBTY29wZX0gcmV0dXJucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uTW91bnQoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwiY2Fubm90IGF0dGFjaCBvbk1vdW50OiBvdXQgb2YgdHJhY2tpbmcgY29udGV4dFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbk1vdW50KGNsZWFudXApXG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJvb3Qge0BsaW5rIFNjb3BlfSB0aGF0IHdoZW4gZGlzcG9zZWQgd2lsbCByZW1vdmVcbiAqIGFueSBjaGlsZCBzaWduYWwgaGFuZGxlciBvciBzdGF0ZSBzdWJzY3JpYmVyLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c3hcbiAqIGNyZWF0ZVJvb3QoKGRpc3Bvc2UpID0+IHtcbiAqICAgbGV0IHJvb3Q6IEd0ay5XaW5kb3dcbiAqXG4gKiAgIGNvbnN0IFtzdGF0ZV0gPSBjcmVhdGVTdGF0ZShcInZhbHVlXCIpXG4gKlxuICogICBjb25zdCByZW1vdmUgPSAoKSA9PiB7XG4gKiAgICAgcm9vdC5kZXN0cm95KClcbiAqICAgICBkaXNwb3NlKClcbiAqICAgfVxuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8R3RrLldpbmRvdyAkPXsoc2VsZikgPT4gKHJvb3QgPSBzZWxmKX0+XG4gKiAgICAgICA8R3RrLkJveD5cbiAqICAgICAgICAgPEd0ay5MYWJlbCBsYWJlbD17c3RhdGV9IC8+XG4gKiAgICAgICAgIDxHdGsuQnV0dG9uICRjbGlja2VkPXtyZW1vdmV9IC8+XG4gKiAgICAgICA8L0d0ay5Cb3g+XG4gKiAgICAgPC9HdGsuV2luZG93PlxuICogICApXG4gKiB9KVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSb290PFQ+KGZuOiAoZGlzcG9zZTogKCkgPT4gdm9pZCkgPT4gVCkge1xuICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKG51bGwpXG4gICAgcmV0dXJuIHNjb3BlLnJ1bigoKSA9PiBmbigoKSA9PiBzY29wZS5kaXNwb3NlKCkpKVxufVxuIiwgImltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IsIHR5cGUgU3RhdGUsIGNyZWF0ZVN0YXRlIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IGdldFNjb3BlLCBvbkNsZWFudXAsIFNjb3BlIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG5pbnRlcmZhY2UgRm9yUHJvcHM8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5PiB7XG4gICAgZWFjaDogQWNjZXNzb3I8SXRlcmFibGU8SXRlbT4+XG4gICAgY2hpbGRyZW46IChpdGVtOiBJdGVtLCBpbmRleDogQWNjZXNzb3I8bnVtYmVyPikgPT4gRWxcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHJ1biBmb3IgZWFjaCByZW1vdmVkIGVsZW1lbnQuXG4gICAgICogVGhlIGRlZmF1bHQgdmFsdWUgZGVwZW5kcyBvbiB0aGUgZW52aXJvbm1lbnQ6XG4gICAgICpcbiAgICAgKiAtICoqR3RrNCoqOiBudWxsXG4gICAgICogLSAqKkd0azMqKjogR3RrLldpZGdldC5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqIC0gKipHbm9tZSoqOiBDbHV0dGVyLkFjdG9yLnByb3RvdHlwZS5kZXN0cm95XG4gICAgICovXG4gICAgY2xlYW51cD86IG51bGwgfCAoKGVsZW1lbnQ6IEVsLCBpdGVtOiBJdGVtLCBpbmRleDogbnVtYmVyKSA9PiB2b2lkKVxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdGhhdCBnZW5lcmF0ZXMgdGhlIGtleSBmb3IgZWFjaCBpdGVtLlxuICAgICAqXG4gICAgICogQnkgZGVmYXVsdCBpdGVtcyBhcmUgbWFwcGVkIGJ5OlxuICAgICAqIC0gdmFsdWUgaW4gY2FzZSBvZiBwcmltaXRpdmUgdmFsdWVzXG4gICAgICogLSByZWZlcmVuY2Ugb3RoZXJ3aXNlXG4gICAgICovXG4gICAgaWQ/OiAoaXRlbTogSXRlbSkgPT4gS2V5IHwgSXRlbVxufVxuXG4vLyBUT0RPOiBzdXBwb3J0IEdpby5MaXN0TW9kZWxcblxuZXhwb3J0IGZ1bmN0aW9uIEZvcjxJdGVtLCBFbCBleHRlbmRzIEpTWC5FbGVtZW50LCBLZXk+KHtcbiAgICBlYWNoLFxuICAgIGNoaWxkcmVuOiBta0NoaWxkLFxuICAgIGNsZWFudXAsXG4gICAgaWQgPSAoaXRlbTogSXRlbSkgPT4gaXRlbSxcbn06IEZvclByb3BzPEl0ZW0sIEVsLCBLZXk+KTogRnJhZ21lbnQ8RWw+IHtcbiAgICB0eXBlIE1hcEl0ZW0gPSB7IGl0ZW06IEl0ZW07IGNoaWxkOiBFbDsgaW5kZXg6IFN0YXRlPG51bWJlcj47IHNjb3BlOiBTY29wZSB9XG5cbiAgICBjb25zdCBjdXJyZW50U2NvcGUgPSBnZXRTY29wZSgpXG4gICAgY29uc3QgbWFwID0gbmV3IE1hcDxJdGVtIHwgS2V5LCBNYXBJdGVtPigpXG4gICAgY29uc3QgZnJhZ21lbnQgPSBuZXcgRnJhZ21lbnQ8RWw+KClcblxuICAgIGZ1bmN0aW9uIHJlbW92ZSh7IGl0ZW0sIGNoaWxkLCBpbmRleDogW2luZGV4XSwgc2NvcGUgfTogTWFwSXRlbSkge1xuICAgICAgICBzY29wZS5kaXNwb3NlKClcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNsZWFudXAoY2hpbGQsIGl0ZW0sIGluZGV4LmdldCgpKVxuICAgICAgICB9IGVsc2UgaWYgKGNsZWFudXAgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGVudi5kZWZhdWx0Q2xlYW51cChjaGlsZClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNhbGxiYWNrKGl0YXJlYWJsZTogSXRlcmFibGU8SXRlbT4pIHtcbiAgICAgICAgY29uc3QgaXRlbXMgPSBbLi4uaXRhcmVhYmxlXVxuICAgICAgICBjb25zdCBpZHMgPSBpdGVtcy5tYXAoaWQpXG4gICAgICAgIGNvbnN0IGlkU2V0ID0gbmV3IFNldChpZHMpXG5cbiAgICAgICAgLy8gY2xlYW51cCBjaGlsZHJlbiBtaXNzaW5nIGZyb20gYXJyXG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIG1hcC5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgIC8vIHRoZXJlIGlzIG5vIGdlbmVyaWMgd2F5IHRvIGluc2VydCBjaGlsZCBhdCBpbmRleFxuICAgICAgICAgICAgLy8gc28gd2Ugc29ydCBieSByZW1vdmluZyBldmVyeSBjaGlsZCBhbmQgcmVhcHBlbmRpbmcgaW4gb3JkZXJcbiAgICAgICAgICAgIGZyYWdtZW50LnJlbW92ZSh2YWx1ZS5jaGlsZClcblxuICAgICAgICAgICAgaWYgKCFpZFNldC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIHJlbW92ZSh2YWx1ZSlcbiAgICAgICAgICAgICAgICBtYXAuZGVsZXRlKGtleSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHVwZGF0ZSBpbmRleCBhbmQgYWRkIG5ldyBpdGVtc1xuICAgICAgICBpdGVtcy5tYXAoKGl0ZW0sIGkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IGlkc1tpXVxuICAgICAgICAgICAgaWYgKG1hcC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXg6IFssIHNldEluZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQsXG4gICAgICAgICAgICAgICAgfSA9IG1hcC5nZXQoa2V5KSFcbiAgICAgICAgICAgICAgICBzZXRJbmRleChpKVxuICAgICAgICAgICAgICAgIGlmIChbLi4uZnJhZ21lbnRdLnNvbWUoKGNoKSA9PiBjaCA9PT0gY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgZHVwbGljYXRlIGtleXMgZm91bmQ6ICR7a2V5fWApXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZnJhZ21lbnQuYXBwZW5kKGNoaWxkKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW2luZGV4LCBzZXRJbmRleF0gPSBjcmVhdGVTdGF0ZShpKVxuICAgICAgICAgICAgICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKGN1cnJlbnRTY29wZSlcbiAgICAgICAgICAgICAgICBjb25zdCBjaGlsZCA9IHNjb3BlLnJ1bigoKSA9PiBta0NoaWxkKGl0ZW0sIGluZGV4KSlcbiAgICAgICAgICAgICAgICBtYXAuc2V0KGtleSwgeyBpdGVtLCBjaGlsZCwgaW5kZXg6IFtpbmRleCwgc2V0SW5kZXhdLCBzY29wZSB9KVxuICAgICAgICAgICAgICAgIGZyYWdtZW50LmFwcGVuZChjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25zdCBkaXNwb3NlID0gZWFjaC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICBjYWxsYmFjayhlYWNoLmdldCgpKVxuICAgIH0pXG4gICAgY2FsbGJhY2soZWFjaC5nZXQoKSlcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgIGRpc3Bvc2UoKVxuXG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgbWFwLnZhbHVlcygpKSB7XG4gICAgICAgICAgICByZW1vdmUodmFsdWUpXG4gICAgICAgIH1cblxuICAgICAgICBtYXAuY2xlYXIoKVxuICAgIH0pXG5cbiAgICByZXR1cm4gZnJhZ21lbnRcbn1cbiIsICJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IGdldFNjb3BlLCBvbkNsZWFudXAsIFNjb3BlIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG5pbnRlcmZhY2UgV2l0aFByb3BzPFQsIEUgZXh0ZW5kcyBKU1guRWxlbWVudD4ge1xuICAgIHZhbHVlOiBBY2Nlc3NvcjxUPlxuICAgIGNoaWxkcmVuOiAodmFsdWU6IFQpID0+IEUgfCBcIlwiIHwgZmFsc2UgfCBudWxsIHwgdW5kZWZpbmVkXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBydW4gZm9yIGVhY2ggcmVtb3ZlZCBlbGVtZW50LlxuICAgICAqIFRoZSBkZWZhdWx0IHZhbHVlIGRlcGVuZHMgb24gdGhlIGVudmlyb25tZW50OlxuICAgICAqXG4gICAgICogLSAqKkd0azQqKjogbnVsbFxuICAgICAqIC0gKipHdGszKio6IEd0ay5XaWRnZXQucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKiAtICoqR25vbWUqKjogQ2x1dHRlci5BY3Rvci5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqL1xuICAgIGNsZWFudXA/OiBudWxsIHwgKChlbGVtZW50OiBFKSA9PiB2b2lkKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gV2l0aDxULCBFIGV4dGVuZHMgSlNYLkVsZW1lbnQ+KHtcbiAgICB2YWx1ZSxcbiAgICBjaGlsZHJlbjogbWtDaGlsZCxcbiAgICBjbGVhbnVwLFxufTogV2l0aFByb3BzPFQsIEU+KTogRnJhZ21lbnQ8RT4ge1xuICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IGdldFNjb3BlKClcbiAgICBjb25zdCBmcmFnbWVudCA9IG5ldyBGcmFnbWVudDxFPigpXG5cbiAgICBsZXQgc2NvcGU6IFNjb3BlXG5cbiAgICBmdW5jdGlvbiByZW1vdmUoY2hpbGQ6IEUpIHtcbiAgICAgICAgZnJhZ21lbnQucmVtb3ZlKGNoaWxkKVxuICAgICAgICBpZiAoc2NvcGUpIHNjb3BlLmRpc3Bvc2UoKVxuXG4gICAgICAgIGlmICh0eXBlb2YgY2xlYW51cCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBjbGVhbnVwKGNoaWxkKVxuICAgICAgICB9IGVsc2UgaWYgKGNsZWFudXAgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGVudi5kZWZhdWx0Q2xlYW51cChjaGlsZClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNhbGxiYWNrKHY6IFQpIHtcbiAgICAgICAgZm9yIChjb25zdCBjaGlsZCBvZiBmcmFnbWVudCkge1xuICAgICAgICAgICAgcmVtb3ZlKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgc2NvcGUgPSBuZXcgU2NvcGUoY3VycmVudFNjb3BlKVxuICAgICAgICBjb25zdCBjaCA9IHNjb3BlLnJ1bigoKSA9PiBta0NoaWxkKHYpKVxuICAgICAgICBpZiAoY2ggIT09IFwiXCIgJiYgY2ggIT09IGZhbHNlICYmIGNoICE9PSBudWxsICYmIGNoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGZyYWdtZW50LmFwcGVuZChjaClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGRpc3Bvc2UgPSB2YWx1ZS5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICBjYWxsYmFjayh2YWx1ZS5nZXQoKSlcbiAgICB9KVxuICAgIGNhbGxiYWNrKHZhbHVlLmdldCgpKVxuXG4gICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgZGlzcG9zZSgpXG4gICAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgZnJhZ21lbnQpIHtcbiAgICAgICAgICAgIHJlbW92ZShjaGlsZClcbiAgICAgICAgfVxuICAgIH0pXG5cbiAgICByZXR1cm4gZnJhZ21lbnRcbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IHNldCB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCIuL3Njb3BlLmpzXCJcbmltcG9ydCB7IGFwcGVuZCwgc2V0VHlwZSwgc2lnbmFsTmFtZSwgdHlwZSBDQ1Byb3BzIH0gZnJvbSBcIi4vanN4LmpzXCJcblxudHlwZSBUaGlzUHJvcHM8U2VsZiBleHRlbmRzIEdPYmplY3QuT2JqZWN0PiA9IFBhcnRpYWw8XG4gICAgT21pdDxDQ1Byb3BzPFNlbGYsIHsgW0sgaW4ga2V5b2YgU2VsZl06IFNlbGZbS10gfT4sIFwiJFwiIHwgXCIkY29uc3RydWN0b3JcIj5cbj4gJiB7XG4gICAgdGhpczogU2VsZlxufVxuXG4vKiogQGV4cGVyaW1lbnRhbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIFRoaXM8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0Pih7XG4gICAgdGhpczogc2VsZixcbiAgICBjaGlsZHJlbixcbiAgICAkdHlwZSxcbiAgICAuLi5wcm9wc1xufTogVGhpc1Byb3BzPFQ+KSB7XG4gICAgY29uc3QgY2xlYW51cCA9IG5ldyBBcnJheTwoKSA9PiB2b2lkPigpXG5cbiAgICBpZiAoJHR5cGUpIHNldFR5cGUoc2VsZiwgJHR5cGUpXG5cbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleSA9PT0gXCJjc3NcIikge1xuICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgICAgICBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgICAgIGNsZWFudXAucHVzaCh2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gZW52LnNldENzcyhzZWxmLCB2YWx1ZS5nZXQoKSkpKVxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gXCJjbGFzc1wiKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZS5nZXQoKSlcbiAgICAgICAgICAgICAgICBjbGVhbnVwLnB1c2godmFsdWUuc3Vic2NyaWJlKCgpID0+IGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZS5nZXQoKSkpKVxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBlbnYuc2V0Q2xhc3Moc2VsZiwgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5LnN0YXJ0c1dpdGgoXCJvblwiKSkge1xuICAgICAgICAgICAgY29uc3QgaWQgPSBzZWxmLmNvbm5lY3Qoc2lnbmFsTmFtZShrZXkpLCB2YWx1ZSlcbiAgICAgICAgICAgIGNsZWFudXAucHVzaCgoKSA9PiBzZWxmLmRpc2Nvbm5lY3QoaWQpKVxuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGNvbnN0IGRpc3Bvc2UgPSB2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gc2V0KHNlbGYsIGtleSwgdmFsdWUuZ2V0KCkpKVxuICAgICAgICAgICAgc2V0KHNlbGYsIGtleSwgdmFsdWUuZ2V0KCkpXG4gICAgICAgICAgICBjbGVhbnVwLnB1c2goZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldChzZWxmLCBrZXksIHZhbHVlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChsZXQgY2hpbGQgb2YgQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pIHtcbiAgICAgICAgaWYgKGNoaWxkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oRXJyb3IoXCJUcnlpbmcgdG8gYWRkIGJvb2xlYW4gdmFsdWUgb2YgYHRydWVgIGFzIGEgY2hpbGQuXCIpKVxuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkKSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZCkge1xuICAgICAgICAgICAgICAgIGFwcGVuZChzZWxmLCBjaClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChjaGlsZCkge1xuICAgICAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICBjaGlsZCA9IGVudi50ZXh0Tm9kZShjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFwcGVuZChzZWxmLCBjaGlsZClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjbGVhbnVwLmxlbmd0aCA+IDApIHtcbiAgICAgICAgb25DbGVhbnVwKCgpID0+IGNsZWFudXAuZm9yRWFjaCgoY2IpID0+IGNiKCkpKVxuICAgIH1cblxuICAgIHJldHVybiBzZWxmXG59XG4iLCAiZXhwb3J0IGNvbnN0IEFQUF9MT0dfRE9NQUlOID0ge1xuICBHUkVFVEVSOiAnZ3JlZXRlcicsXG4gIFNIRUxMOiAnc2hlbGwnLFxufSBhcyBjb25zdFxuZXhwb3J0IHR5cGUgQXBwTG9nRG9tYWluTmFtZSA9IHR5cGVvZiBBUFBfTE9HX0RPTUFJTltrZXlvZiB0eXBlb2YgQVBQX0xPR19ET01BSU5dXG5cbmV4cG9ydCBjb25zdCBTWVNURU1EX0NBVF9QUklPUklUWSA9IHtcbiAgZW1lcmc6IDAsXG4gIGFsZXJ0OiAxLFxuICBjcml0OiAyLFxuICBlcnI6IDMsXG4gIHdhcm5pbmc6IDQsXG4gIG5vdGljZTogNSxcbiAgaW5mbzogNixcbiAgZGVidWc6IDcsXG59IGFzIGNvbnN0XG5leHBvcnQgdHlwZSBTeXN0ZW1kQ2F0UHJpb3JpdHkgPSB0eXBlb2YgU1lTVEVNRF9DQVRfUFJJT1JJVFlba2V5b2YgdHlwZW9mIFNZU1RFTURfQ0FUX1BSSU9SSVRZXVxuXG5leHBvcnQgY2xhc3MgQXBwTG9nRG9tYWluIHtcbiAgc3RhdGljIGRvbWFpbiA9ICdrb3RhbWknXG5cbiAgc3RhdGljIGJ5X25hbWUobmFtZTogQXBwTG9nRG9tYWluTmFtZSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGAke25hbWV9LiR7dGhpcy5kb21haW59YFxuICB9XG59XG4iLCAiaW1wb3J0IHsgZ2V0Q29uc29sZUxvZ0RvbWFpbiB9IGZyb20gJ2NvbnNvbGUnXG5cbmltcG9ydCBHaW8gZnJvbSAnZ2k6Ly9HaW8nXG5pbXBvcnQgR0xpYiBmcm9tICdnaTovL0dMaWInXG5cbmltcG9ydCB7IGdldENvbmZpZyB9IGZyb20gJ0Bwcm92aWRlcnMvY29uZmlnJ1xuXG5pbXBvcnQgeyBTWVNURU1EX0NBVF9QUklPUklUWSwgU3lzdGVtZENhdFByaW9yaXR5IH0gZnJvbSAnLi9jb25zdGFudHMnXG5pbXBvcnQgeyBnZXRFcnJvck1lc3NhZ2UgfSBmcm9tICcuL3V0aWxzL2dldEVycm9yTWVzc2FnZSdcbmltcG9ydCB7IGdldEtleUJ5VmFsdWUgfSBmcm9tICcuL3V0aWxzL2dldEtleUJ5VmFsdWUnXG5cbmNvbnN0IHsgbG9nX2ZpbGVfcGF0aCB9ID0gZ2V0Q29uZmlnKClcblxuZXhwb3J0IGNsYXNzIEZpbGVMb2dnZXIge1xuICBpZGVudGlmaWVyOiBzdHJpbmdcbiAgZmlsZTogR2lvLkZpbGVcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmlkZW50aWZpZXIgPSBnZXRDb25zb2xlTG9nRG9tYWluKClcbiAgICB0aGlzLmZpbGUgPSBHaW8uRmlsZS5uZXdfZm9yX3BhdGgobG9nX2ZpbGVfcGF0aClcblxuICAgIGlmICghdGhpcy5maWxlLnF1ZXJ5X2V4aXN0cyhudWxsKSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcGFyZW50RGlyID0gdGhpcy5maWxlLmdldF9wYXJlbnQoKVxuXG4gICAgICAgIGlmIChwYXJlbnREaXIgJiYgIXBhcmVudERpci5xdWVyeV9leGlzdHMobnVsbCkpIHtcbiAgICAgICAgICBwYXJlbnREaXIubWFrZV9kaXJlY3Rvcnlfd2l0aF9wYXJlbnRzKG51bGwpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBvdXRwdXRTdHJlYW0gPSB0aGlzLmZpbGUuY3JlYXRlKEdpby5GaWxlQ3JlYXRlRmxhZ3MuTk9ORSwgbnVsbClcbiAgICAgICAgb3V0cHV0U3RyZWFtLmNsb3NlKG51bGwpXG4gICAgICB9XG4gICAgICBjYXRjaCAoZSkge1xuICAgICAgICBsb2dFcnJvcihlKVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgc2VuZChtZXNzYWdlOiBzdHJpbmcsIHByaW9yaXR5OiBTeXN0ZW1kQ2F0UHJpb3JpdHkpIHtcbiAgICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICBjb25zdCBsb2dMZXZlbCA9IChnZXRLZXlCeVZhbHVlKFNZU1RFTURfQ0FUX1BSSU9SSVRZLCBwcmlvcml0eSkgfHwgJ25vdGljZScpLnRvVXBwZXJDYXNlKClcbiAgICBjb25zdCBsb2dSZWNvcmQgPSBgJHt0aW1lc3RhbXB9ICR7dGhpcy5pZGVudGlmaWVyfSAke2xvZ0xldmVsfTogJHttZXNzYWdlfWBcblxuICAgIEdMaWIudGltZW91dF9hZGQoR0xpYi5QUklPUklUWV9ERUZBVUxULCAwLCAoKSA9PiB7XG4gICAgICBjb25zdCBmaWxlU3RyZWFtID0gdGhpcy5maWxlLmFwcGVuZF90byhHaW8uRmlsZUNyZWF0ZUZsYWdzLk5PTkUsIG51bGwpXG4gICAgICBjb25zdCBkYXRhU3RyZWFtID0gbmV3IEdpby5EYXRhT3V0cHV0U3RyZWFtKHtcbiAgICAgICAgYmFzZV9zdHJlYW06IGZpbGVTdHJlYW0sXG4gICAgICAgIGNsb3NlX2Jhc2Vfc3RyZWFtOiB0cnVlLFxuICAgICAgfSlcbiAgICAgIGRhdGFTdHJlYW0ucHV0X3N0cmluZyhgJHtsb2dSZWNvcmR9XFxuYCwgbnVsbClcbiAgICAgIGRhdGFTdHJlYW0uY2xvc2UobnVsbClcbiAgICAgIGZpbGVTdHJlYW0uY2xvc2UobnVsbClcbiAgICAgIHJldHVybiBHTGliLlNPVVJDRV9SRU1PVkVcbiAgICB9KVxuICB9XG5cbiAgbG9nKG1lc3NhZ2U6IHN0cmluZyB8IG9iamVjdCB8IGJvb2xlYW4gfCBudW1iZXIgfCBudWxsKSB7XG4gICAgY29uc3QgcHJpb3JpdHkgPSBTWVNURU1EX0NBVF9QUklPUklUWS5pbmZvXG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJykge1xuICAgICAgdGhpcy5zZW5kKG1lc3NhZ2UsIHByaW9yaXR5KVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMuc2VuZChKU09OLnN0cmluZ2lmeShtZXNzYWdlKSwgcHJpb3JpdHkpXG4gICAgfVxuICB9XG5cbiAgd2FybihtZXNzYWdlOiBzdHJpbmcgfCBvYmplY3QgfCBib29sZWFuIHwgbnVtYmVyIHwgbnVsbCkge1xuICAgIGNvbnN0IHByaW9yaXR5ID0gU1lTVEVNRF9DQVRfUFJJT1JJVFkud2FybmluZ1xuICAgIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRoaXMuc2VuZChtZXNzYWdlLCBwcmlvcml0eSlcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB0aGlzLnNlbmQoSlNPTi5zdHJpbmdpZnkobWVzc2FnZSksIHByaW9yaXR5KVxuICAgIH1cbiAgfVxuXG4gIGVycm9yKG1lc3NhZ2U6IHVua25vd24gfCBzdHJpbmcgfCBvYmplY3QgfCBib29sZWFuIHwgbnVtYmVyIHwgbnVsbCkge1xuICAgIGNvbnN0IHByaW9yaXR5ID0gU1lTVEVNRF9DQVRfUFJJT1JJVFkuZXJyXG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJykge1xuICAgICAgdGhpcy5zZW5kKG1lc3NhZ2UsIHByaW9yaXR5KVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMuc2VuZChnZXRFcnJvck1lc3NhZ2UobWVzc2FnZSksIHByaW9yaXR5KVxuICAgIH1cbiAgfVxufVxuIiwgImNvbnN0IExPR19GSUxFX1BBVEggPSAnL3Zhci9sb2cva290YW1pL2FwcHMubG9nJ1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29uZmlnKCkge1xuICByZXR1cm4ge1xuICAgIGxvZ19maWxlX3BhdGg6IExPR19GSUxFX1BBVEgsXG4gIH1cbn1cbiIsICJleHBvcnQgZnVuY3Rpb24gZ2V0RXJyb3JNZXNzYWdlKGVycm9yOiB1bmtub3duKTogc3RyaW5nIHtcbiAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICByZXR1cm4gZXJyb3IubWVzc2FnZVxuICB9XG5cbiAgcmV0dXJuIGAke1N0cmluZyhlcnJvcil9LiBUUkFDRTogJHtKU09OLnN0cmluZ2lmeShlcnJvcil9YFxufVxuIiwgImV4cG9ydCBmdW5jdGlvbiBnZXRLZXlCeVZhbHVlKG9iamVjdDogUmVjb3JkPHN0cmluZywgc3RyaW5nIHwgbnVtYmVyPiwgdmFsdWU6IHN0cmluZyB8IG51bWJlcikge1xuICByZXR1cm4gT2JqZWN0LmtleXMob2JqZWN0KS5maW5kKGtleSA9PiBvYmplY3Rba2V5XSA9PT0gdmFsdWUpXG59XG4iLCAiaW1wb3J0IHsgZ2V0Q29uc29sZUxvZ0RvbWFpbiB9IGZyb20gJ2NvbnNvbGUnXG5cbmltcG9ydCBHaW8gZnJvbSAnZ2k6Ly9HaW8nXG5pbXBvcnQgR0xpYiBmcm9tICdnaTovL0dMaWInXG5cbmltcG9ydCB7IFNZU1RFTURfQ0FUX1BSSU9SSVRZLCBTeXN0ZW1kQ2F0UHJpb3JpdHkgfSBmcm9tICcuL2NvbnN0YW50cydcbmltcG9ydCB7IGdldEVycm9yTWVzc2FnZSB9IGZyb20gJy4vdXRpbHMvZ2V0RXJyb3JNZXNzYWdlJ1xuXG5leHBvcnQgY2xhc3MgU3lzdGVtZENhdExvZ2dlciB7XG4gIGlkZW50aWZpZXI6IHN0cmluZ1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaWRlbnRpZmllciA9IGdldENvbnNvbGVMb2dEb21haW4oKVxuICB9XG5cbiAgcHJpdmF0ZSBzZW5kKG1lc3NhZ2U6IHN0cmluZywgcHJpb3JpdHk6IFN5c3RlbWRDYXRQcmlvcml0eSkge1xuICAgIC8qKlxuICAgICAqIC1wLCAtLXByaW9yaXR5PVxuICAgICAqIFNwZWNpZnkgdGhlIGRlZmF1bHQgcHJpb3JpdHkgbGV2ZWwgZm9yIHRoZSBsb2dnZWQgbWVzc2FnZXMuIFBhc3Mgb25lIG9mIFwiZW1lcmdcIiwgXCJhbGVydFwiLCBcImNyaXRcIiwgXCJlcnJcIiwgXCJ3YXJuaW5nXCIsIFwibm90aWNlXCIsIFwiaW5mb1wiLCBcImRlYnVnXCIsIG9yIGEgdmFsdWUgYmV0d2VlbiAwIGFuZCA3IChjb3JyZXNwb25kaW5nIHRvIHRoZSBzYW1lIG5hbWVkIGxldmVscykuIFRoZXNlIHByaW9yaXR5IHZhbHVlcyBhcmUgdGhlIHNhbWUgYXMgZGVmaW5lZCBieSBzeXNsb2coMykuIERlZmF1bHRzIHRvIFwiaW5mb1wiLiBOb3RlIHRoYXQgdGhpcyBzaW1wbHkgY29udHJvbHMgdGhlIGRlZmF1bHQsIGluZGl2aWR1YWwgbGluZXMgbWF5IGJlIGxvZ2dlZCB3aXRoIGRpZmZlcmVudCBsZXZlbHMgaWYgdGhleSBhcmUgcHJlZml4ZWQgYWNjb3JkaW5nbHkuIEZvciBkZXRhaWxzLCBzZWUgLS1sZXZlbC1wcmVmaXg9IGJlbG93LlxuICAgICAqXG4gICAgICogLS1zdGRlcnItcHJpb3JpdHk9XG4gICAgICogU3BlY2lmaWVzIHRoZSBkZWZhdWx0IHByaW9yaXR5IGxldmVsIGZvciBtZXNzYWdlcyBmcm9tIHRoZSBwcm9jZXNzJ3Mgc3RhbmRhcmQgZXJyb3Igb3V0cHV0IChzdGRlcnIpLiBVc2FnZSBvZiB0aGlzIG9wdGlvbiBpcyB0aGUgc2FtZSBhcyB0aGUgLS1wcmlvcml0eT0gb3B0aW9uLCBhYm92ZSwgYW5kIGJvdGggY2FuIGJlIHVzZWQgYXQgb25jZS4gV2hlbiBib3RoIGFyZSB1c2VkLCAtLXByaW9yaXR5PSB3aWxsIHNwZWNpZnkgdGhlIGRlZmF1bHQgcHJpb3JpdHkgZm9yIHN0YW5kYXJkIG91dHB1dCAoc3Rkb3V0KS5cbiAgICAgKlxuICAgICAqIElmIC0tc3RkZXJyLXByaW9yaXR5PSBpcyBub3Qgc3BlY2lmaWVkLCBtZXNzYWdlcyBmcm9tIHN0ZGVyciB3aWxsIHN0aWxsIGJlIGxvZ2dlZCwgd2l0aCB0aGUgc2FtZSBkZWZhdWx0IHByaW9yaXR5IGxldmVsIGFzIHN0ZG91dC5cbiAgICAgKlxuICAgICAqIEFsc28sIG5vdGUgdGhhdCB3aGVuIHN0ZG91dCBhbmQgc3RkZXJyIHVzZSB0aGUgc2FtZSBkZWZhdWx0IHByaW9yaXR5LCB0aGUgbWVzc2FnZXMgd2lsbCBiZSBzdHJpY3RseSBvcmRlcmVkLCBiZWNhdXNlIG9uZSBjaGFubmVsIGlzIHVzZWQgZm9yIGJvdGguIFdoZW4gdGhlIGRlZmF1bHQgcHJpb3JpdHkgZGlmZmVycywgdHdvIGNoYW5uZWxzIGFyZSB1c2VkLCBhbmQgc28gc3Rkb3V0IG1lc3NhZ2VzIHdpbGwgbm90IGJlIHN0cmljdGx5IG9yZGVyZWQgd2l0aCByZXNwZWN0IHRvIHN0ZGVyciBtZXNzYWdlcyAtIHRob3VnaCB0aGV5IHdpbGwgdGVuZCB0byBiZSBhcHByb3hpbWF0ZWx5IG9yZGVyZWQuXG4gICAgICpcbiAgICAgKiBBZGRlZCBpbiB2ZXJzaW9uIDI0MS5cbiAgICAgKlxuICAgICAqIC0tbGV2ZWwtcHJlZml4PVxuICAgICAqIENvbnRyb2xzIHdoZXRoZXIgbGluZXMgcmVhZCBhcmUgcGFyc2VkIGZvciBzeXNsb2cgcHJpb3JpdHkgbGV2ZWwgcHJlZml4ZXMuIElmIGVuYWJsZWQgKHRoZSBkZWZhdWx0KSwgYSBsaW5lIHByZWZpeGVkIHdpdGggYSBwcmlvcml0eSBwcmVmaXggc3VjaCBhcyBcIjw1PlwiIGlzIGxvZ2dlZCBhdCBwcmlvcml0eSA1IChcIm5vdGljZVwiKSwgYW5kIHNpbWlsYXJseSBmb3IgdGhlIG90aGVyIHByaW9yaXR5IGxldmVscy4gVGFrZXMgYSBib29sZWFuIGFyZ3VtZW50LlxuICAgICAqXG4gICAgICogLS1uYW1lc3BhY2U9XG4gICAgICogU3BlY2lmaWVzIHRoZSBqb3VybmFsIG5hbWVzcGFjZSB0byB3aGljaCB0aGUgc3RhbmRhcmQgSU8gc2hvdWxkIGJlIGNvbm5lY3RlZC4gRm9yIGRldGFpbHMgYWJvdXQgam91cm5hbCBuYW1lc3BhY2VzLCBzZWUgc3lzdGVtZC1qb3VybmFsZC5zZXJ2aWNlKDgpLlxuICAgICAqL1xuICAgIEdMaWIudGltZW91dF9hZGQoR0xpYi5QUklPUklUWV9ERUZBVUxULCAwLCAoKSA9PiB7XG4gICAgICBjb25zdCBwcm9jID0gR2lvLlN1YnByb2Nlc3MubmV3KFxuICAgICAgICBbXG4gICAgICAgICAgJ3N5c3RlbWQtY2F0JywgJy0taWRlbnRpZmllcj0nICsgdGhpcy5pZGVudGlmaWVyLCAnLS1wcmlvcml0eT0nICsgcHJpb3JpdHkudG9TdHJpbmcoKSxcbiAgICAgICAgXSxcbiAgICAgICAgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERPVVRfUElQRSB8IEdpby5TdWJwcm9jZXNzRmxhZ3MuU1RERVJSX1BJUEUgfCBHaW8uU3VicHJvY2Vzc0ZsYWdzLlNURElOX1BJUEUsXG4gICAgICApXG4gICAgICBwcm9jLmNvbW11bmljYXRlX3V0ZjhfYXN5bmMobWVzc2FnZSwgbnVsbCwgKHByb2NPYmosIHJlcykgPT4ge1xuICAgICAgICBpZiAocHJvY09iaikge1xuICAgICAgICAgIHByb2NPYmouY29tbXVuaWNhdGVfdXRmOF9maW5pc2gocmVzKVxuICAgICAgICAgIGxvZygnU2VudCB0byBqb3VybmFsZCB2aWEgc3lzdGVtZC1jYXQnKVxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICByZXR1cm4gR0xpYi5TT1VSQ0VfUkVNT1ZFXG4gICAgfSlcbiAgfVxuXG4gIGxvZyhtZXNzYWdlOiBzdHJpbmcgfCBvYmplY3QgfCBib29sZWFuIHwgbnVtYmVyIHwgbnVsbCkge1xuICAgIGNvbnN0IHByaW9yaXR5ID0gU1lTVEVNRF9DQVRfUFJJT1JJVFkuaW5mb1xuICAgIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRoaXMuc2VuZChtZXNzYWdlLCBwcmlvcml0eSlcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB0aGlzLnNlbmQoSlNPTi5zdHJpbmdpZnkobWVzc2FnZSksIHByaW9yaXR5KVxuICAgIH1cbiAgfVxuXG4gIHdhcm4obWVzc2FnZTogc3RyaW5nIHwgb2JqZWN0IHwgYm9vbGVhbiB8IG51bWJlciB8IG51bGwpIHtcbiAgICBjb25zdCBwcmlvcml0eSA9IFNZU1RFTURfQ0FUX1BSSU9SSVRZLndhcm5pbmdcbiAgICBpZiAodHlwZW9mIG1lc3NhZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aGlzLnNlbmQobWVzc2FnZSwgcHJpb3JpdHkpXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdGhpcy5zZW5kKEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpLCBwcmlvcml0eSlcbiAgICB9XG4gIH1cblxuICBlcnJvcihtZXNzYWdlOiBzdHJpbmcgfCBvYmplY3QgfCBib29sZWFuIHwgbnVtYmVyIHwgbnVsbCkge1xuICAgIGNvbnN0IHByaW9yaXR5ID0gU1lTVEVNRF9DQVRfUFJJT1JJVFkuZXJyXG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJykge1xuICAgICAgdGhpcy5zZW5kKG1lc3NhZ2UsIHByaW9yaXR5KVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMuc2VuZChnZXRFcnJvck1lc3NhZ2UobWVzc2FnZSksIHByaW9yaXR5KVxuICAgIH1cbiAgfVxufVxuIiwgImltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2RrIGZyb20gXCJnaTovL0dkaz92ZXJzaW9uPTQuMFwiXG5leHBvcnQgeyBBc3RhbCwgR3RrLCBHZGsgfVxuIiwgImltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEdPYmplY3QsIHsgcmVnaXN0ZXIsIHNpZ25hbCB9IGZyb20gXCJnbmltL2dvYmplY3RcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiZ25pbVwiXG5cbmNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKVxuXG5leHBvcnQgbmFtZXNwYWNlIFByb2Nlc3Mge1xuICAgIGV4cG9ydCBpbnRlcmZhY2UgU2lnbmFsU2lnbmF0dXJlcyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LlNpZ25hbFNpZ25hdHVyZXMge1xuICAgICAgICBzdGRvdXQ6IFByb2Nlc3NbXCJzdGRvdXRcIl1cbiAgICAgICAgc3RkZXJyOiBQcm9jZXNzW1wic3RkZXJyXCJdXG4gICAgICAgIGV4aXQ6IFByb2Nlc3NbXCJleGl0XCJdXG4gICAgfVxuICAgIGV4cG9ydCBpbnRlcmZhY2UgQ29uc3RydWN0b3JQcm9wcyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LkNvbnN0cnVjdG9yUHJvcHMge1xuICAgICAgICBhcmd2OiBzdHJpbmdbXVxuICAgIH1cbn1cblxuQHJlZ2lzdGVyKClcbmV4cG9ydCBjbGFzcyBQcm9jZXNzIGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICAgIEBzaWduYWwoU3RyaW5nKVxuICAgIHByb3RlY3RlZCBzdGRvdXQob3V0OiBzdHJpbmcpIHtcbiAgICAgICAgdm9pZCBvdXRcbiAgICB9XG5cbiAgICBAc2lnbmFsKFN0cmluZylcbiAgICBwcm90ZWN0ZWQgc3RkZXJyKGVycjogc3RyaW5nKSB7XG4gICAgICAgIHZvaWQgZXJyXG4gICAgfVxuXG4gICAgQHNpZ25hbChOdW1iZXIsIEJvb2xlYW4pXG4gICAgcHJvdGVjdGVkIGV4aXQoY29kZTogbnVtYmVyLCBzaWduYWxlZDogYm9vbGVhbikge1xuICAgICAgICB2b2lkIFtjb2RlLCBzaWduYWxlZF1cbiAgICB9XG5cbiAgICAjZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpXG4gICAgI291dFN0cmVhbTogR2lvLkRhdGFJbnB1dFN0cmVhbVxuICAgICNlcnJTdHJlYW06IEdpby5EYXRhSW5wdXRTdHJlYW1cbiAgICAjaW5TdHJlYW06IEdpby5EYXRhT3V0cHV0U3RyZWFtXG4gICAgI3Byb2Nlc3M6IEdpby5TdWJwcm9jZXNzXG5cbiAgICAjcmVhZFN0cmVhbShzdHJlYW06IEdpby5EYXRhSW5wdXRTdHJlYW0pIHtcbiAgICAgICAgc3RyZWFtLnJlYWRfbGluZV9hc3luYyhHTGliLlBSSU9SSVRZX0RFRkFVTFQsIG51bGwsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW291dHB1dF0gPSBzdHJlYW0ucmVhZF9saW5lX2ZpbmlzaF91dGY4KHJlcylcbiAgICAgICAgICAgICAgICBpZiAob3V0cHV0ICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdHJlYW0gPT09IHRoaXMuI2VyclN0cmVhbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGRlcnIob3V0cHV0LnRyaW0oKSlcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3Rkb3V0KG91dHB1dC50cmltKCkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy4jcmVhZFN0cmVhbShzdHJlYW0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGNvbm5lY3Q8UyBleHRlbmRzIGtleW9mIFByb2Nlc3MuU2lnbmFsU2lnbmF0dXJlcz4oXG4gICAgICAgIHNpZ25hbDogUyxcbiAgICAgICAgY2FsbGJhY2s6IEdPYmplY3QuU2lnbmFsQ2FsbGJhY2s8dGhpcywgUHJvY2Vzcy5TaWduYWxTaWduYXR1cmVzW1NdPixcbiAgICApOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZvcmNlIHF1aXQgdGhlIHN1YnByb2Nlc3MuXG4gICAgICovXG4gICAga2lsbCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy4jcHJvY2Vzcy5mb3JjZV9leGl0KClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZW5kIGEgc2lnbmFsIHRvIHRoZSBzdWJwcm9jZXNzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHNpZ25hbCBTaWduYWwgbnVtYmVyIHRvIGJlIHNlbnRcbiAgICAgKi9cbiAgICBzaWduYWwoc2lnbmFsOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy4jcHJvY2Vzcy5zZW5kX3NpZ25hbChzaWduYWwpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogV3JpdGUgYSBsaW5lIHRvIHRoZSBzdWJwcm9jZXNzJyBzdGRpbiBzeW5jaHJvbm91c2x5LlxuICAgICAqIFNlZSB7QGxpbmsgR2lvLkRhdGFPdXRwdXRTdHJlYW0ucHJvdG90eXBlLndyaXRlX2J5dGVzX2FzeW5jfVxuICAgICAqXG4gICAgICogQHBhcmFtIHN0ciBTdHJpbmcgdG8gYmUgd3JpdHRlbiB0byBzdGRpblxuICAgICAqL1xuICAgIHdyaXRlKHN0cjogc3RyaW5nKTogUHJvbWlzZTxbYm9vbGVhbiwgbnVtYmVyXT4ge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgdGhpcy4jaW5TdHJlYW0ud3JpdGVfYnl0ZXNfYXN5bmMoXG4gICAgICAgICAgICAgICAgZW5jb2Rlci5lbmNvZGUoc3RyKSxcbiAgICAgICAgICAgICAgICBHTGliLlBSSU9SSVRZX0RFRkFVTFQsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRoaXMuI2luU3RyZWFtLndyaXRlX2FsbF9maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICApXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogV3JpdGUgYSBsaW5lIHRvIHRoZSBzdWJwcm9jZXNzJyBzdGRpbiBhc3luY2hyb25vdXNseS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzdHIgU3RyaW5nIHRvIGJlIHdyaXR0ZW4gdG8gc3RkaW5cbiAgICAgKi9cbiAgICBhc3luYyB3cml0ZUFzeW5jKHN0cjogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0aGlzLiNpblN0cmVhbS53cml0ZV9hbGxfYXN5bmMoXG4gICAgICAgICAgICAgICAgdGhpcy4jZW5jb2Rlci5lbmNvZGUoc3RyKSxcbiAgICAgICAgICAgICAgICBHTGliLlBSSU9SSVRZX0RFRkFVTFQsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHZvaWQgdGhpcy4jaW5TdHJlYW0ud3JpdGVfYWxsX2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcih7IGFyZ3YgfTogUHJvY2Vzcy5Db25zdHJ1Y3RvclByb3BzKSB7XG4gICAgICAgIHN1cGVyKClcbiAgICAgICAgY29uc3QgcHJvY2VzcyA9ICh0aGlzLiNwcm9jZXNzID0gR2lvLlN1YnByb2Nlc3MubmV3KFxuICAgICAgICAgICAgYXJndixcbiAgICAgICAgICAgIEdpby5TdWJwcm9jZXNzRmxhZ3MuU1RESU5fUElQRSB8XG4gICAgICAgICAgICAgICAgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERPVVRfUElQRSB8XG4gICAgICAgICAgICAgICAgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERFUlJfUElQRSxcbiAgICAgICAgKSlcblxuICAgICAgICB0aGlzLiNpblN0cmVhbSA9IEdpby5EYXRhT3V0cHV0U3RyZWFtLm5ldyhwcm9jZXNzLmdldF9zdGRpbl9waXBlKCkhKVxuICAgICAgICB0aGlzLiNvdXRTdHJlYW0gPSBHaW8uRGF0YUlucHV0U3RyZWFtLm5ldyhwcm9jZXNzLmdldF9zdGRvdXRfcGlwZSgpISlcbiAgICAgICAgdGhpcy4jZXJyU3RyZWFtID0gR2lvLkRhdGFJbnB1dFN0cmVhbS5uZXcocHJvY2Vzcy5nZXRfc3RkZXJyX3BpcGUoKSEpXG5cbiAgICAgICAgdGhpcy4jcmVhZFN0cmVhbSh0aGlzLiNvdXRTdHJlYW0pXG4gICAgICAgIHRoaXMuI3JlYWRTdHJlYW0odGhpcy4jZXJyU3RyZWFtKVxuXG4gICAgICAgIHByb2Nlc3Mud2FpdF9hc3luYyhudWxsLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHByb2Nlc3Mud2FpdF9maW5pc2gocmVzKVxuICAgICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICAgICAgLy8gaWdub3JlXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmdldF9pZl9leGl0ZWQoKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXhpdChwcm9jZXNzLmdldF9leGl0X3N0YXR1cygpLCBmYWxzZSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZ2V0X2lmX3NpZ25hbGVkKCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmV4aXQocHJvY2Vzcy5nZXRfdGVybV9zaWcoKSwgdHJ1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdGFydCBhIG5ldyBzdWJwcm9jZXNzIHdpdGggdGhlIGdpdmVuIGNvbW1hbmQuXG4gICAgICogVGhlIGZpcnN0IGVsZW1lbnQgb2YgdGhlIHZlY3RvciBpcyBleGVjdXRlZCB3aXRoIHRoZSByZW1haW5pbmdcbiAgICAgKiBlbGVtZW50cyBhcyB0aGUgYXJndW1lbnQgbGlzdC5cbiAgICAgKi9cbiAgICBzdGF0aWMgc3VicHJvY2Vzc3YoY21kOiBzdHJpbmdbXSkge1xuICAgICAgICByZXR1cm4gbmV3IFByb2Nlc3MoeyBhcmd2OiBjbWQgfSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdGFydCBhIG5ldyBzdWJwcm9jZXNzIHdpdGggdGhlIGdpdmVuIGNvbW1hbmRcbiAgICAgKiB3aGljaCBpcyBwYXJzZWQgdXNpbmcge0BsaW5rIEdMaWIuc2hlbGxfcGFyc2VfYXJndn0uXG4gICAgICovXG4gICAgc3RhdGljIHN1YnByb2Nlc3MoY21kOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgWywgYXJndl0gPSBHTGliLnNoZWxsX3BhcnNlX2FyZ3YoY21kKVxuICAgICAgICByZXR1cm4gUHJvY2Vzcy5zdWJwcm9jZXNzdihhcmd2ISlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIGEgY29tbWFuZCBzeW5jaHJvbm91c2x5LlxuICAgICAqIFRoZSBmaXJzdCBlbGVtZW50IG9mIHRoZSB2ZWN0b3IgaXMgZXhlY3V0ZWQgd2l0aCB0aGUgcmVtYWluaW5nXG4gICAgICogZWxlbWVudHMgYXMgdGhlIGFyZ3VtZW50IGxpc3QuXG4gICAgICpcbiAgICAgKiBAdGhyb3dzIHN0ZGVyclxuICAgICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzXG4gICAgICovXG4gICAgc3RhdGljIGV4ZWN2KGNtZDogc3RyaW5nW10pIHtcbiAgICAgICAgY29uc3QgcHJvY2VzcyA9IEdpby5TdWJwcm9jZXNzLm5ldyhcbiAgICAgICAgICAgIGNtZCxcbiAgICAgICAgICAgIEdpby5TdWJwcm9jZXNzRmxhZ3MuU1RERVJSX1BJUEUgfCBHaW8uU3VicHJvY2Vzc0ZsYWdzLlNURE9VVF9QSVBFLFxuICAgICAgICApXG5cbiAgICAgICAgY29uc3QgWywgb3V0LCBlcnJdID0gcHJvY2Vzcy5jb21tdW5pY2F0ZV91dGY4KG51bGwsIG51bGwpXG4gICAgICAgIGlmIChwcm9jZXNzLmdldF9zdWNjZXNzZnVsKCkpIHtcbiAgICAgICAgICAgIHJldHVybiBvdXQudHJpbSgpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRXhlY3V0ZSBhIGNvbW1hbmQgc3luY2hyb25vdXNseS5cbiAgICAgKiBUaGUgY29tbWFuZCBpcyBwYXJzZWQgdXNpbmcge0BsaW5rIEdMaWIuc2hlbGxfcGFyc2VfYXJndn0uXG4gICAgICpcbiAgICAgKiBAdGhyb3dzIHN0ZGVyclxuICAgICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzXG4gICAgICovXG4gICAgc3RhdGljIGV4ZWMoY21kOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgWywgYXJndl0gPSBHTGliLnNoZWxsX3BhcnNlX2FyZ3YoY21kKVxuICAgICAgICByZXR1cm4gUHJvY2Vzcy5leGVjdihhcmd2ISlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIGEgY29tbWFuZCBhc3luY2hyb25vdXNseS5cbiAgICAgKiBUaGUgZmlyc3QgZWxlbWVudCBvZiB0aGUgdmVjdG9yIGlzIGV4ZWN1dGVkIHdpdGggdGhlIHJlbWFpbmluZ1xuICAgICAqIGVsZW1lbnRzIGFzIHRoZSBhcmd1bWVudCBsaXN0LlxuICAgICAqXG4gICAgICogQHRocm93cyBzdGRlcnJcbiAgICAgKiBAcmV0dXJuIHN0ZG91dCBvZiB0aGUgc3VicHJvY2Vzc1xuICAgICAqL1xuICAgIHN0YXRpYyBleGVjQXN5bmN2KGNtZDogc3RyaW5nW10pOiBQcm9taXNlPHN0cmluZz4ge1xuICAgICAgICBjb25zdCBwcm9jZXNzID0gR2lvLlN1YnByb2Nlc3MubmV3KFxuICAgICAgICAgICAgY21kLFxuICAgICAgICAgICAgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERFUlJfUElQRSB8IEdpby5TdWJwcm9jZXNzRmxhZ3MuU1RET1VUX1BJUEUsXG4gICAgICAgIClcblxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgcHJvY2Vzcy5jb21tdW5pY2F0ZV91dGY4X2FzeW5jKG51bGwsIG51bGwsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBbLCBvdXQsIGVycl0gPSBwcm9jZXNzLmNvbW11bmljYXRlX3V0ZjhfZmluaXNoKHJlcylcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZ2V0X3N1Y2Nlc3NmdWwoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUob3V0LnRyaW0oKSlcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoZXJyLnRyaW0oKSkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIGEgY29tbWFuZCBhc3luY2hyb25vdXNseS5cbiAgICAgKiBUaGUgY29tbWFuZCBpcyBwYXJzZWQgdXNpbmcge0BsaW5rIEdMaWIuc2hlbGxfcGFyc2VfYXJndn0uXG4gICAgICpcbiAgICAgKiBAdGhyb3dzIHN0ZGVyclxuICAgICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzXG4gICAgICovXG4gICAgc3RhdGljIGV4ZWNBc3luYyhjbWQ6IHN0cmluZykge1xuICAgICAgICBjb25zdCBbLCBhcmd2XSA9IEdMaWIuc2hlbGxfcGFyc2VfYXJndihjbWQpXG4gICAgICAgIHJldHVybiBQcm9jZXNzLmV4ZWNBc3luY3YoYXJndiEpXG4gICAgfVxufVxuXG50eXBlIEFyZ3MgPSB7XG4gICAgY21kOiBzdHJpbmcgfCBzdHJpbmdbXVxuICAgIG91dD86IChzdGRvdXQ6IHN0cmluZykgPT4gdm9pZFxuICAgIGVycj86IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZFxufVxuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhhcmdzOiBBcmdzKTogUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBjbWQ6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0PzogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkLFxuICAgIG9uRXJyPzogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkLFxuKTogUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBhcmdzT3JDbWQ6IEFyZ3MgfCBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICBvbk91dDogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkID0gcHJpbnQsXG4gICAgb25FcnI6IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZCA9IHByaW50ZXJyLFxuKSB7XG4gICAgY29uc3QgYXJncyA9IEFycmF5LmlzQXJyYXkoYXJnc09yQ21kKSB8fCB0eXBlb2YgYXJnc09yQ21kID09PSBcInN0cmluZ1wiXG4gICAgY29uc3QgeyBjbWQsIGVyciwgb3V0IH0gPSB7XG4gICAgICAgIGNtZDogYXJncyA/IGFyZ3NPckNtZCA6IGFyZ3NPckNtZC5jbWQsXG4gICAgICAgIGVycjogYXJncyA/IG9uRXJyIDogYXJnc09yQ21kLmVyciB8fCBvbkVycixcbiAgICAgICAgb3V0OiBhcmdzID8gb25PdXQgOiBhcmdzT3JDbWQub3V0IHx8IG9uT3V0LFxuICAgIH1cblxuICAgIGNvbnN0IHByb2MgPSBBcnJheS5pc0FycmF5KGNtZCkgPyBQcm9jZXNzLnN1YnByb2Nlc3N2KGNtZCkgOiBQcm9jZXNzLnN1YnByb2Nlc3MoY21kKVxuICAgIHByb2MuY29ubmVjdChcInN0ZG91dFwiLCAoXywgc3Rkb3V0OiBzdHJpbmcpID0+IG91dChzdGRvdXQpKVxuICAgIHByb2MuY29ubmVjdChcInN0ZGVyclwiLCAoXywgc3RkZXJyOiBzdHJpbmcpID0+IGVycihzdGRlcnIpKVxuICAgIHJldHVybiBwcm9jXG59XG5cbi8qKiBAdGhyb3dzIHtFcnJvcn0gVGhyb3dzIHN0ZGVyciAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4ZWMoY21kOiBzdHJpbmcgfCBzdHJpbmdbXSkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGNtZCkgPyBQcm9jZXNzLmV4ZWN2KGNtZCkgOiBQcm9jZXNzLmV4ZWMoY21kKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZXhlY0FzeW5jKGNtZDogc3RyaW5nIHwgc3RyaW5nW10pOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGNtZCkpIHtcbiAgICAgICAgcmV0dXJuIFByb2Nlc3MuZXhlY0FzeW5jdihjbWQpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFByb2Nlc3MuZXhlY0FzeW5jKGNtZClcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzKGluaXQ6IHN0cmluZywgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgdHJhbnNmb3JtOiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2VzczxUPihcbiAgICBpbml0OiBULFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIHRyYW5zZm9ybT86IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCBwcm9jOiBQcm9jZXNzIHwgbnVsbCA9IG51bGxcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuXG4gICAgZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogKCkgPT4gdm9pZCB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBwcm9jID0gc3VicHJvY2VzcyhleGVjLCAoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oc3Rkb3V0LCBjdXJyZW50VmFsdWUpIDogKHN0ZG91dCBhcyBUKVxuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcHJvYz8ua2lsbCgpXG4gICAgICAgICAgICAgICAgcHJvYyA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiaW1wb3J0IEdPYmplY3QsIHsgcmVnaXN0ZXIsIHNpZ25hbCB9IGZyb20gXCJnbmltL2dvYmplY3RcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiZ25pbVwiXG5pbXBvcnQgeyBleGVjQXN5bmMgfSBmcm9tIFwiLi9wcm9jZXNzLmpzXCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIlxuXG5leHBvcnQgbmFtZXNwYWNlIFRpbWVyIHtcbiAgICBleHBvcnQgaW50ZXJmYWNlIFNpZ25hbFNpZ25hdHVyZXMgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdC5TaWduYWxTaWduYXR1cmVzIHtcbiAgICAgICAgbm93KCk6IHZvaWRcbiAgICAgICAgY2FuY2VsbGVkKCk6IHZvaWRcbiAgICB9XG59XG5cbkByZWdpc3RlcigpXG5leHBvcnQgY2xhc3MgVGltZXIgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgZGVjbGFyZSAkc2lnbmFsczogVGltZXIuU2lnbmFsU2lnbmF0dXJlc1xuXG4gICAgQHNpZ25hbCgpXG4gICAgcHJvdGVjdGVkIG5vdygpIHt9XG5cbiAgICBAc2lnbmFsKClcbiAgICBwcm90ZWN0ZWQgY2FuY2VsbGVkKCkge31cblxuICAgIHN0YXRpYyBpbnRlcnZhbChpbnRlcnZhbDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICAgICAgY29uc3QgeyB0aW1lciwgbm93IH0gPSBUaW1lci5uZXcoY2FsbGJhY2ssICgpID0+IHtcbiAgICAgICAgICAgIGlmIChpbW1lZGlhdGUuaXNfZGVzdHJveWVkKCkpIGltbWVkaWF0ZS5kZXN0cm95KClcbiAgICAgICAgICAgIGlmIChzb3VyY2UuaXNfZGVzdHJveWVkKCkpIHNvdXJjZS5kZXN0cm95KClcbiAgICAgICAgfSlcbiAgICAgICAgY29uc3QgaW1tZWRpYXRlID0gc2V0VGltZW91dChub3cpXG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IHNldEludGVydmFsKG5vdywgaW50ZXJ2YWwpXG4gICAgICAgIHJldHVybiB0aW1lclxuICAgIH1cblxuICAgIHN0YXRpYyB0aW1lb3V0KGludGVydmFsOiBudW1iZXIsIGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgICAgICBjb25zdCB7IHRpbWVyLCBub3cgfSA9IFRpbWVyLm5ldyhjYWxsYmFjaywgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHNvdXJjZS5pc19kZXN0cm95ZWQoKSkgc291cmNlLmRlc3Ryb3koKVxuICAgICAgICB9KVxuICAgICAgICBjb25zdCBzb3VyY2UgPSBzZXRUaW1lb3V0KG5vdywgaW50ZXJ2YWwpXG4gICAgICAgIHJldHVybiB0aW1lclxuICAgIH1cblxuICAgIHN0YXRpYyBpZGxlKGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgICAgICBjb25zdCB7IHRpbWVyLCBub3cgfSA9IFRpbWVyLm5ldyhjYWxsYmFjaywgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHNvdXJjZS5pc19kZXN0cm95ZWQoKSkgc291cmNlLmRlc3Ryb3koKVxuICAgICAgICB9KVxuICAgICAgICBjb25zdCBzb3VyY2UgPSBzZXRUaW1lb3V0KG5vdylcbiAgICAgICAgcmV0dXJuIHRpbWVyXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgbmV3KG9uTm93PzogKCkgPT4gdm9pZCwgb25DYW5jZWxsZWQ/OiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIGNvbnN0IHRpbWVyID0gbmV3IFRpbWVyKClcbiAgICAgICAgY29uc3Qgbm93ID0gdGltZXIuY29ubmVjdChcIm5vd1wiLCAoKSA9PiB2b2lkIG9uTm93Py4oKSlcbiAgICAgICAgY29uc3QgY2FuY2VsbGVkID0gdGltZXIuY29ubmVjdChcImNhbmNlbGxlZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICB0aW1lci5kaXNjb25uZWN0KG5vdylcbiAgICAgICAgICAgIHRpbWVyLmRpc2Nvbm5lY3QoY2FuY2VsbGVkKVxuICAgICAgICAgICAgb25DYW5jZWxsZWQ/LigpXG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiB7IHRpbWVyLCBub3c6ICgpID0+IHRpbWVyLm5vdygpIH1cbiAgICB9XG5cbiAgICBjb25uZWN0PFMgZXh0ZW5kcyBrZXlvZiBUaW1lci5TaWduYWxTaWduYXR1cmVzPihcbiAgICAgICAgc2lnbmFsOiBTLFxuICAgICAgICBjYWxsYmFjazogR09iamVjdC5TaWduYWxDYWxsYmFjazx0aGlzLCBUaW1lci5TaWduYWxTaWduYXR1cmVzW1NdPixcbiAgICApOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKVxuICAgIH1cblxuICAgIGNhbmNlbCgpIHtcbiAgICAgICAgdGhpcy5jYW5jZWxsZWQoKVxuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IHsgaW50ZXJ2YWwsIHRpbWVvdXQsIGlkbGUgfSA9IFRpbWVyXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsKFxuICAgIGluaXQ6IHN0cmluZyxcbiAgICBpbnRlcnZhbDogbnVtYmVyLFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuKTogQWNjZXNzb3I8c3RyaW5nPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9sbDxUPihcbiAgICBpbml0OiBULFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgdHJhbnNmb3JtOiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9sbDxUPihcbiAgICBpbml0OiBULFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZm46IChwcmV2OiBUKSA9PiBUIHwgUHJvbWlzZTxUPixcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaXZhbDogbnVtYmVyLFxuICAgIGV4ZWNPckZuOiBzdHJpbmcgfCBzdHJpbmdbXSB8ICgocHJldjogVCkgPT4gVCB8IFByb21pc2U8VD4pLFxuICAgIHRyYW5zZm9ybT86IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCB0aW1lcjogR0xpYi5Tb3VyY2UgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzZXQodmFsdWU6IFQpIHtcbiAgICAgICAgaWYgKHZhbHVlICE9PSBjdXJyZW50VmFsdWUpIHtcbiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbXB1dGUoKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZXhlY09yRm4gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBleGVjT3JGbihjdXJyZW50VmFsdWUpXG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUudGhlbihzZXQpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNldCh2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGV4ZWNBc3luYyhleGVjT3JGbikudGhlbigoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgc2V0KHRyYW5zZm9ybSA/IHRyYW5zZm9ybShzdGRvdXQsIGN1cnJlbnRWYWx1ZSkgOiAoc3Rkb3V0IGFzIFQpKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCk6ICgpID0+IHZvaWQge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgc2V0VGltZW91dChjb21wdXRlKVxuICAgICAgICAgICAgdGltZXIgPSBzZXRJbnRlcnZhbChjb21wdXRlLCBpdmFsKVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCAmJiB0aW1lcikge1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpXG4gICAgICAgICAgICAgICAgdGltZXIgPSBudWxsXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKVxufVxuIiwgImltcG9ydCB7IGNyZWF0ZVN0YXRlIH0gZnJvbSAnYWdzJ1xuXG5jb25zdCBbd2luZG93VmlzaWJsZSwgc2V0V2luZG93VmlzaWJsZV0gPSBjcmVhdGVTdGF0ZTxib29sZWFuPihmYWxzZSlcblxuY29uc3QgdXNlU2Vzc2lvbk1hbmFnZXJTY3JlZW5TZXJ2aWNlID0gKCkgPT4ge1xuICByZXR1cm4ge1xuICAgIHdpbmRvd1Zpc2libGUsXG4gICAgc2V0V2luZG93VmlzaWJsZSxcbiAgfVxufVxuXG5leHBvcnQge1xuICB1c2VTZXNzaW9uTWFuYWdlclNjcmVlblNlcnZpY2UsXG59XG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUNvbXB1dGVkLCBjcmVhdGVTdGF0ZSB9IGZyb20gJ2FncydcblxuZnVuY3Rpb24gY3JlYXRlT2JqZWN0RnJvbUtleUxpc3Q8VCwgSyBleHRlbmRzIHN0cmluZz4oa2V5czogS1tdLCB2YWx1ZTogVCk6IFJlY29yZDxLLCBUPiB7XG4gIHJldHVybiBrZXlzLnJlZHVjZSgoYWNjLCBrZXkpID0+IHtcbiAgICBhY2Nba2V5XSA9IHZhbHVlXG4gICAgcmV0dXJuIGFjY1xuICB9LCB7fSBhcyBSZWNvcmQ8SywgVD4pXG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVDb21wdXRlZE1hcCA9IDxUPihrZXlMaXN0QWNjZXNzb3I6IEFjY2Vzc29yPHN0cmluZ1tdPiwga2V5QWNjZXNzb3I6IEFjY2Vzc29yPHN0cmluZz4sIGluaXRWYWx1ZTogVCkgPT4ge1xuICBjb25zdCBbc3RhdGVNYXAsIHNldFN0YXRlTWFwXSA9IGNyZWF0ZVN0YXRlPFJlY29yZDxzdHJpbmcsIFQ+PihjcmVhdGVPYmplY3RGcm9tS2V5TGlzdChrZXlMaXN0QWNjZXNzb3IuZ2V0KCksIGluaXRWYWx1ZSkpXG4gIGNvbnN0IGFjY2Vzc29yID0gY3JlYXRlQ29tcHV0ZWQoW2tleUFjY2Vzc29yLCBzdGF0ZU1hcF0sIChrZXlWYWx1ZSwgc3RhdGVNYXBWYWx1ZXMpID0+IHtcbiAgICByZXR1cm4gc3RhdGVNYXBWYWx1ZXNba2V5VmFsdWVdXG4gIH0pXG4gIGNvbnN0IHNldCA9ICh2YWx1ZTogVCwga2V5Pzogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgdmFsdWVzTWFwID0geyAuLi5zdGF0ZU1hcC5nZXQoKSB9XG4gICAgaWYgKGtleSkge1xuICAgICAgdmFsdWVzTWFwW2tleV0gPSB2YWx1ZVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHZhbHVlc01hcFtrZXlBY2Nlc3Nvci5nZXQoKV0gPSB2YWx1ZVxuICAgIH1cbiAgICBzZXRTdGF0ZU1hcCh2YWx1ZXNNYXApXG4gIH1cbiAgY29uc3QgY3JlYXRlU2V0dGVyQnlJbmRleCA9IChrZXk6IHN0cmluZykgPT4ge1xuICAgIHJldHVybiAodmFsdWU6IFQpID0+IHNldCh2YWx1ZSwga2V5KVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBhY2Nlc3NvcixcbiAgICBzZXQsXG4gICAgY3JlYXRlU2V0dGVyQnlJbmRleCxcbiAgICBzdGF0ZUxpc3Q6IHN0YXRlTWFwLFxuICB9XG59XG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUNvbXB1dGVkIH0gZnJvbSAnZ25pbSdcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkQXJyYXk8VD4oZGVwczogKEFjY2Vzc29yPFRbXT4pW10pOiBBY2Nlc3NvcjxUW10+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXB1dGVkKGRlcHMsICguLi5hcnJheXMpID0+IHtcbiAgICBjb25zdCByZXN1bHQ6IFRbXSA9IFtdXG4gICAgYXJyYXlzLmZvckVhY2goKGFycikgPT4ge1xuICAgICAgcmVzdWx0LnB1c2goLi4uYXJyKVxuICAgIH0pXG4gICAgcmV0dXJuIHJlc3VsdFxuICB9KVxufVxuIiwgImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEaXNwb3NlTWFuYWdlcigpOiBbQXJyYXk8KCkgPT4gdm9pZD4sICgpID0+IHZvaWRdIHtcbiAgY29uc3QgZGlzcG9zZXM6IEFycmF5PCgpID0+IHZvaWQ+ID0gW11cbiAgY29uc3QgZGlzcG9zZXNFeGVjdXRvciA9ICgpID0+IHtcbiAgICBjb25zdCBlcnJvcnM6IEVycm9yW10gPSBbXVxuXG4gICAgd2hpbGUgKGRpc3Bvc2VzLmxlbmd0aCkge1xuICAgICAgY29uc3QgZGlzcG9zZSA9IGRpc3Bvc2VzLnBvcCgpIVxuICAgICAgdHJ5IHtcbiAgICAgICAgZGlzcG9zZSgpXG4gICAgICB9XG4gICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgZXJyb3JzLnB1c2goZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yIDogbmV3IEVycm9yKFN0cmluZyhlcnJvcikpKVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChlcnJvcnMubGVuZ3RoID4gMCkge1xuICAgICAgdGhyb3cgbmV3IEFnZ3JlZ2F0ZUVycm9yKFxuICAgICAgICBlcnJvcnMsXG4gICAgICAgIGBEdXJpbmcgZGlzcG9zYWwsICR7ZXJyb3JzLmxlbmd0aH0gZXJyb3Iocykgb2NjdXJyZWRgLFxuICAgICAgKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBbZGlzcG9zZXMsIGRpc3Bvc2VzRXhlY3V0b3JdXG59XG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tICdnbmltJ1xuXG5leHBvcnQgZnVuY3Rpb24gdG9BY2Nlc3NvcjxUPih2YWx1ZTogVCB8IEFjY2Vzc29yPFQ+KTogQWNjZXNzb3I8VD4ge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3NvciA/IHZhbHVlIDogbmV3IEFjY2Vzc29yKCgpID0+IHZhbHVlKVxufVxuIiwgIi8qKlxuICogaHR0cHM6Ly9tYW4uYXJjaGxpbnV4Lm9yZy9tYW4vZ3JlZXRkLWlwYy43LmVuXG4gKi9cblxuaW1wb3J0IEdpbyBmcm9tICdnaTovL0dpbydcbmltcG9ydCBHTGliIGZyb20gJ2dpOi8vR0xpYidcblxuaW1wb3J0IHsgdXNlTG9nZ2VyIH0gZnJvbSAnQHNlcnZpY2VzL0xvZ2dlclNlcnZpY2UnXG5cbkdpby5fcHJvbWlzaWZ5KEdpby5JbnB1dFN0cmVhbS5wcm90b3R5cGUsICdyZWFkX2J5dGVzX2FzeW5jJywgJ3JlYWRfYnl0ZXNfZmluaXNoJylcblxuZXhwb3J0IGNvbnN0IEdyZWV0ZElQQyA9IHtcbiAgLyoqXG4gICAgICogU2hvcnRoYW5kIGZvciBjcmVhdGluZyBhIHNlc3Npb24sIHBvc3RpbmcgdGhlIHBhc3N3b3JkLFxuICAgICAqIGFuZCBzdGFydGluZyB0aGUgc2Vzc2lvbiB3aXRoIHRoZSBnaXZlbiBgY21kYFxuICAgICAqIHdoaWNoIGlzIHBhcnNlZCB3aXRoIFtmdW5jQEdMaWIuc2hlbGxfcGFyc2VfYXJndl0uXG4gICAgICovXG4gIGFzeW5jIGxvZ2luKHVzZXJuYW1lOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcsIGNtZDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuIHRoaXMubG9naW5fd2l0aF9lbnYodXNlcm5hbWUsIHBhc3N3b3JkLCBjbWQsIFtdKVxuICB9LFxuXG4gIC8qKlxuICAgICAqIFNhbWUgYXMgW0dyZWV0ZElQQy5sb2dpbl0gYnV0IGFsbG93IGZvciBzZXR0aW5nIGFkZGl0aW9uYWwgZW52XG4gICAgICogaW4gdGhlIGZvcm0gb2YgYG5hbWU9dmFsdWVgIHBhaXJzLlxuICAgICAqL1xuICBhc3luYyBsb2dpbl93aXRoX2VudihcbiAgICB1c2VybmFtZTogc3RyaW5nLFxuICAgIHBhc3N3b3JkOiBzdHJpbmcsXG4gICAgY21kOiBzdHJpbmcsXG4gICAgZW52OiBzdHJpbmdbXSxcbiAgKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgY29uc3QgeyBsb2dnZXIgfSA9IHVzZUxvZ2dlcigpXG4gICAgbGV0IGFyZ3Y6IHN0cmluZ1tdID0gW11cbiAgICB0cnkge1xuICAgICAgY29uc3QgW3N1Y2Nlc3MsIHBhcnNlZF9hcmd2XSA9IEdMaWIuc2hlbGxfcGFyc2VfYXJndihjbWQpXG4gICAgICBpZiAoc3VjY2VzcyAmJiBwYXJzZWRfYXJndikge1xuICAgICAgICBhcmd2ID0gcGFyc2VkX2FyZ3ZcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBwYXJzZSBjb21tYW5kJylcbiAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgIGxvZ2dlci5lcnJvcihlKVxuICAgICAgdGhyb3cgZVxuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBjcmVhdGVTZXNzaW9uUmVzcG9uc2UgPSBhd2FpdCBuZXcgQ3JlYXRlU2Vzc2lvbih1c2VybmFtZSkuc2VuZCgpXG4gICAgICBsb2dnZXIubG9nKGNyZWF0ZVNlc3Npb25SZXNwb25zZSlcbiAgICAgIGlmIChjcmVhdGVTZXNzaW9uUmVzcG9uc2UgaW5zdGFuY2VvZiBBdXRoTWVzc2FnZVJlc3BvbnNlICYmIGNyZWF0ZVNlc3Npb25SZXNwb25zZS5hdXRoX21lc3NhZ2VfdHlwZSA9PT0gQXV0aE1lc3NhZ2VUeXBlLlNFQ1JFVCkge1xuICAgICAgICBjb25zdCBhdXRoTWVzc2FnZVJlc3BvbnNlID0gYXdhaXQgbmV3IFBvc3RBdXRoTWVzc2FnZShwYXNzd29yZCkuc2VuZCgpXG4gICAgICAgIGxvZ2dlci5sb2coYXV0aE1lc3NhZ2VSZXNwb25zZSlcblxuICAgICAgICBpZiAoYXV0aE1lc3NhZ2VSZXNwb25zZSBpbnN0YW5jZW9mIEVycm9yUmVzcG9uc2UpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7YXV0aE1lc3NhZ2VSZXNwb25zZS5kZXNjcmlwdGlvbn1gKVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGF1dGhNZXNzYWdlUmVzcG9uc2UgaW5zdGFuY2VvZiBBdXRoTWVzc2FnZVJlc3BvbnNlKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2F1dGhNZXNzYWdlUmVzcG9uc2UuYXV0aF9tZXNzYWdlfWApXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGNvbnN0IHN0YXJ0U2Vzc2lvblJlc3BvbnNlID0gYXdhaXQgbmV3IFN0YXJ0U2Vzc2lvbihhcmd2LCBlbnYpLnNlbmQoKVxuICAgICAgbG9nZ2VyLmxvZyhzdGFydFNlc3Npb25SZXNwb25zZSlcblxuICAgICAgaWYgKHN0YXJ0U2Vzc2lvblJlc3BvbnNlIGluc3RhbmNlb2YgRXJyb3JSZXNwb25zZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7c3RhcnRTZXNzaW9uUmVzcG9uc2UuZGVzY3JpcHRpb259YClcbiAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGVycikge1xuICAgICAgbG9nZ2VyLmVycm9yKGVycilcbiAgICAgIGF3YWl0IG5ldyBDYW5jZWxTZXNzaW9uKCkuc2VuZCgpXG4gICAgICB0aHJvdyBlcnJcbiAgICB9XG4gIH0sXG59XG5cbi8qKlxuICogQmFzZSBjbGFzc2VzXG4gKi9cbmFic3RyYWN0IGNsYXNzIFJlcXVlc3Qge1xuICBwcm90ZWN0ZWQgYWJzdHJhY3QgZ2V0IHR5cGVfbmFtZSgpOiBzdHJpbmdcblxuICBwcml2YXRlIHNlcmlhbGl6ZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IGRhdGE6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7fVxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHRoaXMpKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMsIGtleSkpIHtcbiAgICAgICAgZGF0YVtrZXldID0gdmFsdWVcbiAgICAgIH1cbiAgICB9XG4gICAgZGF0YS50eXBlID0gdGhpcy50eXBlX25hbWVcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoZGF0YSlcbiAgfVxuXG4gIHByaXZhdGUgYnl0ZXNfdG9faW50KGJ5dGVzOiBHTGliLkJ5dGVzKTogbnVtYmVyIHtcbiAgICBjb25zdCBkYXRhID0gYnl0ZXMuZ2V0X2RhdGEoKVxuICAgIGxldCB2YWx1ZSA9IDBcbiAgICBpZiAoZGF0YSkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhbHVlID0gKHZhbHVlIDw8IDgpIHwgZGF0YVtpXVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdmFsdWVcbiAgfVxuXG4gIGFzeW5jIHNlbmQoKTogUHJvbWlzZTxSZXNwb25zZT4ge1xuICAgIGNvbnN0IHNvY2sgPSBHTGliLmdldGVudignR1JFRVREX1NPQ0snKVxuICAgIGlmICghc29jaykge1xuICAgICAgdGhyb3cgbmV3IEdpby5JT0Vycm9yRW51bSh7XG4gICAgICAgIGNvZGU6IEdpby5JT0Vycm9yRW51bS5OT1RfRk9VTkQsXG4gICAgICAgIG1lc3NhZ2U6ICdncmVldGQgc29ja2V0IG5vdCBmb3VuZCcsXG4gICAgICB9KVxuICAgIH1cblxuICAgIGNvbnN0IGNsaWVudCA9IG5ldyBHaW8uU29ja2V0Q2xpZW50KClcbiAgICBjb25zdCBhZGRyID0gbmV3IEdpby5Vbml4U29ja2V0QWRkcmVzcyh7IHBhdGg6IHNvY2sgfSlcbiAgICBjb25zdCBjb25uID0gY2xpZW50LmNvbm5lY3QoYWRkciwgbnVsbClcbiAgICBjb25zdCBwYXlsb2FkID0gdGhpcy5zZXJpYWxpemUoKVxuICAgIGNvbnN0IG9zdHJlYW0gPSBuZXcgR2lvLkRhdGFPdXRwdXRTdHJlYW0oe1xuICAgICAgYmFzZV9zdHJlYW06IGNvbm4ub3V0cHV0X3N0cmVhbSxcbiAgICAgIGJ5dGVfb3JkZXI6IEdpby5EYXRhU3RyZWFtQnl0ZU9yZGVyLkhPU1RfRU5ESUFOLFxuICAgIH0pXG5cbiAgICBvc3RyZWFtLnB1dF9pbnQzMihwYXlsb2FkLmxlbmd0aCwgbnVsbClcbiAgICBvc3RyZWFtLnB1dF9zdHJpbmcocGF5bG9hZCwgbnVsbClcbiAgICBvc3RyZWFtLmNsb3NlKG51bGwpXG5cbiAgICBjb25zdCBpc3RyZWFtID0gY29ubi5pbnB1dF9zdHJlYW1cbiAgICBjb25zdCByZXNwb25zZV9oZWFkID0gYXdhaXQgaXN0cmVhbS5yZWFkX2J5dGVzX2FzeW5jKDQsIEdMaWIuUFJJT1JJVFlfREVGQVVMVCwgbnVsbClcbiAgICBjb25zdCByZXNwb25zZV9sZW5ndGggPSB0aGlzLmJ5dGVzX3RvX2ludChyZXNwb25zZV9oZWFkKVxuICAgIGNvbnN0IHJlc3BvbnNlX2JvZHkgPSBhd2FpdCBpc3RyZWFtLnJlYWRfYnl0ZXNfYXN5bmMocmVzcG9uc2VfbGVuZ3RoLCBHTGliLlBSSU9SSVRZX0RFRkFVTFQsIG51bGwpXG5cbiAgICBjb25uLmNsb3NlKG51bGwpXG5cbiAgICBjb25zdCByZXNwb25zZV9kYXRhID0gcmVzcG9uc2VfYm9keS5nZXRfZGF0YSgpXG4gICAgaWYgKCFyZXNwb25zZV9kYXRhKSB7XG4gICAgICB0aHJvdyBuZXcgR2lvLklPRXJyb3JFbnVtKHtcbiAgICAgICAgY29kZTogR2lvLklPRXJyb3JFbnVtLklOVkFMSURfREFUQSxcbiAgICAgICAgbWVzc2FnZTogJ0VtcHR5IHJlc3BvbnNlIGZyb20gc2VydmVyJyxcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgY29uc3QgcmVzcG9uc2Vfc3RyID0gbmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKHJlc3BvbnNlX2RhdGEpXG4gICAgY29uc3QgcmVzcG9uc2Vfb2JqID0gSlNPTi5wYXJzZShyZXNwb25zZV9zdHIpXG5cbiAgICBzd2l0Y2ggKHJlc3BvbnNlX29iai50eXBlKSB7XG4gICAgICBjYXNlICdzdWNjZXNzJzogcmV0dXJuIG5ldyBTdWNjZXNzUmVzcG9uc2UoKVxuICAgICAgY2FzZSAnZXJyb3InOiByZXR1cm4gbmV3IEVycm9yUmVzcG9uc2UocmVzcG9uc2Vfb2JqKVxuICAgICAgY2FzZSAnYXV0aF9tZXNzYWdlJzogcmV0dXJuIG5ldyBBdXRoTWVzc2FnZVJlc3BvbnNlKHJlc3BvbnNlX29iailcbiAgICAgIGRlZmF1bHQ6IHRocm93IG5ldyBHaW8uSU9FcnJvckVudW0oe1xuICAgICAgICBjb2RlOiBHaW8uSU9FcnJvckVudW0uTk9UX0ZPVU5ELFxuICAgICAgICBtZXNzYWdlOiAndW5rbm93biByZXNwb25zZSB0eXBlJyxcbiAgICAgIH0pXG4gICAgfVxuICB9XG59XG5cbmFic3RyYWN0IGNsYXNzIFJlc3BvbnNlIHt9XG5cbi8qKlxuICogUmVxdWVzdHNcbiAqL1xuY2xhc3MgQ3JlYXRlU2Vzc2lvbiBleHRlbmRzIFJlcXVlc3Qge1xuICBwcm90ZWN0ZWQgZ2V0IHR5cGVfbmFtZSgpOiBzdHJpbmcgeyByZXR1cm4gJ2NyZWF0ZV9zZXNzaW9uJyB9XG4gIHVzZXJuYW1lOiBzdHJpbmdcblxuICBjb25zdHJ1Y3Rvcih1c2VybmFtZTogc3RyaW5nKSB7XG4gICAgc3VwZXIoKVxuICAgIHRoaXMudXNlcm5hbWUgPSB1c2VybmFtZVxuICB9XG59XG5cbmNsYXNzIFBvc3RBdXRoTWVzc2FnZSBleHRlbmRzIFJlcXVlc3Qge1xuICBwcm90ZWN0ZWQgZ2V0IHR5cGVfbmFtZSgpOiBzdHJpbmcgeyByZXR1cm4gJ3Bvc3RfYXV0aF9tZXNzYWdlX3Jlc3BvbnNlJyB9XG4gIHJlc3BvbnNlOiBzdHJpbmdcblxuICBjb25zdHJ1Y3RvcihyZXNwb25zZTogc3RyaW5nKSB7XG4gICAgc3VwZXIoKVxuICAgIHRoaXMucmVzcG9uc2UgPSByZXNwb25zZVxuICB9XG59XG5cbmNsYXNzIFN0YXJ0U2Vzc2lvbiBleHRlbmRzIFJlcXVlc3Qge1xuICBwcm90ZWN0ZWQgZ2V0IHR5cGVfbmFtZSgpOiBzdHJpbmcgeyByZXR1cm4gJ3N0YXJ0X3Nlc3Npb24nIH1cbiAgY21kOiBzdHJpbmdbXVxuICBlbnY6IHN0cmluZ1tdXG5cbiAgY29uc3RydWN0b3IoY21kOiBzdHJpbmdbXSwgZW52OiBzdHJpbmdbXSA9IFtdKSB7XG4gICAgc3VwZXIoKVxuICAgIHRoaXMuY21kID0gY21kXG4gICAgdGhpcy5lbnYgPSBlbnZcbiAgfVxufVxuXG5jbGFzcyBDYW5jZWxTZXNzaW9uIGV4dGVuZHMgUmVxdWVzdCB7XG4gIHByb3RlY3RlZCBnZXQgdHlwZV9uYW1lKCk6IHN0cmluZyB7IHJldHVybiAnY2FuY2VsX3Nlc3Npb24nIH1cbn1cblxuLyoqXG4gKiBSZXNwb25zZXNcbiAqL1xuY2xhc3MgU3VjY2Vzc1Jlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuICBzdGF0aWMgcmVhZG9ubHkgVFlQRSA9ICdzdWNjZXNzJ1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKClcbiAgfVxufVxuXG50eXBlIEVycm9yUmVzcG9uc2VUeXBlID0gJ2Vycm9yJyB8ICdhdXRoX2Vycm9yJ1xudHlwZSBFcnJvclJlc3BvbnNlUmVjb3JkID0ge1xuICBlcnJvcl90eXBlOiBFcnJvclJlc3BvbnNlVHlwZVxuICBkZXNjcmlwdGlvbjogc3RyaW5nXG59XG5jbGFzcyBFcnJvclJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuICBzdGF0aWMgcmVhZG9ubHkgVFlQRSA9ICdlcnJvcidcblxuICBlcnJvcl90eXBlOiBFcnJvclR5cGVcbiAgZGVzY3JpcHRpb246IHN0cmluZ1xuXG4gIGNvbnN0cnVjdG9yKHJlY29yZDogRXJyb3JSZXNwb25zZVJlY29yZCkge1xuICAgIHN1cGVyKClcbiAgICB0aGlzLmVycm9yX3R5cGUgPSBFcnJvclR5cGUuZnJvbV9zdHJpbmcocmVjb3JkLmVycm9yX3R5cGUpXG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IHJlY29yZC5kZXNjcmlwdGlvblxuICB9XG59XG5cbmNsYXNzIEVycm9yVHlwZSB7XG4gIHN0YXRpYyBBVVRIX0VSUk9SID0gJ2F1dGhfZXJyb3InXG4gIHN0YXRpYyBFUlJPUiA9ICdlcnJvcidcblxuICBzdGF0aWMgZnJvbV9zdHJpbmcoc3RyOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHN3aXRjaCAoc3RyKSB7XG4gICAgICBjYXNlICdhdXRoX2Vycm9yJzogcmV0dXJuIEVycm9yVHlwZS5BVVRIX0VSUk9SXG4gICAgICBjYXNlICdlcnJvcic6IHJldHVybiBFcnJvclR5cGUuRVJST1JcbiAgICAgIGRlZmF1bHQ6IHRocm93IG5ldyBHaW8uSU9FcnJvckVudW0oe1xuICAgICAgICBjb2RlOiBHaW8uSU9FcnJvckVudW0uRkFJTEVELFxuICAgICAgICBtZXNzYWdlOiBgdW5rbm93biBlcnJvcl90eXBlOiAke3N0cn1gLFxuICAgICAgfSlcbiAgICB9XG4gIH1cbn1cblxudHlwZSBBdXRoTWVzc2FnZVJlc3BvbnNlVHlwZSA9ICd2aXNpYmxlJyB8ICdzZWNyZXQnIHwgJ2luZm8nIHwgJ2Vycm9yJ1xudHlwZSBBdXRoTWVzc2FnZVJlc3BvbnNlUmVjb3JkID0ge1xuICBhdXRoX21lc3NhZ2VfdHlwZTogQXV0aE1lc3NhZ2VSZXNwb25zZVR5cGVcbiAgYXV0aF9tZXNzYWdlOiBzdHJpbmdcbn1cblxuY2xhc3MgQXV0aE1lc3NhZ2VSZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcbiAgc3RhdGljIHJlYWRvbmx5IFRZUEUgPSAnYXV0aF9tZXNzYWdlJ1xuXG4gIGF1dGhfbWVzc2FnZV90eXBlOiBBdXRoTWVzc2FnZVR5cGVcbiAgYXV0aF9tZXNzYWdlOiBzdHJpbmdcblxuICBjb25zdHJ1Y3RvcihyZWNvcmQ6IEF1dGhNZXNzYWdlUmVzcG9uc2VSZWNvcmQpIHtcbiAgICBzdXBlcigpXG4gICAgdGhpcy5hdXRoX21lc3NhZ2VfdHlwZSA9IEF1dGhNZXNzYWdlVHlwZS5mcm9tX3N0cmluZyhyZWNvcmQuYXV0aF9tZXNzYWdlX3R5cGUpXG4gICAgdGhpcy5hdXRoX21lc3NhZ2UgPSByZWNvcmQuYXV0aF9tZXNzYWdlXG4gIH1cbn1cblxuY2xhc3MgQXV0aE1lc3NhZ2VUeXBlIHtcbiAgc3RhdGljIFZJU0lCTEUgPSAndmlzaWJsZSdcbiAgc3RhdGljIFNFQ1JFVCA9ICdzZWNyZXQnXG4gIHN0YXRpYyBJTkZPID0gJ2luZm8nXG4gIHN0YXRpYyBFUlJPUiA9ICdlcnJvcidcblxuICBzdGF0aWMgZnJvbV9zdHJpbmcoc3RyOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHN3aXRjaCAoc3RyKSB7XG4gICAgICBjYXNlICd2aXNpYmxlJzogcmV0dXJuIEF1dGhNZXNzYWdlVHlwZS5WSVNJQkxFXG4gICAgICBjYXNlICdzZWNyZXQnOiByZXR1cm4gQXV0aE1lc3NhZ2VUeXBlLlNFQ1JFVFxuICAgICAgY2FzZSAnaW5mbyc6IHJldHVybiBBdXRoTWVzc2FnZVR5cGUuSU5GT1xuICAgICAgY2FzZSAnZXJyb3InOiByZXR1cm4gQXV0aE1lc3NhZ2VUeXBlLkVSUk9SXG4gICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgR2lvLklPRXJyb3JFbnVtKHtcbiAgICAgICAgY29kZTogR2lvLklPRXJyb3JFbnVtLkZBSUxFRCxcbiAgICAgICAgbWVzc2FnZTogYHVua25vd24gbWVzc2FnZV90eXBlOiAke3N0cn1gLFxuICAgICAgfSlcbiAgICB9XG4gIH1cbn1cbiIsICJpbXBvcnQgeyBGaWxlTG9nZ2VyIH0gZnJvbSAnQGxpYnMvbG9nJ1xuXG5sZXQgZmlsZUxvZ2dlcjogRmlsZUxvZ2dlciB8IG51bGwgPSBudWxsXG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VMb2dnZXIoKSB7XG4gIGlmICghZmlsZUxvZ2dlcikge1xuICAgIGZpbGVMb2dnZXIgPSBuZXcgRmlsZUxvZ2dlcigpXG4gIH1cblxuICByZXR1cm4ge1xuICAgIGxvZ2dlcjogZmlsZUxvZ2dlcixcbiAgfVxufVxuIiwgImltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvXCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWJcIlxuXG5leHBvcnQgZnVuY3Rpb24gcmVhZEZpbGUoZmlsZTogc3RyaW5nIHwgR2lvLkZpbGUpIHtcbiAgICBjb25zdCBmID0gdHlwZW9mIGZpbGUgPT09IFwic3RyaW5nXCIgPyBHaW8uRmlsZS5uZXdfZm9yX3BhdGgoZmlsZSkgOiBmaWxlXG5cbiAgICBjb25zdCBbLCBieXRlc10gPSBmLmxvYWRfY29udGVudHMobnVsbClcbiAgICByZXR1cm4gbmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKGJ5dGVzKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVhZEZpbGVBc3luYyhmaWxlOiBzdHJpbmcgfCBHaW8uRmlsZSk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgY29uc3QgZiA9IHR5cGVvZiBmaWxlID09PSBcInN0cmluZ1wiID8gR2lvLkZpbGUubmV3X2Zvcl9wYXRoKGZpbGUpIDogZmlsZVxuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgZi5sb2FkX2NvbnRlbnRzX2FzeW5jKG51bGwsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW3N1Y2Nlc3MsIGJ5dGVzXSA9IGYubG9hZF9jb250ZW50c19maW5pc2gocmVzKVxuICAgICAgICAgICAgICAgIGlmIChzdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUobmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKGJ5dGVzKSlcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXRoID0gdHlwZW9mIGZpbGUgPT09IFwic3RyaW5nXCIgPyBmaWxlIDogZmlsZS5nZXRfcGF0aCgpXG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChFcnJvcihgcmVhZGluZyBmaWxlICR7cGF0aH0gd2FzIHVuc3VjY2Vzc2Z1bGApKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGUoZmlsZTogc3RyaW5nIHwgR2lvLkZpbGUsIGNvbnRlbnQ6IHN0cmluZyk6IEdpby5GaWxlIHtcbiAgICBjb25zdCBnZmlsZSA9IHR5cGVvZiBmaWxlID09PSBcInN0cmluZ1wiID8gR2lvLkZpbGUubmV3X2Zvcl9wYXRoKGZpbGUpIDogZmlsZVxuICAgIGNvbnN0IHBhdGggPSB0eXBlb2YgZmlsZSA9PT0gXCJzdHJpbmdcIiA/IGZpbGUgOiBnZmlsZS5nZXRfcGF0aCgpXG5cbiAgICBpZiAoIXBhdGgpIHRocm93IEVycm9yKFwicGF0aCBpcyBudWxsXCIpXG5cbiAgICBjb25zdCBkaXIgPSBHTGliLnBhdGhfZ2V0X2Rpcm5hbWUocGF0aClcbiAgICBpZiAoIUdMaWIuZmlsZV90ZXN0KGRpciwgR0xpYi5GaWxlVGVzdC5JU19ESVIpKSB7XG4gICAgICAgIEdpby5GaWxlLm5ld19mb3JfcGF0aChkaXIpLm1ha2VfZGlyZWN0b3J5X3dpdGhfcGFyZW50cyhudWxsKVxuICAgIH1cblxuICAgIGdmaWxlLnJlcGxhY2VfY29udGVudHMoXG4gICAgICAgIG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShjb250ZW50KSxcbiAgICAgICAgbnVsbCxcbiAgICAgICAgZmFsc2UsXG4gICAgICAgIEdpby5GaWxlQ3JlYXRlRmxhZ3MuUkVQTEFDRV9ERVNUSU5BVElPTixcbiAgICAgICAgbnVsbCxcbiAgICApXG4gICAgcmV0dXJuIGdmaWxlXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGVBc3luYyhmaWxlOiBzdHJpbmcgfCBHaW8uRmlsZSwgY29udGVudDogc3RyaW5nKTogUHJvbWlzZTxHaW8uRmlsZT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IGdmaWxlID0gdHlwZW9mIGZpbGUgPT09IFwic3RyaW5nXCIgPyBHaW8uRmlsZS5uZXdfZm9yX3BhdGgoZmlsZSkgOiBmaWxlXG4gICAgICAgIGNvbnN0IHBhdGggPSB0eXBlb2YgZmlsZSA9PT0gXCJzdHJpbmdcIiA/IGZpbGUgOiBnZmlsZS5nZXRfcGF0aCgpXG5cbiAgICAgICAgaWYgKCFwYXRoKSByZXR1cm4gcmVqZWN0KEVycm9yKFwicGF0aCBpcyBudWxsXCIpKVxuXG4gICAgICAgIGNvbnN0IGRpciA9IEdMaWIucGF0aF9nZXRfZGlybmFtZShwYXRoKVxuICAgICAgICBpZiAoIUdMaWIuZmlsZV90ZXN0KGRpciwgR0xpYi5GaWxlVGVzdC5JU19ESVIpKSB7XG4gICAgICAgICAgICBHaW8uRmlsZS5uZXdfZm9yX3BhdGgoZGlyKS5tYWtlX2RpcmVjdG9yeV93aXRoX3BhcmVudHMobnVsbClcbiAgICAgICAgfVxuXG4gICAgICAgIGdmaWxlLnJlcGxhY2VfY29udGVudHNfYnl0ZXNfYXN5bmMoXG4gICAgICAgICAgICBuZXcgR0xpYi5CeXRlcyhuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoY29udGVudCkpLFxuICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgICAgR2lvLkZpbGVDcmVhdGVGbGFncy5SRVBMQUNFX0RFU1RJTkFUSU9OLFxuICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBnZmlsZS5yZXBsYWNlX2NvbnRlbnRzX2ZpbmlzaChyZXMpXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZ2ZpbGUpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIClcbiAgICB9KVxufVxuXG4vLyBtYWtlIHN1cmUgbW9uaXRvciBmaWxlIHJlZiBjb3VudCBkb2VzIG5vdCBkcm9wIHRvIDBcbmNvbnN0IG1vbml0b3JGaWxlcyA9IG5ldyBTZXQ8R2lvLkZpbGVNb25pdG9yPigpXG5cbmV4cG9ydCBmdW5jdGlvbiBtb25pdG9yRmlsZShcbiAgICBwYXRoOiBzdHJpbmcsXG4gICAgY2FsbGJhY2s6IChmaWxlOiBzdHJpbmcsIGV2ZW50OiBHaW8uRmlsZU1vbml0b3JFdmVudCkgPT4gdm9pZCxcbik6IEdpby5GaWxlTW9uaXRvciB7XG4gICAgY29uc3QgbW9uaXRvcmVkRmlsZSA9IEdpby5GaWxlLm5ld19mb3JfcGF0aChwYXRoKVxuXG4gICAgY29uc3QgbW9uID0gbW9uaXRvcmVkRmlsZS5tb25pdG9yKFxuICAgICAgICBHaW8uRmlsZU1vbml0b3JGbGFncy5XQVRDSF9IQVJEX0xJTktTIHxcbiAgICAgICAgICAgIEdpby5GaWxlTW9uaXRvckZsYWdzLldBVENIX01PVU5UUyB8XG4gICAgICAgICAgICBHaW8uRmlsZU1vbml0b3JGbGFncy5XQVRDSF9NT1ZFUyxcbiAgICAgICAgbnVsbCxcbiAgICApXG5cbiAgICBtb24uY29ubmVjdChcImNoYW5nZWRcIiwgKF8sIGZpbGUsIF9maWxlLCBldmVudCkgPT4ge1xuICAgICAgICBjb25zdCBwYXRoID0gZmlsZS5nZXRfcGF0aCgpXG4gICAgICAgIGlmIChwYXRoKSB7XG4gICAgICAgICAgICBpZiAoZXZlbnQgPT09IEdpby5GaWxlTW9uaXRvckV2ZW50LkNSRUFURUQgJiYgcGF0aCkge1xuICAgICAgICAgICAgICAgIG1vbml0b3JGaWxlKHBhdGgsIGNhbGxiYWNrKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoZXZlbnQgPT09IEdpby5GaWxlTW9uaXRvckV2ZW50LkRFTEVURUQgJiYgcGF0aCA9PT0gbW9uaXRvcmVkRmlsZS5nZXRfcGF0aCgpKSB7XG4gICAgICAgICAgICAgICAgbW9uLmNhbmNlbCgpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNhbGxiYWNrKHBhdGgsIGV2ZW50KVxuICAgICAgICB9XG4gICAgfSlcblxuICAgIGlmIChHTGliLmZpbGVfdGVzdChwYXRoLCBHTGliLkZpbGVUZXN0LklTX0RJUikpIHtcbiAgICAgICAgY29uc3QgZW51bWVyYXRvciA9IG1vbml0b3JlZEZpbGUuZW51bWVyYXRlX2NoaWxkcmVuKFxuICAgICAgICAgICAgR2lvLkZJTEVfQVRUUklCVVRFX1NUQU5EQVJEX1RZUEUsXG4gICAgICAgICAgICBHaW8uRmlsZVF1ZXJ5SW5mb0ZsYWdzLk5PTkUsXG4gICAgICAgICAgICBudWxsLFxuICAgICAgICApXG5cbiAgICAgICAgbGV0IGk6IEdpby5GaWxlSW5mbyB8IG51bGxcbiAgICAgICAgd2hpbGUgKChpID0gZW51bWVyYXRvci5uZXh0X2ZpbGUobnVsbCkpICE9PSBudWxsKSB7XG4gICAgICAgICAgICBpZiAoaS5nZXRfZmlsZV90eXBlKCkgPT0gR2lvLkZpbGVUeXBlLkRJUkVDVE9SWSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpbGVwYXRoID0gbW9uaXRvcmVkRmlsZS5nZXRfY2hpbGQoaS5nZXRfbmFtZSgpKS5nZXRfcGF0aCgpXG4gICAgICAgICAgICAgICAgaWYgKGZpbGVwYXRoICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbSA9IG1vbml0b3JGaWxlKGZpbGVwYXRoLCBjYWxsYmFjaylcbiAgICAgICAgICAgICAgICAgICAgbW9uLmNvbm5lY3QoXCJub3RpZnk6OmNhbmNlbGxlZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtLmNhbmNlbCgpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgbW9uaXRvckZpbGVzLmFkZChtb24pXG4gICAgbW9uLmNvbm5lY3QoXCJub3RpZnk6OmNhbmNlbGxlZFwiLCAoKSA9PiB7XG4gICAgICAgIHByaW50KHBhdGgsIFwiY2FuY2VsbGVkXCIpXG4gICAgICAgIG1vbml0b3JGaWxlcy5kZWxldGUobW9uKVxuICAgIH0pXG4gICAgcmV0dXJuIG1vblxufVxuIiwgImV4cG9ydCBmdW5jdGlvbiBwYXJzZUNvbmZpZyh0ZXh0OiBzdHJpbmcpIHtcbiAgY29uc3QgY29uZmlnOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmcgfCBudW1iZXIgfCBib29sZWFuPiA9IHt9XG4gIGNvbnN0IGxpbmVzID0gdGV4dC5zcGxpdCgnXFxuJylcblxuICBmb3IgKGxldCBsaW5lIG9mIGxpbmVzKSB7XG4gICAgLy8gU2tpcCBjb21tZW50cyBhbmQgZW1wdHkgbGluZXNcbiAgICBsaW5lID0gbGluZS50cmltKClcbiAgICBpZiAobGluZS5zdGFydHNXaXRoKCcjJykgfHwgbGluZSA9PT0gJycpIGNvbnRpbnVlXG5cbiAgICAvLyBIYW5kbGUgYm9vbGVhbiBmbGFncyAoZS5nLiBgZXZlbl9kZW55X3Jvb3RgKVxuICAgIGlmIChsaW5lLm1hdGNoKC9eW2EtekEtWl9dW2EtekEtWjAtOV9dKiQvKSkge1xuICAgICAgY29uZmlnW2xpbmVdID0gdHJ1ZVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICAvLyBQcm9jZXNzIGtleS12YWx1ZSBwYWlycyAoZS5nLiBgZGVueSA9IDNgKVxuICAgIGNvbnN0IG1hdGNoID0gbGluZS5tYXRjaCgvXihcXHcrKVxccyo9XFxzKiguKykkLylcbiAgICBpZiAobWF0Y2gpIHtcbiAgICAgIGNvbnN0IGtleSA9IG1hdGNoWzFdXG4gICAgICBsZXQgdmFsdWU6IHN0cmluZyB8IG51bWJlciA9IG1hdGNoWzJdLnRyaW0oKVxuXG4gICAgICAvLyBDb252ZXJ0IG51bWVyaWMgdmFsdWVzIGZyb20gc3RyaW5ncyB0byBudW1iZXJzXG4gICAgICBpZiAodmFsdWUubWF0Y2goL15cXGQrJC8pKSB7XG4gICAgICAgIHZhbHVlID0gcGFyc2VJbnQodmFsdWUpXG4gICAgICB9XG4gICAgICBjb25maWdba2V5XSA9IHZhbHVlXG4gICAgfVxuICB9XG4gIHJldHVybiBjb25maWdcbn1cbiIsICJpbXBvcnQgeyByZWFkRmlsZSB9IGZyb20gJ2Fncy9maWxlJ1xuXG5pbXBvcnQgeyBwYXJzZUNvbmZpZyB9IGZyb20gJ0BsaWJzL2NvbmYnXG5cbmV4cG9ydCBpbnRlcmZhY2UgUEFNQ29uZmlnIHtcbiAgZGVueTogbnVtYmVyXG4gIHVubG9ja190aW1lOiBudW1iZXJcbiAgZGlyPzogc3RyaW5nXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQYW1GYWlsbG9ja0NvbmYoKTogUEFNQ29uZmlnIHtcbiAgLy8gRGVmYXVsdCB2YWx1ZXNcbiAgY29uc3QgY29uZmlnOiBQQU1Db25maWcgPSB7XG4gICAgZGVueTogMyxcbiAgICB1bmxvY2tfdGltZTogNjAwLFxuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBwYXJzZWRfY29uZmlnID0gcGFyc2VDb25maWcocmVhZEZpbGUoJy9ldGMvc2VjdXJpdHkvZmFpbGxvY2suY29uZicpKVxuXG4gICAgaWYgKHR5cGVvZiBwYXJzZWRfY29uZmlnLmRlbnkgPT09ICdudW1iZXInKSB7XG4gICAgICBjb25maWcuZGVueSA9IHBhcnNlZF9jb25maWcuZGVueVxuICAgIH1cbiAgICBpZiAodHlwZW9mIHBhcnNlZF9jb25maWcudW5sb2NrX3RpbWUgPT09ICdudW1iZXInKSB7XG4gICAgICBjb25maWcudW5sb2NrX3RpbWUgPSBwYXJzZWRfY29uZmlnLnVubG9ja190aW1lXG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGFyc2VkX2NvbmZpZy5kaXIgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb25maWcuZGlyID0gcGFyc2VkX2NvbmZpZy5kaXJcbiAgICB9XG4gIH1cbiAgY2F0Y2ggKGUpIHtcbiAgICBsb2dFcnJvcihlKVxuICB9XG5cbiAgcmV0dXJuIGNvbmZpZ1xufVxuIiwgIi8vIGltcG9ydCB7IGdldFBhbUZhaWxsb2NrIH0gZnJvbSAnLi9nZXRQYW1GYWlsbG9jaydcbmltcG9ydCB7IGdldFBhbUZhaWxsb2NrQ29uZiwgUEFNQ29uZmlnIH0gZnJvbSAnLi9nZXRQYW1GYWlsbG9ja0NvbmYnXG5cbmxldCBjb25maWc6IFBBTUNvbmZpZ1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlUGFtRmFpbGxvY2tDb25mKCk6IFBBTUNvbmZpZyB7XG4gIGlmICghY29uZmlnKSB7XG4gICAgY29uZmlnID0gZ2V0UGFtRmFpbGxvY2tDb25mKClcbiAgfVxuXG4gIHJldHVybiBjb25maWdcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVBhbUZhaWxsb2NrcygpOiBudW1iZXIge1xuICBjb25zdCBfY29uZmlnID0gdXNlUGFtRmFpbGxvY2tDb25mKClcbiAgY29uc3Qgc2Vjb25kc0xlZnQgPSBfY29uZmlnLnVubG9ja190aW1lXG5cbiAgaWYgKF9jb25maWcuZGlyKSB7XG4gICAgLy8gVE9ETzogXHUwNDFFXHUwNDMxXHUwNDQ1XHUwNDNFXHUwNDM0XHUwNDM4XHUwNDNDIFx1MDQzQVx1MDQzMFx1MDQ0Mlx1MDQzMFx1MDQzQlx1MDQzRVx1MDQzMyBcdTA0MzggXHUwNDNGXHUwNDNFIFx1MDQzQVx1MDQzMFx1MDQzNlx1MDQzNFx1MDQzRVx1MDQzQ1x1MDQ0MyBcdTA0M0ZcdTA0M0VcdTA0M0JcdTA0NENcdTA0MzdcdTA0M0VcdTA0MzJcdTA0MzBcdTA0NDJcdTA0MzVcdTA0M0JcdTA0NEUgXHUwNDQxXHUwNDNFXHUwNDQxXHUwNDQyXHUwNDMwXHUwNDMyXHUwNDNCXHUwNDRGXHUwNDM1XHUwNDNDIFx1MDQzRVx1MDQzM1x1MDQ0MFx1MDQzMFx1MDQzRFx1MDQzOFx1MDQ0N1x1MDQzNVx1MDQzRFx1MDQzOFx1MDQ0RiBcdTA0MzVcdTA0NDFcdTA0M0JcdTA0MzggXHUwNDM1XHUwNDQxXHUwNDQyXHUwNDRDXG4gICAgLy8gY29uc3QgbG9jayA9IGdldFBhbUZhaWxsb2NrKGAke19jb25maWcuZGlyfS91c2VybG9ja2ZpbGVgKVxuICB9XG5cbiAgcmV0dXJuIHNlY29uZHNMZWZ0XG59XG4iLCAiZXhwb3J0IGNvbnN0IFNUQVRFX0ZJTEUgPSAnL3Zhci9saWIva290YW1pL3N0YXRlJ1xuIiwgImltcG9ydCB7IHJlYWRGaWxlIH0gZnJvbSAnYWdzL2ZpbGUnXG5cbmltcG9ydCB7IHVzZUxvZ2dlciB9IGZyb20gJ0BzZXJ2aWNlcy9Mb2dnZXJTZXJ2aWNlJ1xuXG5pbXBvcnQgeyBTVEFURV9GSUxFIH0gZnJvbSAnLi9jb25zdGFudHMnXG5pbXBvcnQgeyBMb2dpblN0b3JhZ2VSZWNvcmQgfSBmcm9tICcuL3R5cGVzJ1xuXG5leHBvcnQgZnVuY3Rpb24gcmVhZExvZ2luU3RvcmFnZVN0YXRlKCk6IExvZ2luU3RvcmFnZVJlY29yZCB8IG51bGwge1xuICBjb25zdCB7IGxvZ2dlciB9ID0gdXNlTG9nZ2VyKClcbiAgdHJ5IHtcbiAgICBjb25zdCBmaWxlID0gcmVhZEZpbGUoU1RBVEVfRklMRSlcbiAgICByZXR1cm4gZmlsZS5sZW5ndGggPiAwID8gSlNPTi5wYXJzZShmaWxlKSA6IG51bGxcbiAgfVxuICBjYXRjaCAoZXJyKSB7XG4gICAgbG9nZ2VyLmVycm9yKGVycilcbiAgICByZXR1cm4gbnVsbFxuICB9XG59XG4iLCAiaW1wb3J0IEdpbyBmcm9tICdnaTovL0dpbydcblxuaW1wb3J0IHsgd3JpdGVGaWxlIH0gZnJvbSAnYWdzL2ZpbGUnXG5cbmltcG9ydCB7IHVzZUxvZ2dlciB9IGZyb20gJ0BzZXJ2aWNlcy9Mb2dnZXJTZXJ2aWNlJ1xuaW1wb3J0IHsgdXNlU2Vzc2lvbkxpc3RTZXJ2aWNlIH0gZnJvbSAnQHNlcnZpY2VzL1Nlc3Npb25MaXN0U2VydmljZSdcbmltcG9ydCB7IHVzZVVzZXJMaXN0U2VydmljZSB9IGZyb20gJ0BzZXJ2aWNlcy9Vc2VyTGlzdFNlcnZpY2UnXG5cbmltcG9ydCB7IHVzZUxvZ2luU3RvcmFnZVNlcnZpY2UgfSBmcm9tICcuJ1xuaW1wb3J0IHsgU1RBVEVfRklMRSB9IGZyb20gJy4vY29uc3RhbnRzJ1xuaW1wb3J0IHsgdHlwZSBMb2dpblN0b3JhZ2VSZWNvcmQgfSBmcm9tICcuL3R5cGVzJ1xuXG5leHBvcnQgZnVuY3Rpb24gd3JpdGVMb2dpblN0b3JhZ2VTdGF0ZSgpIHtcbiAgY29uc3QgeyBsb2dnZXIgfSA9IHVzZUxvZ2dlcigpXG4gIGNvbnN0IHsgc2VsZWN0ZWRVc2VyIH0gPSB1c2VVc2VyTGlzdFNlcnZpY2UoKVxuICBjb25zdCB7IHNlbGVjdGVkU2Vzc2lvbiwgZGlzcG9zZVNlc3Npb25MaXN0U2VydmljZSB9ID0gdXNlU2Vzc2lvbkxpc3RTZXJ2aWNlKClcbiAgY29uc3QgeyBjYWNoZWRMb2dpblN0b3JhZ2VSZWNvcmQgfSA9IHVzZUxvZ2luU3RvcmFnZVNlcnZpY2UoKVxuICBjb25zdCBzdGF0ZTogTG9naW5TdG9yYWdlUmVjb3JkID0ge1xuICAgIHVzZXI6IHNlbGVjdGVkVXNlci5nZXQoKS51c2VyTmFtZSxcbiAgICBzZXNzaW9uczoge1xuICAgICAgLi4uKGNhY2hlZExvZ2luU3RvcmFnZVJlY29yZC5nZXQoKT8uc2Vzc2lvbnMpLFxuICAgICAgW3NlbGVjdGVkVXNlci5nZXQoKS51c2VyTmFtZV06IHNlbGVjdGVkU2Vzc2lvbi5nZXQoKS5wYXRoLFxuICAgIH0sXG4gIH1cblxuICBkaXNwb3NlU2Vzc2lvbkxpc3RTZXJ2aWNlKClcblxuICBjb25zdCBmaWxlID0gR2lvLkZpbGUubmV3X2Zvcl9wYXRoKFNUQVRFX0ZJTEUpXG4gIGlmICghZmlsZS5xdWVyeV9leGlzdHMobnVsbCkpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcGFyZW50RGlyID0gZmlsZS5nZXRfcGFyZW50KClcblxuICAgICAgaWYgKHBhcmVudERpciAmJiAhcGFyZW50RGlyLnF1ZXJ5X2V4aXN0cyhudWxsKSkge1xuICAgICAgICBwYXJlbnREaXIubWFrZV9kaXJlY3Rvcnlfd2l0aF9wYXJlbnRzKG51bGwpXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG91dHB1dFN0cmVhbSA9IGZpbGUuY3JlYXRlKEdpby5GaWxlQ3JlYXRlRmxhZ3MuTk9ORSwgbnVsbClcbiAgICAgIG91dHB1dFN0cmVhbS5jbG9zZShudWxsKVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgbG9nZ2VyLmVycm9yKGUpXG4gICAgfVxuICB9XG5cbiAgdHJ5IHtcbiAgICB3cml0ZUZpbGUoU1RBVEVfRklMRSwgSlNPTi5zdHJpbmdpZnkoc3RhdGUpKVxuICB9XG4gIGNhdGNoIChlKSB7XG4gICAgbG9nZ2VyLmVycm9yKGUpXG4gIH1cbn1cbiIsICJpbXBvcnQgeyByZWFkRmlsZSB9IGZyb20gJ2Fncy9maWxlJ1xuXG5leHBvcnQgaW50ZXJmYWNlIEdlY29zUmVjb3JkIHtcbiAgZnVsbG5hbWU6IHN0cmluZ1xuICBhZGRyZXNzPzogc3RyaW5nXG4gIG9mZmljZVBob25lPzogc3RyaW5nXG4gIGhvbWVQaG9uZT86IHN0cmluZ1xuICBjb250YWN0Pzogc3RyaW5nXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGFzc3dkUmVjb3JkIHtcbiAgdXNlcm5hbWU6IHN0cmluZ1xuICB1aWQ6IG51bWJlclxuICBnaWQ6IG51bWJlclxuICBob21lOiBzdHJpbmdcbiAgc2hlbGw6IHN0cmluZ1xuICBnZWNvczogR2Vjb3NSZWNvcmRcbn1cblxuY29uc3QgR0VDT1NfSU5ERVggPSB7XG4gIGZ1bGxuYW1lOiAwLFxuICBhZGRyZXNzOiAxLFxuICBvZmZpY2VQaG9uZTogMixcbiAgaG9tZVBob25lOiAzLFxuICBjb250YWN0OiA0LFxufVxuXG5jb25zdCBQQVNTV0RfSU5ERVggPSB7XG4gIHVzZXJuYW1lOiAwLFxuICB1aWQ6IDIsXG4gIGdpZDogMyxcbiAgZ2Vjb3M6IDQsXG4gIGhvbWU6IDUsXG4gIHNoZWxsOiA2LFxufVxuXG5mdW5jdGlvbiBwYXJzZUdlY29zKGNvbnRlbnQ6IHN0cmluZyk6IEdlY29zUmVjb3JkIHtcbiAgY29uc3QgZ2Vjb3MgPSBjb250ZW50LnNwbGl0KCcsJylcblxuICByZXR1cm4ge1xuICAgIGZ1bGxuYW1lOiBnZWNvc1tHRUNPU19JTkRFWC5mdWxsbmFtZV0sXG4gICAgYWRkcmVzczogZ2Vjb3NbR0VDT1NfSU5ERVguYWRkcmVzc10sXG4gICAgb2ZmaWNlUGhvbmU6IGdlY29zW0dFQ09TX0lOREVYLm9mZmljZVBob25lXSxcbiAgICBob21lUGhvbmU6IGdlY29zW0dFQ09TX0lOREVYLmhvbWVQaG9uZV0sXG4gICAgY29udGFjdDogZ2Vjb3NbR0VDT1NfSU5ERVguY29udGFjdF0sXG4gIH1cbn1cblxuZnVuY3Rpb24gcGFyc2VQYXNzd2QoY29udGVudDogc3RyaW5nKTogUGFzc3dkUmVjb3JkW10ge1xuICBjb25zdCByZWNvcmRTdHJpbmdMaXN0ID0gY29udGVudC5zcGxpdCgnXFxuJylcblxuICByZXR1cm4gcmVjb3JkU3RyaW5nTGlzdFxuICAgIC5maWx0ZXIoKHJlY29yZFN0cmluZykgPT4ge1xuICAgICAgcmV0dXJuIHR5cGVvZiByZWNvcmRTdHJpbmcgPT09ICdzdHJpbmcnICYmIHJlY29yZFN0cmluZy5sZW5ndGggPiAwXG4gICAgfSlcbiAgICAubWFwKCh1KSA9PiB7XG4gICAgICBjb25zdCB1c2VyID0gdS5zcGxpdCgnOicpXG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHVzZXJuYW1lOiB1c2VyW1BBU1NXRF9JTkRFWC51c2VybmFtZV0sXG4gICAgICAgIHVpZDogTnVtYmVyKHVzZXJbUEFTU1dEX0lOREVYLnVpZF0pLFxuICAgICAgICBnaWQ6IE51bWJlcih1c2VyW1BBU1NXRF9JTkRFWC5naWRdKSxcbiAgICAgICAgZ2Vjb3M6IHBhcnNlR2Vjb3ModXNlcltQQVNTV0RfSU5ERVguZ2Vjb3NdKSxcbiAgICAgICAgaG9tZTogdXNlcltQQVNTV0RfSU5ERVguaG9tZV0sXG4gICAgICAgIHNoZWxsOiB1c2VyW1BBU1NXRF9JTkRFWC5zaGVsbF0sXG4gICAgICB9XG4gICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEF2YWlsYWJsZVVzZXJzKCk6IFBhc3N3ZFJlY29yZFtdIHtcbiAgcmV0dXJuIHBhcnNlUGFzc3dkKHJlYWRGaWxlKCcvZXRjL3Bhc3N3ZCcpKVxuICAgIC5maWx0ZXIoKHUpID0+IHtcbiAgICAgIHJldHVybiB1LnVpZCA+PSAxMDAwICYmIHUudXNlcm5hbWUgIT09ICdub2JvZHknXG4gICAgfSlcbn1cbiIsICJpbXBvcnQgeyBHZGsgfSBmcm9tICdhZ3MvZ3RrNCdcbmltcG9ydCBHaW8gZnJvbSAnZ2k6Ly9HaW8nXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbWFnZVBhaW5pdGFibGUoZmlsZVBhdGg6IHN0cmluZyk6IEdkay5UZXh0dXJlIHwgdW5kZWZpbmVkIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBmaWxlID0gR2lvLkZpbGUubmV3X2Zvcl9wYXRoKGZpbGVQYXRoKVxuICAgIHJldHVybiBHZGsuVGV4dHVyZS5uZXdfZnJvbV9maWxlKGZpbGUpXG4gIH1cbiAgY2F0Y2gge1xuICAgIHJldHVyblxuICB9XG59XG4iLCAiaW1wb3J0IHsgUGFzc3dkUmVjb3JkIH0gZnJvbSAnQHByb3ZpZGVycy91c2VycydcbmltcG9ydCB7IGNyZWF0ZUltYWdlUGFpbml0YWJsZSB9IGZyb20gJ0B1dGlscy9jcmVhdGVJbWFnZVBhaW5pdGFibGUnXG5cbmltcG9ydCB7IFVzZXJMaXN0SXRlbSB9IGZyb20gJy4vdHlwZXMnXG5cbmNvbnN0IGNyZWF0ZVVzZXJMaXN0SXRlbSA9IChwYXNzd2RSZWNvcmQ6IFBhc3N3ZFJlY29yZCk6IFVzZXJMaXN0SXRlbSA9PiB7XG4gIHJldHVybiB7XG4gICAgdXNlck5hbWU6IHBhc3N3ZFJlY29yZC51c2VybmFtZSxcbiAgICByZWFsTmFtZTogcGFzc3dkUmVjb3JkLmdlY29zLmZ1bGxuYW1lLmxlbmd0aCA+IDAgPyBwYXNzd2RSZWNvcmQuZ2Vjb3MuZnVsbG5hbWUgOiBwYXNzd2RSZWNvcmQudXNlcm5hbWUsXG4gICAgdXNlclBpY3R1cmU6IGNyZWF0ZUltYWdlUGFpbml0YWJsZShgL3Zhci9saWIvQWNjb3VudHNTZXJ2aWNlL2ljb25zLyR7cGFzc3dkUmVjb3JkLnVzZXJuYW1lfWApIHx8IGNyZWF0ZUltYWdlUGFpbml0YWJsZShgL2hvbWUvJHtwYXNzd2RSZWNvcmQudXNlcm5hbWV9Ly5mYWNlYCksXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVVzZXJMaXN0ID0gKHBhc3N3ZFJlY29yZExpc3Q6IFBhc3N3ZFJlY29yZFtdKTogVXNlckxpc3RJdGVtW10gPT4ge1xuICByZXR1cm4gcGFzc3dkUmVjb3JkTGlzdC5tYXAoY3JlYXRlVXNlckxpc3RJdGVtKVxufVxuIiwgImltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVDb21wdXRlZCwgY3JlYXRlU3RhdGUgfSBmcm9tICdhZ3MnXG5cbmltcG9ydCB7IGdldEF2YWlsYWJsZVVzZXJzIH0gZnJvbSAnQHByb3ZpZGVycy91c2VycydcbmltcG9ydCB7IHVzZUxvZ2luU3RvcmFnZVNlcnZpY2UgfSBmcm9tICdAc2VydmljZXMvTG9naW5TdG9yYWdlU2VydmljZSdcbmltcG9ydCB7IExvZ2luU3RvcmFnZVJlY29yZCB9IGZyb20gJ0BzZXJ2aWNlcy9Mb2dpblN0b3JhZ2VTZXJ2aWNlL3R5cGVzJ1xuXG5pbXBvcnQgeyBjcmVhdGVVc2VyTGlzdCB9IGZyb20gJy4vY3JlYXRlVXNlckxpc3QnXG5pbXBvcnQgeyBVc2VyTGlzdEl0ZW0gfSBmcm9tICcuL3R5cGVzJ1xuXG5jb25zdCBbdXNlckxpc3QsIHNldFVzZXJMaXN0XSA9IGNyZWF0ZVN0YXRlPFVzZXJMaXN0SXRlbVtdPihbXSlcbmNvbnN0IFtzZWxlY3RlZFVzZXJJbmRleCwgc2V0U2VsZWN0ZWRVc2VySW5kZXhdID0gY3JlYXRlU3RhdGU8bnVtYmVyPigtMSlcblxuY29uc3Qgc2VsZWN0ZWRVc2VyID0gc2VsZWN0ZWRVc2VySW5kZXgoaW5kZXggPT4gdXNlckxpc3QuZ2V0KClbaW5kZXhdKVxuY29uc3Qgc2VsZWN0ZWRVc2VyTmFtZSA9IGNyZWF0ZUNvbXB1dGVkKFtzZWxlY3RlZFVzZXJdLCAodXNlcikgPT4ge1xuICByZXR1cm4gdXNlci51c2VyTmFtZVxufSlcblxuY29uc3Qgc2V0U2VsZWN0ZWRVc2VySW5kZXhCeVVzZXJOYW1lID0gKHVzZXJOYW1lOiBzdHJpbmcpID0+IHtcbiAgY29uc3QgaW5kZXggPSB1c2VyTGlzdC5nZXQoKS5maW5kSW5kZXgodXNlciA9PiB1c2VyLnVzZXJOYW1lID09PSB1c2VyTmFtZSlcbiAgc2V0U2VsZWN0ZWRVc2VySW5kZXgoaW5kZXggPj0gMCA/IGluZGV4IDogMClcbn1cblxuY29uc3QgZ2V0Q2FzaGVkU2Vzc2lvbkJ5VXNlciA9IChjYWNoZWRMb2dpblN0b3JhZ2VSZWNvcmQ6IEFjY2Vzc29yPExvZ2luU3RvcmFnZVJlY29yZCB8IG51bGw+KSA9PiB7XG4gIHJldHVybiBjYWNoZWRMb2dpblN0b3JhZ2VSZWNvcmQuZ2V0KCk/LnVzZXJcbn1cblxuY29uc3QgdXNlVXNlckxpc3RTZXJ2aWNlID0gKCkgPT4ge1xuICBjb25zdCB7IGNhY2hlZExvZ2luU3RvcmFnZVJlY29yZCB9ID0gdXNlTG9naW5TdG9yYWdlU2VydmljZSgpXG4gIGlmICh1c2VyTGlzdC5nZXQoKS5sZW5ndGggPT09IDApIHtcbiAgICBzZXRVc2VyTGlzdChjcmVhdGVVc2VyTGlzdChnZXRBdmFpbGFibGVVc2VycygpKSlcbiAgfVxuXG4gIC8vIFRPRE86IGZpbGwgZnJvbSBhY3RpdmUgc2Vzc2lvblxuICBjb25zdCBhY3RpdmVVc2VyTmFtZVN0cmluZzogc3RyaW5nIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkXG4gIGNvbnN0IHNlbGVjdGVkVXNlck5hbWVTdHJpbmc6IHN0cmluZyB8IHVuZGVmaW5lZCA9IGdldENhc2hlZFNlc3Npb25CeVVzZXIoY2FjaGVkTG9naW5TdG9yYWdlUmVjb3JkKVxuXG4gIGlmIChhY3RpdmVVc2VyTmFtZVN0cmluZyAmJiBzZWxlY3RlZFVzZXJJbmRleC5nZXQoKSA8IDApIHtcbiAgICBzZXRTZWxlY3RlZFVzZXJJbmRleEJ5VXNlck5hbWUoYWN0aXZlVXNlck5hbWVTdHJpbmcpXG4gIH1cbiAgZWxzZSBpZiAoc2VsZWN0ZWRVc2VyTmFtZVN0cmluZyAmJiBzZWxlY3RlZFVzZXJJbmRleC5nZXQoKSA8IDApIHtcbiAgICBzZXRTZWxlY3RlZFVzZXJJbmRleEJ5VXNlck5hbWUoc2VsZWN0ZWRVc2VyTmFtZVN0cmluZylcbiAgfVxuICBlbHNlIGlmIChzZWxlY3RlZFVzZXJJbmRleC5nZXQoKSA8IDApIHtcbiAgICBzZXRTZWxlY3RlZFVzZXJJbmRleCgwKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB1c2VyTGlzdCxcbiAgICBzZWxlY3RlZFVzZXIsXG4gICAgc2VsZWN0ZWRVc2VySW5kZXgsXG4gICAgc2VsZWN0ZWRVc2VyTmFtZSxcbiAgICBzZXRTZWxlY3RlZFVzZXJJbmRleCxcbiAgfVxufVxuXG5leHBvcnQge1xuICB1c2VVc2VyTGlzdFNlcnZpY2UsXG59XG4iLCAiaW1wb3J0IEdpbyBmcm9tICdnaTovL0dpbydcbmltcG9ydCBHTGliIGZyb20gJ2dpOi8vR0xpYidcblxuaW1wb3J0IHsgZ2V0RXJyb3JNZXNzYWdlIH0gZnJvbSAnQGxpYnMvbG9nJ1xuXG5leHBvcnQgaW50ZXJmYWNlIERlc2t0b3BGaWxlSW5mbyB7XG4gIGZpbGVuYW1lOiBzdHJpbmdcbiAgcGF0aDogc3RyaW5nXG4gIHR5cGU6ICd3YXlsYW5kJyB8ICd4MTEnXG4gIG5hbWU6IHN0cmluZyB8IG51bGxcbiAgZXhlYzogc3RyaW5nIHwgbnVsbFxuICBjb21tZW50OiBzdHJpbmcgfCBudWxsXG59XG5cbmNvbnN0IGRpcmVjdG9yaWVzOiBzdHJpbmdbXSA9IFtcbiAgJy91c3Ivc2hhcmUvd2F5bGFuZC1zZXNzaW9ucycsXG4gICcvdXNyL3NoYXJlL3hzZXNzaW9ucycsXG5dXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRBdmFpbGFibGVTZXNzaW9ucygpOiBEZXNrdG9wRmlsZUluZm9bXSB7XG4gIGNvbnN0IHNlc3Npb25zOiBEZXNrdG9wRmlsZUluZm9bXSA9IFtdXG5cbiAgZGlyZWN0b3JpZXMuZm9yRWFjaCgoZGlyUGF0aCkgPT4ge1xuICAgIGNvbnN0IGRpciA9IEdpby5GaWxlLm5ld19mb3JfcGF0aChkaXJQYXRoKVxuICAgIHRyeSB7XG4gICAgICBpZiAoIWRpci5xdWVyeV9leGlzdHMobnVsbCkpIHtcbiAgICAgICAgY29uc29sZS5sb2coYERpcmVjdG9yeSAke2RpclBhdGh9IGRvZXMgbm90IGV4aXN0LiBTa2lwcGluZy5gKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgY29uc3QgZW51bWVyYXRvciA9IGRpci5lbnVtZXJhdGVfY2hpbGRyZW4oXG4gICAgICAgICdzdGFuZGFyZDo6bmFtZSxzdGFuZGFyZDo6dHlwZScsXG4gICAgICAgIEdpby5GaWxlUXVlcnlJbmZvRmxhZ3MuTk9ORSxcbiAgICAgICAgbnVsbCxcbiAgICAgIClcblxuICAgICAgbGV0IGZpbGVJbmZvXG4gICAgICB3aGlsZSAoKGZpbGVJbmZvID0gZW51bWVyYXRvci5uZXh0X2ZpbGUobnVsbCkpICE9PSBudWxsKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBmaWxlSW5mby5nZXRfbmFtZSgpXG4gICAgICAgIGlmIChuYW1lLmVuZHNXaXRoKCcuZGVza3RvcCcpKSB7XG4gICAgICAgICAgY29uc3QgZmlsZSA9IGRpci5nZXRfY2hpbGQobmFtZSlcbiAgICAgICAgICBjb25zdCBrZXlGaWxlID0gbmV3IEdMaWIuS2V5RmlsZSgpXG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAga2V5RmlsZS5sb2FkX2Zyb21fZmlsZShmaWxlLmdldF9wYXRoKCkhLCBHTGliLktleUZpbGVGbGFncy5LRUVQX1RSQU5TTEFUSU9OUylcblxuICAgICAgICAgICAgY29uc3Qgc2Vzc2lvbkluZm86IERlc2t0b3BGaWxlSW5mbyA9IHtcbiAgICAgICAgICAgICAgZmlsZW5hbWU6IG5hbWUsXG4gICAgICAgICAgICAgIHBhdGg6IGZpbGUuZ2V0X3BhdGgoKSEsXG4gICAgICAgICAgICAgIHR5cGU6IGRpclBhdGguaW5jbHVkZXMoJ3dheWxhbmQnKSA/ICd3YXlsYW5kJyA6ICd4MTEnLFxuICAgICAgICAgICAgICBuYW1lOiBudWxsLFxuICAgICAgICAgICAgICBleGVjOiBudWxsLFxuICAgICAgICAgICAgICBjb21tZW50OiBudWxsLFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBzZXNzaW9uSW5mby5uYW1lID0ga2V5RmlsZS5nZXRfbG9jYWxlX3N0cmluZygnRGVza3RvcCBFbnRyeScsICdOYW1lJywgbnVsbClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgICAgc2Vzc2lvbkluZm8ubmFtZSA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIHNlc3Npb25JbmZvLmV4ZWMgPSBrZXlGaWxlLmdldF9zdHJpbmcoJ0Rlc2t0b3AgRW50cnknLCAnRXhlYycpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICAgIHNlc3Npb25JbmZvLmV4ZWMgPSBudWxsXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBzZXNzaW9uSW5mby5jb21tZW50ID0ga2V5RmlsZS5nZXRfbG9jYWxlX3N0cmluZygnRGVza3RvcCBFbnRyeScsICdDb21tZW50JywgbnVsbClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgICAgc2Vzc2lvbkluZm8uY29tbWVudCA9IG51bGxcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2Vzc2lvbnMucHVzaChzZXNzaW9uSW5mbylcbiAgICAgICAgICB9XG4gICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihgRXJyb3IgbG9hZGluZyBmaWxlICR7bmFtZX06ICR7Z2V0RXJyb3JNZXNzYWdlKGUpfWApXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbnVtZXJhdG9yLmNsb3NlKG51bGwpXG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLndhcm4oYEVycm9yIGFjY2Vzc2luZyBkaXJlY3RvcnkgJHtkaXJQYXRofTogJHtnZXRFcnJvck1lc3NhZ2UoZSl9YClcbiAgICB9XG4gIH0pXG5cbiAgcmV0dXJuIHNlc3Npb25zXG59XG4iLCAiaW1wb3J0IHsgRGVza3RvcEZpbGVJbmZvLCBnZXRBdmFpbGFibGVTZXNzaW9ucyB9IGZyb20gJ0Bwcm92aWRlcnMvc2Vzc2lvbnMnXG5cbmV4cG9ydCBjb25zdCBjcmVhdGVTZXNzaW9uTGlzdCA9ICgpOiBEZXNrdG9wRmlsZUluZm9bXSA9PiB7XG4gIGNvbnN0IHNlc3Npb25MaXN0ID0gZ2V0QXZhaWxhYmxlU2Vzc2lvbnMoKVxuICBjb25zdCBuYW1lQ291bnQgPSBzZXNzaW9uTGlzdFxuICAgIC5yZWR1Y2UoKGFjYywgaXRlbSkgPT4ge1xuICAgICAgaWYgKGl0ZW0ubmFtZSkge1xuICAgICAgICBhY2NbaXRlbS5uYW1lXSA9IChhY2NbaXRlbS5uYW1lXSB8fCAwKSArIDFcbiAgICAgIH1cbiAgICAgIHJldHVybiBhY2NcbiAgICB9LCB7fSBhcyBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+LFxuICAgIClcblxuICByZXR1cm4gc2Vzc2lvbkxpc3RcbiAgICAuZmlsdGVyKGl0ZW0gPT4gaXRlbS5uYW1lICYmIG5hbWVDb3VudFtpdGVtLm5hbWVdID09PSAxKVxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm5hbWUgJiYgYi5uYW1lID8gYS5uYW1lLmxvY2FsZUNvbXBhcmUoYi5uYW1lKSA6IC0xKVxufVxuIiwgImltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVTdGF0ZSB9IGZyb20gJ2FncydcblxuaW1wb3J0IHsgY3JlYXRlRGlzcG9zZU1hbmFnZXIgfSBmcm9tICdAbGlicy9nbmltLWV4dGVuc2lvbnMnXG5pbXBvcnQgeyB0eXBlIERlc2t0b3BGaWxlSW5mbyB9IGZyb20gJ0Bwcm92aWRlcnMvc2Vzc2lvbnMnXG5pbXBvcnQgeyB1c2VMb2dpblN0b3JhZ2VTZXJ2aWNlIH0gZnJvbSAnQHNlcnZpY2VzL0xvZ2luU3RvcmFnZVNlcnZpY2UnXG5pbXBvcnQgeyBMb2dpblN0b3JhZ2VSZWNvcmQgfSBmcm9tICdAc2VydmljZXMvTG9naW5TdG9yYWdlU2VydmljZS90eXBlcydcbmltcG9ydCB7IHVzZVVzZXJMaXN0U2VydmljZSB9IGZyb20gJ0BzZXJ2aWNlcy9Vc2VyTGlzdFNlcnZpY2UnXG5pbXBvcnQgeyBVc2VyTGlzdEl0ZW0gfSBmcm9tICdAc2VydmljZXMvVXNlckxpc3RTZXJ2aWNlL3R5cGVzJ1xuXG5pbXBvcnQgeyBjcmVhdGVTZXNzaW9uTGlzdCB9IGZyb20gJy4vY3JlYXRlU2Vzc2lvbkxpc3QnXG5cbmNvbnN0IFtzZXNzaW9uTGlzdCwgc2V0U2Vzc2lvbkxpc3RdID0gY3JlYXRlU3RhdGU8RGVza3RvcEZpbGVJbmZvW10+KFtdKVxuY29uc3QgW3NlbGVjdGVkU2Vzc2lvbkluZGV4LCBzZXRTZWxlY3RlZFNlc3Npb25JbmRleF0gPSBjcmVhdGVTdGF0ZTxudW1iZXI+KC0xKVxuXG5jb25zdCBzZWxlY3RlZFNlc3Npb24gPSBzZWxlY3RlZFNlc3Npb25JbmRleChpbmRleCA9PiBzZXNzaW9uTGlzdC5nZXQoKVtpbmRleF0pXG5cbmNvbnN0IHNldFNlbGVjdGVkU2Vzc2lvbkluZGV4QnlQYXRoID0gKHBhdGg6IHN0cmluZykgPT4ge1xuICBjb25zdCBpbmRleCA9IHNlc3Npb25MaXN0LmdldCgpLmZpbmRJbmRleChzZXNzaW9uID0+IHNlc3Npb24ucGF0aCA9PT0gcGF0aClcblxuICBzZXRTZWxlY3RlZFNlc3Npb25JbmRleChpbmRleCA+PSAwID8gaW5kZXggOiAwKVxufVxuXG5jb25zdCBnZXRDYXNoZWRTZXNzaW9uQnlVc2VyID0gKGNhY2hlZExvZ2luU3RvcmFnZVJlY29yZDogQWNjZXNzb3I8TG9naW5TdG9yYWdlUmVjb3JkIHwgbnVsbD4sXG4gIHNlbGVjdGVkVXNlcjogQWNjZXNzb3I8VXNlckxpc3RJdGVtPixcbikgPT4ge1xuICBjb25zdCBzZXNzaW9ucyA9IGNhY2hlZExvZ2luU3RvcmFnZVJlY29yZC5nZXQoKT8uc2Vzc2lvbnNcbiAgY29uc3QgdXNlck5hbWUgPSBzZWxlY3RlZFVzZXIuZ2V0KCkudXNlck5hbWVcbiAgcmV0dXJuIHNlc3Npb25zICYmIHNlc3Npb25zW3VzZXJOYW1lXVxufVxuXG5jb25zdCB1c2VTZXNzaW9uTGlzdFNlcnZpY2UgPSAoKSA9PiB7XG4gIGNvbnN0IFtkaXNwb3NlcywgZGlzcG9zZVNlc3Npb25MaXN0U2VydmljZV0gPSBjcmVhdGVEaXNwb3NlTWFuYWdlcigpXG4gIGNvbnN0IHsgY2FjaGVkTG9naW5TdG9yYWdlUmVjb3JkIH0gPSB1c2VMb2dpblN0b3JhZ2VTZXJ2aWNlKClcbiAgY29uc3QgeyBzZWxlY3RlZFVzZXIgfSA9IHVzZVVzZXJMaXN0U2VydmljZSgpXG4gIGlmIChzZXNzaW9uTGlzdC5nZXQoKS5sZW5ndGggPT09IDApIHtcbiAgICBzZXRTZXNzaW9uTGlzdChjcmVhdGVTZXNzaW9uTGlzdCgpKVxuICB9XG5cbiAgLy8gVE9ETzogZmlsbCBmcm9tIGFjdGl2ZSBzZXNzaW9uXG4gIGNvbnN0IGFjdGl2ZVNlc3Npb25SZWNvcmQ6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZFxuICBjb25zdCBzZWxlY3RlZFNlc3Npb25SZWNvcmQ6IHN0cmluZyB8IHVuZGVmaW5lZCA9IGdldENhc2hlZFNlc3Npb25CeVVzZXIoY2FjaGVkTG9naW5TdG9yYWdlUmVjb3JkLCBzZWxlY3RlZFVzZXIpXG5cbiAgaWYgKGFjdGl2ZVNlc3Npb25SZWNvcmQgJiYgc2VsZWN0ZWRTZXNzaW9uSW5kZXguZ2V0KCkgPCAwKSB7XG4gICAgc2V0U2VsZWN0ZWRTZXNzaW9uSW5kZXhCeVBhdGgoYWN0aXZlU2Vzc2lvblJlY29yZClcbiAgfVxuICBlbHNlIGlmIChzZWxlY3RlZFNlc3Npb25SZWNvcmQgJiYgc2VsZWN0ZWRTZXNzaW9uSW5kZXguZ2V0KCkgPCAwKSB7XG4gICAgc2V0U2VsZWN0ZWRTZXNzaW9uSW5kZXhCeVBhdGgoc2VsZWN0ZWRTZXNzaW9uUmVjb3JkKVxuICB9XG4gIGVsc2UgaWYgKHNlbGVjdGVkU2Vzc2lvbkluZGV4LmdldCgpIDwgMCkge1xuICAgIHNldFNlbGVjdGVkU2Vzc2lvbkluZGV4KDApXG4gIH1cblxuICBkaXNwb3Nlcy5wdXNoKHNlbGVjdGVkVXNlci5zdWJzY3JpYmUoKCkgPT4ge1xuICAgIGNvbnN0IHVzZXIgPSBzZWxlY3RlZFVzZXIuZ2V0KClcbiAgICBjb25zdCBsb2dpbkNhY2hlID0gY2FjaGVkTG9naW5TdG9yYWdlUmVjb3JkLmdldCgpXG4gICAgY29uc3QgY2FjaGVkU2Vzc2lvblBhdGggPSBsb2dpbkNhY2hlICYmIGxvZ2luQ2FjaGUuc2Vzc2lvbnNbdXNlci51c2VyTmFtZV1cblxuICAgIGlmIChjYWNoZWRTZXNzaW9uUGF0aCkge1xuICAgICAgc2V0U2VsZWN0ZWRTZXNzaW9uSW5kZXhCeVBhdGgoY2FjaGVkU2Vzc2lvblBhdGgpXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgc2V0U2VsZWN0ZWRTZXNzaW9uSW5kZXgoMClcbiAgICB9XG4gIH0pKVxuXG4gIHJldHVybiB7XG4gICAgc2Vzc2lvbkxpc3QsXG4gICAgc2VsZWN0ZWRTZXNzaW9uLFxuICAgIHNlbGVjdGVkU2Vzc2lvbkluZGV4LFxuICAgIHNldFNlbGVjdGVkU2Vzc2lvbkluZGV4LFxuICAgIGRpc3Bvc2VTZXNzaW9uTGlzdFNlcnZpY2UsXG4gIH1cbn1cblxuZXhwb3J0IHtcbiAgdXNlU2Vzc2lvbkxpc3RTZXJ2aWNlLFxufVxuIiwgImltcG9ydCB7IGNyZWF0ZVN0YXRlIH0gZnJvbSAnYWdzJ1xuXG5pbXBvcnQgeyByZWFkTG9naW5TdG9yYWdlU3RhdGUgfSBmcm9tICcuL3JlYWRMb2dpblN0b3JhZ2VTdGF0ZSdcbmltcG9ydCB7IHR5cGUgTG9naW5TdG9yYWdlUmVjb3JkIH0gZnJvbSAnLi90eXBlcydcbmltcG9ydCB7IHdyaXRlTG9naW5TdG9yYWdlU3RhdGUgfSBmcm9tICcuL3dyaXRlTG9naW5TdG9yYWdlU3RhdGUnXG5cbmNvbnN0IFtjYWNoZWRMb2dpblN0b3JhZ2VSZWNvcmQsIHNldENhY2hlZExvZ2luU3RvcmFnZVJlY29yZF0gPSBjcmVhdGVTdGF0ZTxMb2dpblN0b3JhZ2VSZWNvcmQgfCBudWxsPihudWxsKVxuXG5jb25zdCB1c2VMb2dpblN0b3JhZ2VTZXJ2aWNlID0gKCkgPT4ge1xuICBpZiAoY2FjaGVkTG9naW5TdG9yYWdlUmVjb3JkLmdldCgpID09PSBudWxsKSB7XG4gICAgc2V0Q2FjaGVkTG9naW5TdG9yYWdlUmVjb3JkKHJlYWRMb2dpblN0b3JhZ2VTdGF0ZSgpKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBjYWNoZWRMb2dpblN0b3JhZ2VSZWNvcmQsXG4gIH1cbn1cblxuZXhwb3J0IHtcbiAgdXNlTG9naW5TdG9yYWdlU2VydmljZSxcbiAgd3JpdGVMb2dpblN0b3JhZ2VTdGF0ZSxcbn1cbiIsICJpbXBvcnQgeyBjcmVhdGVDb21wdXRlZCB9IGZyb20gJ2FncydcbmltcG9ydCBhcHAgZnJvbSAnYWdzL2d0azQvYXBwJ1xuaW1wb3J0IHsgdGltZW91dCB9IGZyb20gJ2Fncy90aW1lJ1xuXG5pbXBvcnQgeyBjcmVhdGVDb21wdXRlZE1hcCB9IGZyb20gJ0BsaWJzL2duaW0tZXh0ZW5zaW9ucydcbmltcG9ydCB7IEdyZWV0ZElQQyB9IGZyb20gJ0BsaWJzL2dyZWV0ZC1pcGMnXG5pbXBvcnQgeyB1c2VQYW1GYWlsbG9ja0NvbmYgfSBmcm9tICdAcHJvdmlkZXJzL3BhbS1mYWlsbG9jaydcbmltcG9ydCB7IHVzZUxvZ2dlciB9IGZyb20gJ0BzZXJ2aWNlcy9Mb2dnZXJTZXJ2aWNlJ1xuaW1wb3J0IHsgd3JpdGVMb2dpblN0b3JhZ2VTdGF0ZSB9IGZyb20gJ0BzZXJ2aWNlcy9Mb2dpblN0b3JhZ2VTZXJ2aWNlJ1xuaW1wb3J0IHsgdXNlU2Vzc2lvbkxpc3RTZXJ2aWNlIH0gZnJvbSAnQHNlcnZpY2VzL1Nlc3Npb25MaXN0U2VydmljZSdcbmltcG9ydCB7IHVzZVNlc3Npb25NYW5hZ2VyU2NyZWVuU2VydmljZSB9IGZyb20gJ0BzZXJ2aWNlcy9TZXNzaW9uTWFuYWdlclNjcmVlblNlcnZpY2UnXG5pbXBvcnQgeyB1c2VVc2VyTGlzdFNlcnZpY2UgfSBmcm9tICdAc2VydmljZXMvVXNlckxpc3RTZXJ2aWNlJ1xuXG5jb25zdCBwYW1Db25maWcgPSB1c2VQYW1GYWlsbG9ja0NvbmYoKVxuXG5jb25zdCB7IHVzZXJMaXN0LCBzZWxlY3RlZFVzZXJOYW1lIH0gPSB1c2VVc2VyTGlzdFNlcnZpY2UoKVxuY29uc3QgeyBzZXRXaW5kb3dWaXNpYmxlIH0gPSB1c2VTZXNzaW9uTWFuYWdlclNjcmVlblNlcnZpY2UoKVxuY29uc3Qga2V5cyA9IGNyZWF0ZUNvbXB1dGVkKFt1c2VyTGlzdF0sICh1c2VycykgPT4ge1xuICByZXR1cm4gdXNlcnMubWFwKHVzZXIgPT4gdXNlci51c2VyTmFtZSlcbn0pXG5jb25zdCB7IGFjY2Vzc29yOiBpc0xvZ2dpbmdJbiwgc2V0OiBzZXRJc0xvZ2dpbmdJbiB9ID0gY3JlYXRlQ29tcHV0ZWRNYXA8Ym9vbGVhbj4oa2V5cywgc2VsZWN0ZWRVc2VyTmFtZSwgZmFsc2UpXG5jb25zdCB7IGFjY2Vzc29yOiBpc0xvZ2dpbkVycm9yLCBzZXQ6IHNldElzTG9naW5FcnJvciB9ID0gY3JlYXRlQ29tcHV0ZWRNYXA8Ym9vbGVhbj4oa2V5cywgc2VsZWN0ZWRVc2VyTmFtZSwgZmFsc2UpXG5jb25zdCB7IGFjY2Vzc29yOiByZW1haW5pbmdBdHRlbXB0cywgc2V0OiBzZXRSZW1haW5pbmdBdHRlbXB0cyB9ID0gY3JlYXRlQ29tcHV0ZWRNYXA8bnVtYmVyPihrZXlzLCBzZWxlY3RlZFVzZXJOYW1lLCBwYW1Db25maWcuZGVueSlcbmNvbnN0IHsgYWNjZXNzb3I6IHVubG9ja0luU2Vjb25kcywgc2V0OiBzZXRVbmxvY2tJblNlY29uZHMgfSA9IGNyZWF0ZUNvbXB1dGVkTWFwPG51bWJlcj4oa2V5cywgc2VsZWN0ZWRVc2VyTmFtZSwgcGFtQ29uZmlnLnVubG9ja190aW1lKVxuY29uc3QgeyBhY2Nlc3NvcjogZnJhY3Rpb24sIHNldDogc2V0RnJhY3Rpb24gfSA9IGNyZWF0ZUNvbXB1dGVkTWFwPG51bWJlcj4oa2V5cywgc2VsZWN0ZWRVc2VyTmFtZSwgMClcbmNvbnN0IGlzTG9ja2VkT3V0ID0gY3JlYXRlQ29tcHV0ZWQoW3JlbWFpbmluZ0F0dGVtcHRzXSwgKGF0dGVtcHRzKSA9PiB7XG4gIHJldHVybiBhdHRlbXB0cyA9PT0gMFxufSlcbmNvbnN0IGlzV2FpdGluZyA9IGNyZWF0ZUNvbXB1dGVkKFtpc0xvZ2dpbmdJbiwgaXNMb2NrZWRPdXRdLCAoaXNMb2dnaW5nSW5WYWx1ZSwgaXNMb2NrZWRPdXRWYWx1ZSkgPT4ge1xuICByZXR1cm4gaXNMb2dnaW5nSW5WYWx1ZSB8fCBpc0xvY2tlZE91dFZhbHVlXG59KVxuXG5jb25zdCByZXNldEVycm9yID0gKGluZGV4Pzogc3RyaW5nKSA9PiB7XG4gIHNldElzTG9naW5FcnJvcihmYWxzZSwgaW5kZXgpXG59XG5jb25zdCByZXNldFJlbWFpbmluZ0F0dGVtcHRzID0gKGluZGV4Pzogc3RyaW5nKSA9PiB7XG4gIHNldFJlbWFpbmluZ0F0dGVtcHRzKHBhbUNvbmZpZy5kZW55LCBpbmRleClcbiAgcmVzZXRFcnJvcihpbmRleClcbn1cbmNvbnN0IGJlZm9yZUxvZ2luID0gKGluZGV4OiBzdHJpbmcpID0+IHtcbiAgc2V0SXNMb2dpbkVycm9yKGZhbHNlLCBpbmRleClcbiAgc2V0SXNMb2dnaW5nSW4odHJ1ZSwgaW5kZXgpXG59XG5jb25zdCBvbkxvZ2luRmFpbGVkID0gKGluZGV4OiBzdHJpbmcsIGF0dGVtcHRzOiBudW1iZXIpID0+IHtcbiAgc2V0SXNMb2dpbkVycm9yKHRydWUsIGluZGV4KVxuICBzZXRJc0xvZ2dpbmdJbihmYWxzZSwgaW5kZXgpXG4gIHNldFJlbWFpbmluZ0F0dGVtcHRzKGF0dGVtcHRzLCBpbmRleClcbn1cbmNvbnN0IGxvZ2luID0gYXN5bmMgKHBhc3N3b3JkOiBzdHJpbmcpID0+IHtcbiAgY29uc3QgeyBsb2dnZXIgfSA9IHVzZUxvZ2dlcigpXG4gIGNvbnN0IHNlbGVjdGVkVXNlck5hbWVWYWx1ZSA9IHNlbGVjdGVkVXNlck5hbWUuZ2V0KClcbiAgY29uc3QgY3VycmVudEF0dGVtcHRzID0gcmVtYWluaW5nQXR0ZW1wdHMuZ2V0KClcblxuICBpZiAoY3VycmVudEF0dGVtcHRzID4gMCkge1xuICAgIGJlZm9yZUxvZ2luKHNlbGVjdGVkVXNlck5hbWVWYWx1ZSlcbiAgICBjb25zdCB7IHNlbGVjdGVkVXNlciB9ID0gdXNlVXNlckxpc3RTZXJ2aWNlKClcbiAgICBjb25zdCB7IHNlbGVjdGVkU2Vzc2lvbiB9ID0gdXNlU2Vzc2lvbkxpc3RTZXJ2aWNlKClcblxuICAgIGNvbnN0IHVzZXJuYW1lID0gc2VsZWN0ZWRVc2VyLmdldCgpLnVzZXJOYW1lXG4gICAgY29uc3QgY29tbWFuZCA9IHNlbGVjdGVkU2Vzc2lvbi5nZXQoKS5leGVjXG5cbiAgICBpZiAodXNlcm5hbWUgJiYgY29tbWFuZCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgR3JlZXRkSVBDLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZCwgY29tbWFuZClcbiAgICAgICAgcmVzZXRSZW1haW5pbmdBdHRlbXB0cyhzZWxlY3RlZFVzZXJOYW1lVmFsdWUpXG4gICAgICAgIHdyaXRlTG9naW5TdG9yYWdlU3RhdGUoKVxuICAgICAgICB0aW1lb3V0KDUwMCwgKCkgPT4ge1xuICAgICAgICAgIHNldFdpbmRvd1Zpc2libGUoZmFsc2UpXG4gICAgICAgICAgdGltZW91dCg1MDAsICgpID0+IHtcbiAgICAgICAgICAgIGFwcC5xdWl0KDApXG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgb25Mb2dpbkZhaWxlZChzZWxlY3RlZFVzZXJOYW1lVmFsdWUsIGN1cnJlbnRBdHRlbXB0cyAtIDEpXG4gICAgICAgIGxvZ2dlci5lcnJvcihlcnIpXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmNvbnN0IHVzZUxvZ2luU2VydmljZSA9ICgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBpc0xvY2tlZE91dCxcbiAgICBpc0xvZ2dpbmdJbixcbiAgICBpc1dhaXRpbmcsXG4gICAgaXNMb2dnaW5FcnJvcixcbiAgICBmcmFjdGlvbixcbiAgICB1bmxvY2tJblNlY29uZHMsXG4gICAgcmVtYWluaW5nQXR0ZW1wdHMsXG4gICAgbG9naW4sXG4gICAgc2V0VW5sb2NrSW5TZWNvbmRzLFxuICAgIHNldEZyYWN0aW9uLFxuICAgIHJlc2V0UmVtYWluaW5nQXR0ZW1wdHMsXG4gICAgcmVzZXRFcnJvcixcbiAgfVxufVxuXG5leHBvcnQge1xuICB1c2VMb2dpblNlcnZpY2UsXG59XG4iLCAiaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IENDUHJvcHMgfSBmcm9tIFwiZ25pbVwiXG5pbXBvcnQgeyBpbnRyaW5zaWNFbGVtZW50cyB9IGZyb20gXCJnbmltL2d0azQvanN4LXJ1bnRpbWVcIlxuXG50eXBlIFByb3BzPFQgZXh0ZW5kcyBHdGsuV2lkZ2V0LCBQcm9wcz4gPSBDQ1Byb3BzPFQsIFBhcnRpYWw8UHJvcHM+PlxuXG5PYmplY3QuYXNzaWduKGludHJpbnNpY0VsZW1lbnRzLCB7XG4gICAgYm94OiBHdGsuQm94LFxuICAgIGJ1dHRvbjogR3RrLkJ1dHRvbixcbiAgICBjZW50ZXJib3g6IEd0ay5DZW50ZXJCb3gsXG4gICAgLy8gY2lyY3VsYXJwcm9ncmVzczogQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcyxcbiAgICBkcmF3aW5nYXJlYTogR3RrLkRyYXdpbmdBcmVhLFxuICAgIGVudHJ5OiBHdGsuRW50cnksXG4gICAgaW1hZ2U6IEd0ay5JbWFnZSxcbiAgICBsYWJlbDogR3RrLkxhYmVsLFxuICAgIGxldmVsYmFyOiBHdGsuTGV2ZWxCYXIsXG4gICAgbWVudWJ1dHRvbjogR3RrLk1lbnVCdXR0b24sXG4gICAgb3ZlcmxheTogR3RrLk92ZXJsYXksXG4gICAgcG9wb3ZlcjogR3RrLlBvcG92ZXIsXG4gICAgcmV2ZWFsZXI6IEd0ay5SZXZlYWxlcixcbiAgICBzY3JvbGxlZHdpbmRvdzogR3RrLlNjcm9sbGVkV2luZG93LFxuICAgIHNsaWRlcjogQXN0YWwuU2xpZGVyLFxuICAgIHN0YWNrOiBHdGsuU3RhY2ssXG4gICAgc3dpdGNoOiBHdGsuU3dpdGNoLFxuICAgIHRvZ2dsZWJ1dHRvbjogR3RrLlRvZ2dsZUJ1dHRvbixcbiAgICB3aW5kb3c6IEFzdGFsLldpbmRvdyxcbn0pXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIGJveDogUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgYnV0dG9uOiBQcm9wczxHdGsuQnV0dG9uLCBHdGsuQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBjZW50ZXJib3g6IFByb3BzPEd0ay5DZW50ZXJCb3gsIEd0ay5DZW50ZXJCb3guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IFByb3BzPEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsIEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGRyYXdpbmdhcmVhOiBQcm9wczxHdGsuRHJhd2luZ0FyZWEsIEd0ay5EcmF3aW5nQXJlYS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZW50cnk6IFByb3BzPEd0ay5FbnRyeSwgR3RrLkVudHJ5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBpbWFnZTogUHJvcHM8R3RrLkltYWdlLCBHdGsuSW1hZ2UuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGxhYmVsOiBQcm9wczxHdGsuTGFiZWwsIEd0ay5MYWJlbC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGV2ZWxiYXI6IFByb3BzPEd0ay5MZXZlbEJhciwgR3RrLkxldmVsQmFyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBtZW51YnV0dG9uOiBQcm9wczxHdGsuTWVudUJ1dHRvbiwgR3RrLk1lbnVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG92ZXJsYXk6IFByb3BzPEd0ay5PdmVybGF5LCBHdGsuT3ZlcmxheS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgcG9wb3ZlcjogUHJvcHM8R3RrLlBvcG92ZXIsIEd0ay5Qb3BvdmVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICByZXZlYWxlcjogUHJvcHM8R3RrLlJldmVhbGVyLCBHdGsuUmV2ZWFsZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHNjcm9sbGVkd2luZG93OiBQcm9wczxHdGsuU2Nyb2xsZWRXaW5kb3csIEd0ay5TY3JvbGxlZFdpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2xpZGVyOiBQcm9wczxBc3RhbC5TbGlkZXIsIEFzdGFsLlNsaWRlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc3RhY2s6IFByb3BzPEd0ay5TdGFjaywgR3RrLlN0YWNrLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzd2l0Y2g6IFByb3BzPEd0ay5Td2l0Y2gsIEd0ay5Td2l0Y2guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHRvZ2dsZWJ1dHRvbjogUHJvcHM8R3RrLlRvZ2dsZUJ1dHRvbiwgR3RrLlRvZ2dsZUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgd2luZG93OiBQcm9wczxBc3RhbC5XaW5kb3csIEFzdGFsLldpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgKiBmcm9tIFwiZ25pbS9ndGs0L2pzeC1ydW50aW1lXCJcbiIsICJpbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgeyBjb25maWd1ZSB9IGZyb20gXCIuLi9qc3gvZW52LmpzXCJcbmltcG9ydCB7IGdldFR5cGUsIG9uQ2xlYW51cCwgQWNjZXNzb3IsIEZyYWdtZW50IH0gZnJvbSBcIi4uL2luZGV4LmpzXCJcblxuaW1wb3J0IHR5cGUgQWR3IGZyb20gXCJnaTovL0Fkd1wiXG5jb25zdCBhZHcgPSBhd2FpdCBpbXBvcnQoXCJnaTovL0Fkd1wiKS50aGVuKChtKSA9PiBtLmRlZmF1bHQpLmNhdGNoKCgpID0+IG51bGwpXG5cbmNvbnN0IGR1bW15QnVpbGRlciA9IG5ldyBHdGsuQnVpbGRlcigpXG5cbmNvbnN0IHsgaW50cmluc2ljRWxlbWVudHMgfSA9IGNvbmZpZ3VlKHtcbiAgICBpbml0UHJvcHMoY3Rvcikge1xuICAgICAgICBpZiAoY3RvciA9PT0gR3RrLlN0YWNrKSB7XG4gICAgICAgICAgICBjb25zdCBrZXlzOiBBcnJheTxFeHRyYWN0PGtleW9mIEd0ay5TdGFjaywgc3RyaW5nPj4gPSBbXG4gICAgICAgICAgICAgICAgXCJ2aXNpYmxlQ2hpbGROYW1lXCIsXG4gICAgICAgICAgICAgICAgXCJ2aXNpYmxlX2NoaWxkX25hbWVcIixcbiAgICAgICAgICAgIF1cbiAgICAgICAgICAgIHJldHVybiBrZXlzXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFkdyAmJiBjdG9yID09PSBhZHcuVG9nZ2xlR3JvdXApIHtcbiAgICAgICAgICAgIGNvbnN0IGtleXM6IEFycmF5PEV4dHJhY3Q8a2V5b2YgQWR3LlRvZ2dsZUdyb3VwLCBzdHJpbmc+PiA9IFtcbiAgICAgICAgICAgICAgICBcImFjdGl2ZVwiLFxuICAgICAgICAgICAgICAgIFwiYWN0aXZlTmFtZVwiLFxuICAgICAgICAgICAgICAgIFwiYWN0aXZlX25hbWVcIixcbiAgICAgICAgICAgIF1cbiAgICAgICAgICAgIHJldHVybiBrZXlzXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHNldENzcyhvYmplY3QsIGNzcykge1xuICAgICAgICBpZiAoIShvYmplY3QgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUud2FybihFcnJvcihgY2Fubm90IHNldCBjc3Mgb24gJHtvYmplY3R9YCkpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjdHggPSBvYmplY3QuZ2V0X3N0eWxlX2NvbnRleHQoKVxuICAgICAgICBsZXQgcHJvdmlkZXI6IEd0ay5Dc3NQcm92aWRlclxuXG4gICAgICAgIGNvbnN0IHNldHRlciA9IChjc3M6IHN0cmluZykgPT4ge1xuICAgICAgICAgICAgaWYgKCFjc3MuaW5jbHVkZXMoXCJ7XCIpIHx8ICFjc3MuaW5jbHVkZXMoXCJ9XCIpKSB7XG4gICAgICAgICAgICAgICAgY3NzID0gYCogeyAke2Nzc30gfWBcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb3ZpZGVyKSBjdHgucmVtb3ZlX3Byb3ZpZGVyKHByb3ZpZGVyKVxuXG4gICAgICAgICAgICBwcm92aWRlciA9IG5ldyBHdGsuQ3NzUHJvdmlkZXIoKVxuICAgICAgICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3N0cmluZyhjc3MpXG4gICAgICAgICAgICBjdHguYWRkX3Byb3ZpZGVyKHByb3ZpZGVyLCBHdGsuU1RZTEVfUFJPVklERVJfUFJJT1JJVFlfVVNFUilcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjc3MgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgc2V0dGVyKGNzcy5nZXQoKSlcbiAgICAgICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBjc3Muc3Vic2NyaWJlKCgpID0+IHNldHRlcihjc3MuZ2V0KCkpKVxuICAgICAgICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXR0ZXIoY3NzKVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIHNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKSB7XG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNsYXNzTmFtZSBvbiAke29iamVjdH1gKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjbGFzc05hbWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgb2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKVxuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGNsYXNzTmFtZS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgKCkgPT4gKG9iamVjdC5jc3NDbGFzc2VzID0gY2xhc3NOYW1lLmdldCgpLnNwbGl0KC9cXHMrLykpLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvYmplY3Quc2V0X2Nzc19jbGFzc2VzKGNsYXNzTmFtZS5zcGxpdCgvXFxzKy8pKVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIHRleHROb2RlKHRleHQpIHtcbiAgICAgICAgcmV0dXJuIEd0ay5MYWJlbC5uZXcodGV4dC50b1N0cmluZygpKVxuICAgIH0sXG5cbiAgICAvLyBgc2V0X2NoaWxkYCBhbmQgZXNwZWNpYWxseSBgcmVtb3ZlYCBtaWdodCBiZSB3YXkgdG9vIGdlbmVyaWMgYW5kIHRoZXJlIG1pZ2h0XG4gICAgLy8gYmUgY2FzZXMgd2hlcmUgaXQgZG9lcyBub3QgYWN0dWFsbHkgZG8gd2hhdCB3ZSB3YW50IGl0IHRvIGRvXG4gICAgLy9cbiAgICAvLyBpZiB0aGVyZSBpcyBhIHVzZWNhc2UgZm9yIGVpdGhlciBvZiB0aGVzZSB0d28gdGhhdCBkb2VzIHNvbWV0aGluZyBlbHNlIHRoYW5cbiAgICAvLyB3ZSBleHBlY3QgaXQgdG8gZG8gaGVyZSBpbiBhIEpTWCBjb250ZXh0IHdlIGhhdmUgdG8gY2hlY2sgZm9yIGtub3duIGluc3RhbmNlc1xuICAgIHJlbW92ZUNoaWxkKHBhcmVudCwgY2hpbGQpIHtcbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQgJiYgY2hpbGQgaW5zdGFuY2VvZiBHdGsuRXZlbnRDb250cm9sbGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnJlbW92ZV9jb250cm9sbGVyKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFwic2V0X2NoaWxkXCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQuc2V0X2NoaWxkID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfY2hpbGQobnVsbClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcInJlbW92ZVwiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnJlbW92ZSA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQucmVtb3ZlKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaGlsZH0gZnJvbSAke3BhcmVudH1gKVxuICAgIH0sXG4gICAgYXBwZW5kQ2hpbGQocGFyZW50LCBjaGlsZCkge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5BZGp1c3RtZW50ICYmXG4gICAgICAgICAgICBcInNldF9hZGp1c3RtZW50XCIgaW4gcGFyZW50ICYmXG4gICAgICAgICAgICB0eXBlb2YgcGFyZW50LnNldF9hZGp1c3RtZW50ID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9hZGp1c3RtZW50KGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0ICYmXG4gICAgICAgICAgICBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuU3RhY2sgJiZcbiAgICAgICAgICAgIGNoaWxkLm5hbWUgIT09IFwiXCIgJiZcbiAgICAgICAgICAgIGNoaWxkLm5hbWUgIT09IG51bGwgJiZcbiAgICAgICAgICAgIGdldFR5cGUoY2hpbGQpID09PSBcIm5hbWVkXCJcbiAgICAgICAgKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LmFkZF9uYW1lZChjaGlsZCwgY2hpbGQubmFtZSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5Qb3BvdmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5NZW51QnV0dG9uKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9wb3BvdmVyKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudU1vZGVsICYmXG4gICAgICAgICAgICAocGFyZW50IGluc3RhbmNlb2YgR3RrLk1lbnVCdXR0b24gfHwgcGFyZW50IGluc3RhbmNlb2YgR3RrLlBvcG92ZXJNZW51KVxuICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuc2V0X21lbnVfbW9kZWwoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudUl0ZW0gJiYgcGFyZW50IGluc3RhbmNlb2YgR2lvLk1lbnUpIHtcbiAgICAgICAgICAgIC8vIFRPRE86XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2luZG93ICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5BcHBsaWNhdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5hZGRfd2luZG93KGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLlRleHRCdWZmZXIgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLlRleHRWaWV3KSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9idWZmZXIoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgR3RrLkJ1aWxkYWJsZSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC52ZnVuY19hZGRfY2hpbGQoZHVtbXlCdWlsZGVyLCBjaGlsZCwgZ2V0VHlwZShjaGlsZCkpXG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGFkZCAke2NoaWxkfSB0byAke3BhcmVudH1gKVxuICAgIH0sXG59KVxuXG5leHBvcnQgeyBGcmFnbWVudCwgaW50cmluc2ljRWxlbWVudHMgfVxuZXhwb3J0IHsganN4LCBqc3hzIH0gZnJvbSBcIi4uL2pzeC9qc3guanNcIlxuIiwgImltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVDb21wdXRlZCB9IGZyb20gJ2FncydcbmltcG9ydCB7IEd0ayB9IGZyb20gJ2Fncy9ndGs0J1xuXG5pbXBvcnQgeyBjcmVhdGVDb21wdXRlZEFycmF5LCB0b0FjY2Vzc29yIH0gZnJvbSAnQGxpYnMvZ25pbS1leHRlbnNpb25zJ1xuaW1wb3J0IHsgdXNlTG9naW5TZXJ2aWNlIH0gZnJvbSAnQHNlcnZpY2VzL0xvZ2luU2VydmljZSdcblxuZXhwb3J0IGludGVyZmFjZSBQcm9wcyB7XG4gIGNzc0NsYXNzZXM/OiBzdHJpbmdbXSB8IEFjY2Vzc29yPHN0cmluZ1tdPlxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBFcnJvck1lc3NhZ2UoeyBjc3NDbGFzc2VzIH06IFByb3BzKSB7XG4gIGNvbnN0IHsgdW5sb2NrSW5TZWNvbmRzOiB1bmxvY2tJblNlYywgcmVtYWluaW5nQXR0ZW1wdHMsIGlzTG9ja2VkT3V0LCBpc0xvZ2dpbkVycm9yIH0gPSB1c2VMb2dpblNlcnZpY2UoKVxuXG4gIGNvbnN0IG1lc3NhZ2UgPSBjcmVhdGVDb21wdXRlZChbXG4gICAgaXNMb2NrZWRPdXQsXG4gICAgcmVtYWluaW5nQXR0ZW1wdHMsXG4gICAgdW5sb2NrSW5TZWMsXG4gICAgaXNMb2dnaW5FcnJvcixcbiAgXSwgKFxuICAgIGlzTG9ja2VkT3V0VmFsdWUsXG4gICAgcmVtYWluaW5nQXR0ZW1wdHNWYWx1ZSxcbiAgICB1bmxvY2tJblNlY29uZHNWYWx1ZSxcbiAgICBpc0xvZ2dpbkVycm9yVmFsdWUsXG4gICkgPT4ge1xuICAgIGlmICghaXNMb2dnaW5FcnJvclZhbHVlKSB7XG4gICAgICByZXR1cm4gJydcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNMb2NrZWRPdXRWYWx1ZSkge1xuICAgICAgcmV0dXJuIGBUaGUgYXR0ZW1wdHMgYXJlIG92ZXIuIFdhaXQgJHt1bmxvY2tJblNlY29uZHNWYWx1ZX0gc2Vjb25kc2BcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICByZXR1cm4gYEZhaWxlZCB0byBsb2cgaW4uICR7cmVtYWluaW5nQXR0ZW1wdHNWYWx1ZX0gYXR0ZW1wdHMgbGVmdGBcbiAgICB9XG4gIH0pXG5cbiAgY29uc3QgbWVzc2FnZUNzc0NsYXNzZXMgPSBjcmVhdGVDb21wdXRlZChbaXNMb2NrZWRPdXQsIGlzTG9nZ2luRXJyb3JdLCAoaXNMb2NrZWRPdXRWYWx1ZSwgaXNMb2dnaW5FcnJvclZhbHVlKSA9PiB7XG4gICAgaWYgKGlzTG9ja2VkT3V0VmFsdWUpIHtcbiAgICAgIHJldHVybiBbJ3dhcm5pbmcnXVxuICAgIH1cbiAgICBlbHNlIGlmIChpc0xvZ2dpbkVycm9yVmFsdWUpIHtcbiAgICAgIHJldHVybiBbJ2Vycm9yJ11cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICByZXR1cm4gW11cbiAgICB9XG4gIH0pXG5cbiAgcmV0dXJuIChcbiAgICA8R3RrLkxhYmVsXG4gICAgICBjc3NDbGFzc2VzPXtjcmVhdGVDb21wdXRlZEFycmF5PHN0cmluZz4oW1xuICAgICAgICB0b0FjY2Vzc29yKGNzc0NsYXNzZXMgfHwgW10pLFxuICAgICAgICBtZXNzYWdlQ3NzQ2xhc3NlcyxcbiAgICAgIF0pfVxuICAgICAgbGFiZWw9e21lc3NhZ2V9XG4gICAgLz5cbiAgKVxufVxuIiwgImltcG9ydCBHTGliIGZyb20gJ2dpOi8vR0xpYidcblxuaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUNvbXB1dGVkLCBvbkNsZWFudXAgfSBmcm9tICdhZ3MnXG5pbXBvcnQgeyBHdGsgfSBmcm9tICdhZ3MvZ3RrNCdcbmltcG9ydCBhcHAgZnJvbSAnYWdzL2d0azQvYXBwJ1xuXG5pbXBvcnQgeyBjcmVhdGVDb21wdXRlZEFycmF5LCBjcmVhdGVEaXNwb3NlTWFuYWdlciwgdG9BY2Nlc3NvciB9IGZyb20gJ0BsaWJzL2duaW0tZXh0ZW5zaW9ucydcbmltcG9ydCB7IHVzZVBhbUZhaWxsb2NrQ29uZiB9IGZyb20gJ0Bwcm92aWRlcnMvcGFtLWZhaWxsb2NrJ1xuaW1wb3J0IHsgdXNlTG9naW5TZXJ2aWNlIH0gZnJvbSAnQHNlcnZpY2VzL0xvZ2luU2VydmljZSdcblxuaW1wb3J0IHsgY3JlYXRlQ291bnRkb3duVGltZXIgfSBmcm9tICcuL2NyZWF0ZUNvdW50ZG93blRpbWVyJ1xuaW1wb3J0IHsgY3JlYXRlUHVsc2VUaW1lciB9IGZyb20gJy4vY3JlYXRlUHVsc2VUaW1lcidcbmltcG9ydCBzY3NzIGZyb20gJy4vc3R5bGUuc2NzcydcblxuYXBwLmFwcGx5X2NzcyhzY3NzKVxuXG5leHBvcnQgaW50ZXJmYWNlIFBhc3N3b3JkRmllbGRQcm9wcyB7XG4gIGNzc0NsYXNzZXM/OiBzdHJpbmdbXSB8IEFjY2Vzc29yPHN0cmluZ1tdPlxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQYXNzd29yZEZpZWxkKHsgY3NzQ2xhc3NlcyB9OiBQYXNzd29yZEZpZWxkUHJvcHMpIHtcbiAgY29uc3QgcGFtQ29uZmlnID0gdXNlUGFtRmFpbGxvY2tDb25mKClcbiAgY29uc3QgeyBpc0xvZ2dpbmdJbiwgaXNMb2NrZWRPdXQsIGlzV2FpdGluZywgaXNMb2dnaW5FcnJvciwgZnJhY3Rpb24sIGxvZ2luLCByZXNldEVycm9yLCBzZXRVbmxvY2tJblNlY29uZHMsIHNldEZyYWN0aW9uLCByZXNldFJlbWFpbmluZ0F0dGVtcHRzIH0gPSB1c2VMb2dpblNlcnZpY2UoKVxuICBjb25zdCBzdGFydENvdW50ZG93biA9IGNyZWF0ZUNvdW50ZG93blRpbWVyKHBhbUNvbmZpZy51bmxvY2tfdGltZSwgc2V0VW5sb2NrSW5TZWNvbmRzLCBzZXRGcmFjdGlvbiwgcmVzZXRSZW1haW5pbmdBdHRlbXB0cylcbiAgY29uc3QgeyBzdGFydFB1bHNlVGltZXIsIHN0b3BQdWxzZVRpbWVyIH0gPSBjcmVhdGVQdWxzZVRpbWVyKClcbiAgY29uc3QgW2Rpc3Bvc2VzLCBkaXNwb3NlXSA9IGNyZWF0ZURpc3Bvc2VNYW5hZ2VyKClcblxuICBjb25zdCBtZXNzYWdlQ3NzQ2xhc3NlcyA9IGNyZWF0ZUNvbXB1dGVkKFtpc0xvZ2dpbkVycm9yXSwgKGlzTG9nZ2luRXJyb3JWYWx1ZSkgPT4ge1xuICAgIGlmIChpc0xvZ2dpbkVycm9yVmFsdWUpIHtcbiAgICAgIHJldHVybiBbJ2Vycm9yJ11cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICByZXR1cm4gW11cbiAgICB9XG4gIH0pXG5cbiAgbGV0IHByb2dyZXNzQmFyOiBHdGsuUHJvZ3Jlc3NCYXJcbiAgY29uc3QgcHVsc2VIYW5kbGVyID0gKCkgPT4ge1xuICAgIGlmIChpc0xvZ2dpbmdJbi5nZXQoKSkge1xuICAgICAgc3RhcnRQdWxzZVRpbWVyKHByb2dyZXNzQmFyKVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHN0b3BQdWxzZVRpbWVyKClcbiAgICB9XG4gIH1cbiAgY29uc3QgY291bnRkb3duSGFuZGxlciA9ICgpID0+IHtcbiAgICBpZiAoaXNMb2NrZWRPdXQuZ2V0KCkpIHtcbiAgICAgIHN0YXJ0Q291bnRkb3duKHByb2dyZXNzQmFyKVxuICAgIH1cbiAgfVxuXG4gIGRpc3Bvc2VzLnB1c2goaXNMb2dnaW5nSW4uc3Vic2NyaWJlKHB1bHNlSGFuZGxlcikpXG4gIGRpc3Bvc2VzLnB1c2goaXNMb2NrZWRPdXQuc3Vic2NyaWJlKGNvdW50ZG93bkhhbmRsZXIpKVxuXG4gIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgZGlzcG9zZSgpXG4gIH0pXG5cbiAgcmV0dXJuIChcbiAgICA8R3RrLk92ZXJsYXk+XG4gICAgICA8R3RrLlBhc3N3b3JkRW50cnlcbiAgICAgICAgJD17KHBhc3N3b3JkRW50cnkpID0+IHtcbiAgICAgICAgICBkaXNwb3Nlcy5wdXNoKGlzV2FpdGluZy5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBUaGUgZm9sbG93aW5nIGNvZGUgYXZvaWRzIHRoZSB3YXJuaW5nOlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIChnanM6OTkyNTEpOiBHdGstV0FSTklORyAqKjogMjI6NDY6NTQuNDM2OiBHdGtUZXh0IC0gZGlkIG5vdCByZWNlaXZlIGEgZm9jdXMtb3V0IGV2ZW50LlxuICAgICAgICAgICAgICogSWYgeW91IGhhbmRsZSB0aGlzIGV2ZW50LCB5b3UgbXVzdCByZXR1cm5cbiAgICAgICAgICAgICAqIEdES19FVkVOVF9QUk9QQUdBVEUgc28gdGhlIGRlZmF1bHQgaGFuZGxlclxuICAgICAgICAgICAgICogZ2V0cyB0aGUgZXZlbnQgYXMgd2VsbFxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIHdoZW4gY2hhbmdpbmcgb25seSB0aGUgXCJzZW5zaXRpdmVcIiBwcm9wZXJ0eTpcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiBzZW5zaXRpdmU9e2lzV2FpdGluZyh2YWwgPT4gIXZhbCl9XG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGlmIChpc1dhaXRpbmcuZ2V0KCkpIHtcbiAgICAgICAgICAgICAgR0xpYi5pZGxlX2FkZChHTGliLlBSSU9SSVRZX0RFRkFVTFRfSURMRSwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHBhc3N3b3JkRW50cnkuZm9jdXNhYmxlID0gZmFsc2VcbiAgICAgICAgICAgICAgICBwYXNzd29yZEVudHJ5LmVkaXRhYmxlID0gZmFsc2VcbiAgICAgICAgICAgICAgICBwYXNzd29yZEVudHJ5LnNldF9zdGF0ZV9mbGFncyhHdGsuU3RhdGVGbGFncy5JTlNFTlNJVElWRSwgdHJ1ZSlcbiAgICAgICAgICAgICAgICByZXR1cm4gR0xpYi5TT1VSQ0VfUkVNT1ZFXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgcGFzc3dvcmRFbnRyeS5mb2N1c2FibGUgPSB0cnVlXG4gICAgICAgICAgICAgIHBhc3N3b3JkRW50cnkuZWRpdGFibGUgPSB0cnVlXG4gICAgICAgICAgICAgIHBhc3N3b3JkRW50cnkuc2Vuc2l0aXZlID0gdHJ1ZVxuICAgICAgICAgICAgICBwYXNzd29yZEVudHJ5LmdyYWJfZm9jdXMoKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pKVxuICAgICAgICB9fVxuICAgICAgICBjc3NDbGFzc2VzPXtjcmVhdGVDb21wdXRlZEFycmF5PHN0cmluZz4oW1xuICAgICAgICAgIHRvQWNjZXNzb3IoY3NzQ2xhc3NlcyB8fCBbXSksXG4gICAgICAgICAgdG9BY2Nlc3NvcihbJ1VzZXJQYXNzd29yZEVudHJ5J10pLFxuICAgICAgICAgIG1lc3NhZ2VDc3NDbGFzc2VzLFxuICAgICAgICBdKX1cbiAgICAgICAgc2hvd1BlZWtJY29uPXt0cnVlfVxuICAgICAgICBjYW5Gb2N1cz17dHJ1ZX1cbiAgICAgICAgb25BY3RpdmF0ZT17KHsgdGV4dCB9KSA9PiB7XG4gICAgICAgICAgbG9naW4odGV4dClcbiAgICAgICAgfX1cbiAgICAgICAgb25Ob3RpZnlUZXh0PXsoKSA9PiByZXNldEVycm9yKCl9XG4gICAgICAgIG9uUmVhbGl6ZT17KHBhc3N3b3JkRW50cnkpID0+IHtcbiAgICAgICAgICBwYXNzd29yZEVudHJ5LmdyYWJfZm9jdXMoKVxuICAgICAgICB9fVxuICAgICAgLz5cbiAgICAgIDxHdGsuUHJvZ3Jlc3NCYXJcbiAgICAgICAgJHR5cGU9XCJvdmVybGF5XCJcbiAgICAgICAgJD17KHNlbGYpID0+IHtcbiAgICAgICAgICBwcm9ncmVzc0JhciA9IHNlbGZcbiAgICAgICAgICBjb3VudGRvd25IYW5kbGVyKClcbiAgICAgICAgfX1cbiAgICAgICAgY3NzQ2xhc3Nlcz17Wydob3Jpem9udGFsJywgJ1Bhc3N3b3JkRmllbGRQcm9ncmVzcyddfVxuICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5FTkR9XG4gICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTH1cbiAgICAgICAgbWFyZ2luU3RhcnQ9ezh9XG4gICAgICAgIG1hcmdpbkVuZD17OH1cbiAgICAgICAgbWFyZ2luQm90dG9tPXszfVxuICAgICAgICBjYW5UYXJnZXQ9e2ZhbHNlfVxuICAgICAgICBwdWxzZVN0ZXA9ezAuMTV9XG4gICAgICAgIGZyYWN0aW9uPXtmcmFjdGlvbn1cbiAgICAgICAgdmlzaWJsZT17aXNXYWl0aW5nfVxuICAgICAgLz5cbiAgICA8L0d0ay5PdmVybGF5PlxuICApXG59XG4iLCAiaW1wb3J0IEdMaWIgZnJvbSAnZ2k6Ly9HTGliJ1xuXG5pbXBvcnQgeyBHdGsgfSBmcm9tICdhZ3MvZ3RrNCdcblxuaW1wb3J0IHsgdXNlVXNlckxpc3RTZXJ2aWNlIH0gZnJvbSAnQHNlcnZpY2VzL1VzZXJMaXN0U2VydmljZSdcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvdW50ZG93blRpbWVyKFxuICBpbnRlcnZhbEluU2Vjb25kczogbnVtYmVyLFxuICBzZXRSZW1haW5pbmdTZWNvbmRzOiAocmVtYWluaW5nOiBudW1iZXIsIGtleT86IHN0cmluZykgPT4gdm9pZCxcbiAgc2V0RnJhY3Rpb246IChmcmFjdGlvbjogbnVtYmVyLCBrZXk/OiBzdHJpbmcpID0+IHZvaWQsXG4gIHJlc2V0Q2FsbGJhY2s6IChrZXk/OiBzdHJpbmcpID0+IHZvaWQsXG4pIHtcbiAgY29uc3QgdGlja0NhbGxiYWNrSWRNYXA6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4gPSB7fVxuXG4gIGNvbnN0IGNyZWF0ZVRpY2tlciA9IChrZXk6IHN0cmluZywgc3RhcnRUaW1lSW5TZWNvbmRzOiBudW1iZXIpID0+IHtcbiAgICByZXR1cm4gKHdpZGdldDogR3RrLldpZGdldCkgPT4ge1xuICAgICAgY29uc3QgY3VycmVudFRpbWVJblNlY29uZHMgPSBHTGliLmdldF9tb25vdG9uaWNfdGltZSgpIC8gMTAwMDAwMFxuICAgICAgY29uc3QgZWxhcHNlZCA9IGN1cnJlbnRUaW1lSW5TZWNvbmRzIC0gc3RhcnRUaW1lSW5TZWNvbmRzXG4gICAgICBjb25zdCByZW1haW5pbmcgPSBpbnRlcnZhbEluU2Vjb25kcyAtIGVsYXBzZWRcbiAgICAgIGNvbnN0IGZyYWN0aW9uID0gcmVtYWluaW5nIC8gaW50ZXJ2YWxJblNlY29uZHNcbiAgICAgIHNldFJlbWFpbmluZ1NlY29uZHMoTWF0aC5jZWlsKHJlbWFpbmluZyksIGtleSlcbiAgICAgIHNldEZyYWN0aW9uKGZyYWN0aW9uLCBrZXkpXG5cbiAgICAgIGlmIChyZW1haW5pbmcgPD0gMCkge1xuICAgICAgICB3aWRnZXQucmVtb3ZlX3RpY2tfY2FsbGJhY2sodGlja0NhbGxiYWNrSWRNYXBba2V5XSlcbiAgICAgICAgdGlja0NhbGxiYWNrSWRNYXBba2V5XSA9IDBcbiAgICAgICAgcmVzZXRDYWxsYmFjayhrZXkpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiBHTGliLlNPVVJDRV9DT05USU5VRVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHN0YXJ0KHByb2dyZXNzQmFyOiBHdGsuUHJvZ3Jlc3NCYXIpIHtcbiAgICBjb25zdCB7IHNlbGVjdGVkVXNlck5hbWUgfSA9IHVzZVVzZXJMaXN0U2VydmljZSgpXG4gICAgY29uc3QgdXNlckluZGV4ID0gc2VsZWN0ZWRVc2VyTmFtZS5nZXQoKVxuICAgIC8vIFRPRE86IEdldCBzdGFydCB0aW1lIGZyb20gUEFNIGZhaWxsb2NrIHBlciB1c2VyXG4gICAgY29uc3Qgc3RhcnRUaW1lSW5TZWNvbmRzID0gR0xpYi5nZXRfbW9ub3RvbmljX3RpbWUoKSAvIDEwMDAwMDBcbiAgICBwcm9ncmVzc0Jhci5zZXRfaW52ZXJ0ZWQodHJ1ZSlcbiAgICBjb25zdCBvblRpY2sgPSBjcmVhdGVUaWNrZXIodXNlckluZGV4LCBzdGFydFRpbWVJblNlY29uZHMpXG4gICAgdGlja0NhbGxiYWNrSWRNYXBbdXNlckluZGV4XSA9IHByb2dyZXNzQmFyLmFkZF90aWNrX2NhbGxiYWNrKG9uVGljaylcbiAgfVxuXG4gIHJldHVybiBzdGFydFxufVxuIiwgImltcG9ydCBBc3RhbElPIGZyb20gJ2dpOi8vQXN0YWxJTydcblxuaW1wb3J0IHsgR3RrIH0gZnJvbSAnYWdzL2d0azQnXG5pbXBvcnQgeyBpbnRlcnZhbCB9IGZyb20gJ2Fncy90aW1lJ1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUHVsc2VUaW1lcigpIHtcbiAgbGV0IHB1bHNlVGltZXI6IEFzdGFsSU8uVGltZSB8IG51bGwgPSBudWxsXG5cbiAgZnVuY3Rpb24gc3RhcnRQdWxzZVRpbWVyKHByb2dyZXNzQmFyOiBHdGsuUHJvZ3Jlc3NCYXIpIHtcbiAgICBwcm9ncmVzc0Jhci5zZXRfZnJhY3Rpb24oMClcbiAgICBwcm9ncmVzc0Jhci5zZXRfaW52ZXJ0ZWQoZmFsc2UpXG4gICAgcHVsc2VUaW1lciA9IGludGVydmFsKDYwLCAoKSA9PiBwcm9ncmVzc0Jhci5wdWxzZSgpKVxuICB9XG5cbiAgZnVuY3Rpb24gc3RvcFB1bHNlVGltZXIoKSB7XG4gICAgaWYgKHB1bHNlVGltZXIgIT09IG51bGwpIHtcbiAgICAgIHB1bHNlVGltZXIuY2FuY2VsKClcbiAgICAgIHB1bHNlVGltZXIgPSBudWxsXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzdGFydFB1bHNlVGltZXIsXG4gICAgc3RvcFB1bHNlVGltZXIsXG4gIH1cbn1cbiIsICJAa2V5ZnJhbWVzIHNoYWtlLWhvcml6b250YWwtbGlnaHQge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB9XG4gIDEwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01cHgpO1xuICB9XG4gIDIwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDVweCk7XG4gIH1cbiAgMzAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTVweCk7XG4gIH1cbiAgNDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNXB4KTtcbiAgfVxuICA1MCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNXB4KTtcbiAgfVxuICA2MCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1cHgpO1xuICB9XG4gIDcwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01cHgpO1xuICB9XG4gIDgwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDNweCk7XG4gIH1cbiAgOTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTNweCk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB9XG59XG4uVXNlclBhc3N3b3JkRW50cnkuZXJyb3Ige1xuICBhbmltYXRpb246IHNoYWtlLWhvcml6b250YWwtbGlnaHQgNjAwbXMgZWFzZS1vdXQgMHMgMSBub3JtYWwgbm9uZTtcbn1cblxuLlBhc3N3b3JkRmllbGRQcm9ncmVzcyB0cm91Z2gge1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBtaW4taGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuLlBhc3N3b3JkRmllbGRQcm9ncmVzcyBwcm9ncmVzcyB7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG59IiwgImltcG9ydCB7IEFjY2Vzc29yLCBvbkNsZWFudXAgfSBmcm9tICdhZ3MnXG5pbXBvcnQgeyBHdGsgfSBmcm9tICdhZ3MvZ3RrNCdcblxuaW1wb3J0IHsgY3JlYXRlQ29tcHV0ZWRBcnJheSwgdG9BY2Nlc3NvciB9IGZyb20gJ0BsaWJzL2duaW0tZXh0ZW5zaW9ucydcbmltcG9ydCB7IHVzZVNlc3Npb25MaXN0U2VydmljZSB9IGZyb20gJ0BzZXJ2aWNlcy9TZXNzaW9uTGlzdFNlcnZpY2UnXG5cbmV4cG9ydCBpbnRlcmZhY2UgU2Vzc2lvblNlbGVjdFByb3BzIHtcbiAgY3NzQ2xhc3Nlcz86IHN0cmluZ1tdIHwgQWNjZXNzb3I8c3RyaW5nW10+XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNlc3Npb25TZWxlY3QoeyBjc3NDbGFzc2VzIH06IFNlc3Npb25TZWxlY3RQcm9wcykge1xuICBjb25zdCB7IHNlc3Npb25MaXN0LCBzZWxlY3RlZFNlc3Npb25JbmRleCwgc2V0U2VsZWN0ZWRTZXNzaW9uSW5kZXgsIGRpc3Bvc2VTZXNzaW9uTGlzdFNlcnZpY2UgfSA9IHVzZVNlc3Npb25MaXN0U2VydmljZSgpXG5cbiAgb25DbGVhbnVwKCgpID0+IHtcbiAgICBkaXNwb3NlU2Vzc2lvbkxpc3RTZXJ2aWNlKClcbiAgfSlcblxuICByZXR1cm4gKFxuICAgIDxHdGsuRHJvcERvd25cbiAgICAgIGNzc0NsYXNzZXM9e2NyZWF0ZUNvbXB1dGVkQXJyYXk8c3RyaW5nPihbdG9BY2Nlc3Nvcihjc3NDbGFzc2VzIHx8IFtdKV0pfVxuICAgICAgbW9kZWw9e0d0ay5TdHJpbmdMaXN0Lm5ldyhzZXNzaW9uTGlzdC5nZXQoKS5tYXAocyA9PiBzLm5hbWUgfHwgJycpKX1cbiAgICAgIHZpc2libGU9e3Nlc3Npb25MaXN0LmdldCgpLmxlbmd0aCA+IDF9XG4gICAgICBzZWxlY3RlZD17c2VsZWN0ZWRTZXNzaW9uSW5kZXh9XG4gICAgICBvbk5vdGlmeVNlbGVjdGVkSXRlbT17KHMpID0+IHtcbiAgICAgICAgc2V0U2VsZWN0ZWRTZXNzaW9uSW5kZXgocy5zZWxlY3RlZClcbiAgICAgIH19XG4gICAgLz5cbiAgKVxufVxuIiwgIi5TZXNzaW9uTWFuYWdlclNjcmVlbiB7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgNTAwbXMgZWFzZS1pbi1vdXQ7XG59XG4uU2Vzc2lvbk1hbmFnZXJTY3JlZW4uU2Vzc2lvbk1hbmFnZXJTY3JlZW5WaXNpYmxlIHtcbiAgb3BhY2l0eTogMTtcbn1cbi5TZXNzaW9uTWFuYWdlclNjcmVlbiAuU2Vzc2lvbk1hbmFnZXJDb250YWluZXIgLlNlc3Npb25NYW5hZ2VyVmlldyAuU2Vzc2lvbk1hbmFnZXJGaWVsZHMge1xuICBtYXJnaW4tdG9wOiAyZW07XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cbi5TZXNzaW9uTWFuYWdlclNjcmVlbiAuU2Vzc2lvbk1hbmFnZXJDb250YWluZXIgLlNlc3Npb25NYW5hZ2VyVmlldyAuU2Vzc2lvbk1hbmFnZXJGaWVsZHMgLlNlc3Npb25NYW5hZ2VyRmllbGQge1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG4uU2Vzc2lvbk1hbmFnZXJTY3JlZW4gLlNlc3Npb25NYW5hZ2VyQ29udGFpbmVyIC5TZXNzaW9uTWFuYWdlclZpZXcgLlNlc3Npb25NYW5hZ2VyRmllbGRzIC5Vc2VyUGFzc3dvcmRFbnRyeSB7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1tb25vc3BhY2UtZm9udC1mYW1pbHkpO1xufSIsICJpbXBvcnQgQWR3IGZyb20gJ2dpOi8vQWR3J1xuaW1wb3J0IFBhbmdvIGZyb20gJ2dpOi8vUGFuZ28nXG5cbmltcG9ydCB7IEZvciwgV2l0aCwgY3JlYXRlU3RhdGUsIG9uQ2xlYW51cCwgY3JlYXRlQ29tcHV0ZWQgfSBmcm9tICdhZ3MnXG5pbXBvcnQgeyBHZGssIEd0ayB9IGZyb20gJ2Fncy9ndGs0J1xuaW1wb3J0IGFwcCBmcm9tICdhZ3MvZ3RrNC9hcHAnXG5cbmltcG9ydCB7IGNyZWF0ZURpc3Bvc2VNYW5hZ2VyIH0gZnJvbSAnQGxpYnMvZ25pbS1leHRlbnNpb25zJ1xuaW1wb3J0IHsgdXNlVXNlckxpc3RTZXJ2aWNlIH0gZnJvbSAnQHNlcnZpY2VzL1VzZXJMaXN0U2VydmljZSdcblxuaW1wb3J0IHNjc3MgZnJvbSAnLi9zdHlsZS5zY3NzJ1xuXG5hcHAuYXBwbHlfY3NzKHNjc3MpXG5cbmNvbnN0IFVzZXJOYW1lTGFiZWwgPSAobmFtZTogc3RyaW5nKSA9PiAoXG4gIDxHdGsuTGFiZWxcbiAgICBjc3NDbGFzc2VzPXtbJ1VzZXJDYXJvdXNlbENhcHRpb24nXX1cbiAgICBsYWJlbD17bmFtZX1cbiAgICBtYXhXaWR0aENoYXJzPXsxMn1cbiAgICB3aWR0aFJlcXVlc3Q9ezIyMH1cbiAgICBlbGxpcHNpemU9e1BhbmdvLkVsbGlwc2l6ZU1vZGUuRU5EfVxuICAvPlxuKVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBVc2VyQ2Fyb3VzZWwoKSB7XG4gIGNvbnN0IHsgdXNlckxpc3QsIHNlbGVjdGVkVXNlckluZGV4LCBzZXRTZWxlY3RlZFVzZXJJbmRleCB9ID0gdXNlVXNlckxpc3RTZXJ2aWNlKClcbiAgY29uc3QgW3VzZXJMaXN0Q2Fyb3VzZWwsIHNldFVzZXJMaXN0Q2Fyb3VzZWxdID0gY3JlYXRlU3RhdGU8QWR3LkNhcm91c2VsIHwgbnVsbD4obnVsbClcblxuICBjb25zdCBuYXZpZ2F0aW9uQnV0dG9uUHJvcHM6IFBhcnRpYWw8R3RrLkJ1dHRvbj4gPSB7XG4gICAgY3Vyc29yOiBuZXcgR2RrLkN1cnNvcih7IG5hbWU6ICdwb2ludGVyJyB9KSxcbiAgICBjc3NDbGFzc2VzOiBbJ1VzZXJDYXJvdXNlbEJ1dHRvbiddLFxuICAgIHZpc2libGU6IHVzZXJMaXN0LmdldCgpLmxlbmd0aCA+IDEsXG4gIH1cblxuICBjb25zdCBzY3JvbGxUbyA9IChpbmRleDogbnVtYmVyLCBhbmltYXRpb246IGJvb2xlYW4gPSB0cnVlKSA9PiB7XG4gICAgY29uc3QgdXNlckxpc3RDYXJvdXNlbFJlZiA9IHVzZXJMaXN0Q2Fyb3VzZWwuZ2V0KClcbiAgICBpZiAodXNlckxpc3RDYXJvdXNlbFJlZikge1xuICAgICAgY29uc3QgdGFyZ2V0UGFnZSA9IHVzZXJMaXN0Q2Fyb3VzZWxSZWYuZ2V0X250aF9wYWdlKGluZGV4KVxuICAgICAgdXNlckxpc3RDYXJvdXNlbFJlZi5zY3JvbGxfdG8odGFyZ2V0UGFnZSwgYW5pbWF0aW9uKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IFtkaXNwb3NlcywgZGlzcG9zZV0gPSBjcmVhdGVEaXNwb3NlTWFuYWdlcigpXG5cbiAgZGlzcG9zZXMucHVzaChzZWxlY3RlZFVzZXJJbmRleC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgIGNvbnN0IHBvc2l0aW9uID0gc2VsZWN0ZWRVc2VySW5kZXguZ2V0KClcbiAgICBzY3JvbGxUbyhwb3NpdGlvbilcbiAgfSkpXG5cbiAgb25DbGVhbnVwKCgpID0+IHtcbiAgICBkaXNwb3NlKClcbiAgfSlcblxuICByZXR1cm4gKFxuICAgIDxHdGsuQm94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTH0+XG4gICAgICA8R3RrLkJ1dHRvblxuICAgICAgICBpY29uTmFtZT1cImdvLXByZXZpb3VzXCJcbiAgICAgICAgb25DbGlja2VkPXsoKSA9PiB7XG4gICAgICAgICAgY29uc3QgdXNlckxpc3RDYXJvdXNlbFJlZiA9IHVzZXJMaXN0Q2Fyb3VzZWwuZ2V0KClcbiAgICAgICAgICBpZiAodXNlckxpc3RDYXJvdXNlbFJlZikge1xuICAgICAgICAgICAgaWYgKHVzZXJMaXN0Q2Fyb3VzZWxSZWYucG9zaXRpb24gPiAwKSB7XG4gICAgICAgICAgICAgIHNldFNlbGVjdGVkVXNlckluZGV4KE1hdGguY2VpbCh1c2VyTGlzdENhcm91c2VsUmVmLnBvc2l0aW9uKSAtIDEpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgc2V0U2VsZWN0ZWRVc2VySW5kZXgodXNlckxpc3QuZ2V0KCkubGVuZ3RoIC0gMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH19XG4gICAgICAgIHsuLi5uYXZpZ2F0aW9uQnV0dG9uUHJvcHN9XG4gICAgICAvPlxuICAgICAgPEd0ay5Cb3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgIDxBZHcuQ2Fyb3VzZWxcbiAgICAgICAgICBjc3NDbGFzc2VzPXtbJ1VzZXJDYXJvdXNlbCddfVxuICAgICAgICAgIHNwYWNpbmc9ezI0fVxuICAgICAgICAgIGhleHBhbmQ9e3RydWV9XG4gICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uRklMTH1cbiAgICAgICAgICBzY3JvbGxQYXJhbXM9e25ldyBBZHcuU3ByaW5nUGFyYW1zKDEsIDAuNSwgMTAwMCl9XG4gICAgICAgICAgYWxsb3dMb25nU3dpcGVzPXt0cnVlfVxuICAgICAgICAgIG9uUmVhbGl6ZT17KGNhcm91c2VsKSA9PiB7XG4gICAgICAgICAgICBzZXRVc2VyTGlzdENhcm91c2VsKGNhcm91c2VsKVxuICAgICAgICAgICAgc2Nyb2xsVG8oc2VsZWN0ZWRVc2VySW5kZXguZ2V0KCksIGZhbHNlKVxuICAgICAgICAgIH19XG4gICAgICAgICAgb25QYWdlQ2hhbmdlZD17KGNhcm91c2VsKSA9PiB7XG4gICAgICAgICAgICBzZXRTZWxlY3RlZFVzZXJJbmRleChNYXRoLnJvdW5kKGNhcm91c2VsLnBvc2l0aW9uKSlcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgPEZvciBlYWNoPXt1c2VyTGlzdH0+XG4gICAgICAgICAgICB7KHVzZXIsIGluZGV4KSA9PiAoXG4gICAgICAgICAgICAgIDxHdGsuQm94XG4gICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17Y3JlYXRlQ29tcHV0ZWQoXG4gICAgICAgICAgICAgICAgICBbc2VsZWN0ZWRVc2VySW5kZXgsIGluZGV4XSxcbiAgICAgICAgICAgICAgICAgIChuLCBpKSA9PiBbJ1VzZXJDYXJvdXNlbFNsaWRlJywgLi4uKG4gPT09IGkgPyBbJ1VzZXJDYXJvdXNlbFNsaWRlQWN0aXZlJ10gOiBbXSldLFxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH1cbiAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgICAgdmV4cGFuZD17ZmFsc2V9XG4gICAgICAgICAgICAgICAgY3Vyc29yPXtjcmVhdGVDb21wdXRlZChcbiAgICAgICAgICAgICAgICAgIFt1c2VyTGlzdF0sXG4gICAgICAgICAgICAgICAgICBhcnIgPT4gYXJyLmxlbmd0aCA+IDEgPyBuZXcgR2RrLkN1cnNvcih7IG5hbWU6ICdwb2ludGVyJyB9KSA6IG5ldyBHZGsuQ3Vyc29yKHsgbmFtZTogJ2RlZmF1bHQnIH0pLFxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgd2lkdGhSZXF1ZXN0PXsyMjB9XG4gICAgICAgICAgICAgICAgaGVpZ2h0UmVxdWVzdD17MjcwfVxuICAgICAgICAgICAgICAgIG9wYWNpdHk9e2NyZWF0ZUNvbXB1dGVkKFxuICAgICAgICAgICAgICAgICAgW3NlbGVjdGVkVXNlckluZGV4LCBpbmRleF0sXG4gICAgICAgICAgICAgICAgICAobiwgaSkgPT4gbiA9PT0gaSA/IDEgOiAwLjUsXG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxHdGsuR2VzdHVyZUNsaWNrXG4gICAgICAgICAgICAgICAgICBvblJlbGVhc2VkPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNldFNlbGVjdGVkVXNlckluZGV4KGluZGV4LmdldCgpKVxuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxBZHcuQXZhdGFyXG4gICAgICAgICAgICAgICAgICBzaXplPXsxNzJ9XG4gICAgICAgICAgICAgICAgICB0ZXh0PXt1c2VyLnJlYWxOYW1lfVxuICAgICAgICAgICAgICAgICAgc2hvd0luaXRpYWxzPXt0cnVlfVxuICAgICAgICAgICAgICAgICAgY3VzdG9tSW1hZ2U9e3VzZXIudXNlclBpY3R1cmV9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDwvQWR3LkF2YXRhcj5cbiAgICAgICAgICAgICAgICA8R3RrLkJveFxuICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17WydVc2VyQ2Fyb3VzZWxDYXB0aW9uQ29udGFpbmVyJ119XG4gICAgICAgICAgICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICAgICAgICAgICAgdmV4cGFuZD17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB7dXNlci5yZWFsTmFtZS5sZW5ndGggPiAxNCA/IHVzZXIucmVhbE5hbWUuc3BsaXQoJyAnKS5tYXAoVXNlck5hbWVMYWJlbCkgOiBVc2VyTmFtZUxhYmVsKHVzZXIucmVhbE5hbWUpfVxuICAgICAgICAgICAgICAgIDwvR3RrLkJveD5cbiAgICAgICAgICAgICAgPC9HdGsuQm94PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L0Zvcj5cbiAgICAgICAgPC9BZHcuQ2Fyb3VzZWw+XG4gICAgICAgIDxXaXRoIHZhbHVlPXt1c2VyTGlzdENhcm91c2VsfT5cbiAgICAgICAgICB7dmFsdWUgPT4gdmFsdWUgaW5zdGFuY2VvZiBBZHcuQ2Fyb3VzZWwgJiYgPEFkdy5DYXJvdXNlbEluZGljYXRvckRvdHMgY2Fyb3VzZWw9e3ZhbHVlfSB2aXNpYmxlPXtjcmVhdGVDb21wdXRlZChbdXNlckxpc3RdLCBhcnIgPT4gYXJyLmxlbmd0aCA+IDEpfSAvPiB9XG4gICAgICAgIDwvV2l0aD5cbiAgICAgIDwvR3RrLkJveD5cbiAgICAgIDxHdGsuQnV0dG9uXG4gICAgICAgIGljb25OYW1lPVwiZ28tbmV4dFwiXG4gICAgICAgIG9uQ2xpY2tlZD17KCkgPT4ge1xuICAgICAgICAgIGNvbnN0IHVzZXJMaXN0Q2Fyb3VzZWxSZWYgPSB1c2VyTGlzdENhcm91c2VsLmdldCgpXG4gICAgICAgICAgaWYgKHVzZXJMaXN0Q2Fyb3VzZWxSZWYpIHtcbiAgICAgICAgICAgIGlmICh1c2VyTGlzdENhcm91c2VsUmVmLnBvc2l0aW9uIDwgdXNlckxpc3QuZ2V0KCkubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgICBzZXRTZWxlY3RlZFVzZXJJbmRleChNYXRoLmZsb29yKHVzZXJMaXN0Q2Fyb3VzZWxSZWYucG9zaXRpb24pICsgMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICBzZXRTZWxlY3RlZFVzZXJJbmRleCgwKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfX1cbiAgICAgICAgey4uLm5hdmlnYXRpb25CdXR0b25Qcm9wc31cbiAgICAgIC8+XG4gICAgPC9HdGsuQm94PlxuICApXG59XG4iLCAiLlVzZXJDYXJvdXNlbEJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItcmFkaXVzOiAwcHg7XG4gIHBhZGRpbmctdG9wOiA2MnB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTgwcHg7XG59XG4uVXNlckNhcm91c2VsQnV0dG9uIGltYWdlIHtcbiAgcGFkZGluZzogMTZweDtcbiAgYm9yZGVyLXJhZGl1czogOTk5OXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvci1taXgoaW4gc3JnYiwgY3VycmVudENvbG9yIDEwJSwgdHJhbnNwYXJlbnQpO1xuICB0cmFuc2l0aW9uOiBhbGwgMjAwbXMgY3ViaWMtYmV6aWVyKDAuMjUsIDAuNDYsIDAuNDUsIDAuOTQpO1xufVxuLlVzZXJDYXJvdXNlbEJ1dHRvbjpob3ZlciBpbWFnZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGNvbG9yLW1peChpbiBzcmdiLCBjdXJyZW50Q29sb3IgMTAlLCB0cmFuc3BhcmVudCk7XG59XG5cbi5Vc2VyQ2Fyb3VzZWwgLlVzZXJDYXJvdXNlbFNsaWRlIGF2YXRhciB7XG4gIHRyYW5zaXRpb246IGFsbCAxMDBtcyBlYXNlLWluLW91dDtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLjg1KTtcbn1cbi5Vc2VyQ2Fyb3VzZWwgLlVzZXJDYXJvdXNlbFNsaWRlQWN0aXZlIGF2YXRhciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XG59XG4uVXNlckNhcm91c2VsIC5Vc2VyQ2Fyb3VzZWxDYXB0aW9uQ29udGFpbmVyIHtcbiAgcGFkZGluZy10b3A6IDhweDtcbiAgcGFkZGluZy1ib3R0b206IDEycHg7XG59XG4uVXNlckNhcm91c2VsIC5Vc2VyQ2Fyb3VzZWxDYXB0aW9uQ29udGFpbmVyIC5Vc2VyQ2Fyb3VzZWxDYXB0aW9uIHtcbiAgZm9udC1zaXplOiAxLjc1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI1O1xufSIsICJpbXBvcnQgeyBjcmVhdGVDb21wdXRlZCB9IGZyb20gJ2FncydcbmltcG9ydCB7IEFzdGFsLCBHdGssIEdkayB9IGZyb20gJ2Fncy9ndGs0J1xuaW1wb3J0IGFwcCBmcm9tICdhZ3MvZ3RrNC9hcHAnXG5pbXBvcnQgeyB0aW1lb3V0IH0gZnJvbSAnYWdzL3RpbWUnXG5cbmltcG9ydCB7IHVzZVNlc3Npb25NYW5hZ2VyU2NyZWVuU2VydmljZSB9IGZyb20gJ0BzZXJ2aWNlcy9TZXNzaW9uTWFuYWdlclNjcmVlblNlcnZpY2UnXG5cbmltcG9ydCBFcnJvck1lc3NhZ2UgZnJvbSAnLi9FcnJvck1lc3NhZ2UnXG5pbXBvcnQgUGFzc3dvcmRGaWVsZCBmcm9tICcuL1Bhc3N3b3JkRmllbGQnXG5pbXBvcnQgU2Vzc2lvblNlbGVjdCBmcm9tICcuL1Nlc3Npb25TZWxlY3QnXG5pbXBvcnQgc2NzcyBmcm9tICcuL3N0eWxlLnNjc3MnXG5pbXBvcnQgVXNlckNhcm91c2VsIGZyb20gJy4vVXNlckNhcm91c2VsJ1xuXG5hcHAuYXBwbHlfY3NzKHNjc3MpXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNlc3Npb25NYW5hZ2VyU2NyZWVuKGdka21vbml0b3I6IEdkay5Nb25pdG9yKSB7XG4gIGNvbnN0IHsgVE9QLCBMRUZULCBSSUdIVCwgQk9UVE9NIH0gPSBBc3RhbC5XaW5kb3dBbmNob3JcbiAgY29uc3QgeyB3aW5kb3dWaXNpYmxlLCBzZXRXaW5kb3dWaXNpYmxlIH0gPSB1c2VTZXNzaW9uTWFuYWdlclNjcmVlblNlcnZpY2UoKVxuICBjb25zdCB3aW5kb3dDc3NDbGFzc2VzID0gY3JlYXRlQ29tcHV0ZWQoW3dpbmRvd1Zpc2libGVdLCAod2luZG93VmlzaWJsZVZhbHVlKSA9PiB7XG4gICAgcmV0dXJuIHdpbmRvd1Zpc2libGVWYWx1ZSA/IFsnU2Vzc2lvbk1hbmFnZXJTY3JlZW4nLCAnU2Vzc2lvbk1hbmFnZXJTY3JlZW5WaXNpYmxlJ10gOiBbJ1Nlc3Npb25NYW5hZ2VyU2NyZWVuJ11cbiAgfSlcblxuICByZXR1cm4gKFxuICAgIDxBc3RhbC5XaW5kb3dcbiAgICAgIHZpc2libGVcbiAgICAgIG5hbWU9XCJTZXNzaW9uTWFuYWdlclNjcmVlblwiXG4gICAgICBjc3NDbGFzc2VzPXt3aW5kb3dDc3NDbGFzc2VzfVxuICAgICAgZ2RrbW9uaXRvcj17Z2RrbW9uaXRvcn1cbiAgICAgIGV4Y2x1c2l2aXR5PXtBc3RhbC5FeGNsdXNpdml0eS5FWENMVVNJVkV9XG4gICAgICBhbmNob3I9e1RPUCB8IExFRlQgfCBSSUdIVCB8IEJPVFRPTX1cbiAgICAgIGtleW1vZGU9e0FzdGFsLktleW1vZGUuT05fREVNQU5EfVxuICAgICAgYXBwbGljYXRpb249e2FwcH1cbiAgICAgICQ9eygpID0+IHtcbiAgICAgICAgdGltZW91dCgyNTAsICgpID0+IHtcbiAgICAgICAgICBzZXRXaW5kb3dWaXNpYmxlKHRydWUpXG4gICAgICAgIH0pXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxHdGsuQm94XG4gICAgICAgIGNzc0NsYXNzZXM9e1snU2Vzc2lvbk1hbmFnZXJDb250YWluZXInXX1cbiAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uRklMTH1cbiAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uRklMTH1cbiAgICAgICAgaGV4cGFuZD17dHJ1ZX1cbiAgICAgICAgdmV4cGFuZD17dHJ1ZX1cbiAgICAgID5cbiAgICAgICAgPEd0ay5Cb3hcbiAgICAgICAgICBjc3NDbGFzc2VzPXtbJ1Nlc3Npb25NYW5hZ2VyVmlldyddfVxuICAgICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9XG4gICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uRklMTH1cbiAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgaGV4cGFuZD17dHJ1ZX1cbiAgICAgICAgPlxuICAgICAgICAgIDxVc2VyQ2Fyb3VzZWwgLz5cbiAgICAgICAgICA8R3RrLkJveFxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17WydTZXNzaW9uTWFuYWdlckZpZWxkcyddfVxuICAgICAgICAgICAgb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH1cbiAgICAgICAgICAgIHdpZHRoUmVxdWVzdD17MjgwfVxuICAgICAgICAgICAgaGV4cGFuZD17ZmFsc2V9XG4gICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPFNlc3Npb25TZWxlY3QgY3NzQ2xhc3Nlcz17WydTZXNzaW9uTWFuYWdlckZpZWxkJ119IC8+XG4gICAgICAgICAgICA8UGFzc3dvcmRGaWVsZCBjc3NDbGFzc2VzPXtbJ1Nlc3Npb25NYW5hZ2VyRmllbGQnXX0gLz5cbiAgICAgICAgICAgIDxFcnJvck1lc3NhZ2UgY3NzQ2xhc3Nlcz17WydTZXNzaW9uTWFuYWdlckZpZWxkJ119IC8+XG4gICAgICAgICAgPC9HdGsuQm94PlxuICAgICAgICA8L0d0ay5Cb3g+XG4gICAgICA8L0d0ay5Cb3g+XG4gICAgPC9Bc3RhbC5XaW5kb3c+XG4gIClcbn1cbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsU0FBUyx1QkFBQUEsNEJBQTJCOzs7QUNNcEMsU0FBUyxTQUFTLEtBQWE7QUFDM0IsU0FBTyxJQUNGLFFBQVEsbUJBQW1CLE9BQU8sRUFDbEMsV0FBVyxLQUFLLEdBQUcsRUFDbkIsWUFBWTtBQUNyQjtBQUVBLGVBQWUsU0FBWSxLQUE4QkMsUUFBdUI7QUFDNUUsU0FBTyxJQUFJLEtBQUssQ0FBQyxNQUFNQSxPQUFNLEVBQUUsT0FBTyxDQUFDLEVBQUUsTUFBTSxNQUFNLE1BQU07QUFDL0Q7QUFFQSxTQUFTLE1BQXdCLE9BQVUsTUFBZ0M7QUFDdkUsU0FBTyxlQUFlLE9BQU8sTUFBTTtBQUFBLElBQy9CLE1BQU07QUFDRixhQUFPLEtBQUssT0FBTyxTQUFTLElBQUksQ0FBQyxFQUFFLEVBQUU7QUFBQSxJQUN6QztBQUFBLEVBQ0osQ0FBQztBQUNMO0FBRUEsTUFBTSxTQUFTLE9BQU8sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFLE1BQU0sWUFBWSxNQUFNO0FBQ2hFLFFBQU0sS0FBSyxXQUFXLE1BQU07QUFDNUIsUUFBTSxZQUFZLFdBQVcsVUFBVTtBQUN2QyxRQUFNLFlBQVksV0FBVyxZQUFZO0FBQzdDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyxtQkFBbUIsR0FBRyxDQUFDLEVBQUUsT0FBTyxNQUFNO0FBQ3hELFFBQU0sT0FBTyxXQUFXLFNBQVM7QUFDckMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLHFCQUFxQixHQUFHLENBQUMsRUFB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TTtBQUFBLGNBQ2xCLFFBQVFBLEtBQUksTUFBTTtBQUFBLGNBQ2xCLFNBQVM7QUFBQSxjQUVUO0FBQUEsb0NBQUMsZ0JBQWE7QUFBQSxnQkFDZDtBQUFBLGtCQUFDQSxLQUFJO0FBQUEsa0JBQUo7QUFBQSxvQkFDQyxZQUFZLENBQUMsc0JBQXNCO0FBQUEsb0JBQ25DLGFBQWFBLEtBQUksWUFBWTtBQUFBLG9CQUM3QixjQUFjO0FBQUEsb0JBQ2QsU0FBUztBQUFBLG9CQUNULFFBQVFBLEtBQUksTUFBTTtBQUFBLG9CQUVsQjtBQUFBLDBDQUFDLGlCQUFjLFlBQVksQ0FBQyxxQkFBcUIsR0FBRztBQUFBLHNCQUNwRCxvQkFBQyxpQkFBYyxZQUFZLENBQUMscUJBQXFCLEdBQUc7QUFBQSxzQkFDcEQsb0JBQUMsZ0JBQWEsWUFBWSxDQUFDLHFCQUFxQixHQUFHO0FBQUE7QUFBQTtBQUFBLGdCQUNyRDtBQUFBO0FBQUE7QUFBQSxVQUNGO0FBQUE7QUFBQSxNQUNGO0FBQUE7QUFBQSxFQUNGO0FBRUo7OztBMUQ3REEsWUFBSSxNQUFNO0FBQUEsRUFDUixPQUFPO0FBQ0wsSUFBQUMscUJBQW9CLGFBQWEsUUFBUSxlQUFlLE9BQU8sQ0FBQztBQUNoRSx5QkFBcUIsWUFBSSxhQUFhLEVBQUUsQ0FBQyxDQUFDO0FBQUEsRUFDNUM7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogWyJzZXRDb25zb2xlTG9nRG9tYWluIiwgInBhdGNoIiwgInNuYWtlaWZ5IiwgInNuYWtlaWZ5IiwgImdldHRlciIsICJzZXR0ZXIiLCAiZ2V0dGVyIiwgInNldHRlciIsICJzaWduYWxOYW1lIiwgInNpZ25hbCIsICJHTGliIiwgIkdpbyIsICJHTGliIiwgIkdPYmplY3QiLCAiR0xpYiIsICJHT2JqZWN0IiwgInNpZ25hbCIsICJ2YWx1ZSIsICJ0aW1lb3V0IiwgInNldCIsICJuYW1lIiwgImFyZ3MiLCAiX2EiLCAiYXBwIiwgIkdPYmplY3QiLCAiR09iamVjdCIsICJfYSIsICJzaWduYWwiLCAiR09iamVjdCIsICJHaW8iLCAiR0xpYiIsICJHT2JqZWN0IiwgInNldCIsICJHT2JqZWN0IiwgImtleSIsICJvYmplY3QiLCAicmVtb3ZlIiwgInJlbW92ZSIsICJHT2JqZWN0IiwgIkdMaWIiLCAiQWR3IiwgIl9jdXJzb3JUaGVtZV9kZWMiLCAiX2ljb25UaGVtZV9kZWMiLCAiX2d0a1RoZW1lX2RlYyIsICJfYSIsICJfaW5pdCIsICJHaW8iLCAiXyIsICJjb25maWciLCAic2lnbmFsIiwgIkdpbyIsICJHTGliIiwgIkdpbyIsICJHTGliIiwgImdldENvbnNvbGVMb2dEb21haW4iLCAiR2lvIiwgIkdMaWIiLCAiR3RrIiwgIkdkayIsICJHaW8iLCAiR0xpYiIsICJfYSIsICJfaW5pdCIsICJHaW8iLCAic2lnbmFsIiwgIkdMaWIiLCAiX2EiLCAiX2luaXQiLCAiaW50ZXJ2YWwiLCAic2lnbmFsIiwgImtleXMiLCAic2V0IiwgIkdpbyIsICJHTGliIiwgIkdpbyIsICJlbnYiLCAiR0xpYiIsICJHaW8iLCAiR0xpYiIsICJHaW8iLCAiR0xpYiIsICJjb25maWciLCAiY29uZmlnIiwgIkdpbyIsICJHaW8iLCAiR2RrIiwgImNhY2hlZExvZ2luU3RvcmFnZVJlY29yZCIsICJHaW8iLCAiR0xpYiIsICJHaW8iLCAiR0xpYiIsICJzZXNzaW9uTGlzdCIsICJnZXRDYXNoZWRTZXNzaW9uQnlVc2VyIiwgImNhY2hlZExvZ2luU3RvcmFnZVJlY29yZCIsICJzZWxlY3RlZFVzZXIiLCAic2VsZWN0ZWRVc2VyIiwgInNlbGVjdGVkU2Vzc2lvbiIsICJjYWNoZWRMb2dpblN0b3JhZ2VSZWNvcmQiLCAiR2lvIiwgInVzZXJMaXN0IiwgInNlbGVjdGVkVXNlck5hbWUiLCAic2V0V2luZG93VmlzaWJsZSIsICJzZWxlY3RlZFVzZXIiLCAic2VsZWN0ZWRTZXNzaW9uIiwgIkd0ayIsICJBc3RhbCIsICJHdGsiLCAiR2lvIiwgIkd0ayIsICJrZXlzIiwgInNldHRlciIsICJjc3MiLCAiR2lvIiwgIkd0ayIsICJBc3RhbCIsICJyZW1haW5pbmdBdHRlbXB0cyIsICJpc0xvY2tlZE91dCIsICJpc0xvZ2dpbkVycm9yIiwgIkd0ayIsICJHTGliIiwgIkdMaWIiLCAic2V0RnJhY3Rpb24iLCAiR0xpYiIsICJmcmFjdGlvbiIsICJzZWxlY3RlZFVzZXJOYW1lIiwgInBhbUNvbmZpZyIsICJpc0xvZ2dpbmdJbiIsICJpc0xvY2tlZE91dCIsICJpc1dhaXRpbmciLCAiaXNMb2dnaW5FcnJvciIsICJmcmFjdGlvbiIsICJsb2dpbiIsICJyZXNldEVycm9yIiwgInNldFVubG9ja0luU2Vjb25kcyIsICJzZXRGcmFjdGlvbiIsICJyZXNldFJlbWFpbmluZ0F0dGVtcHRzIiwgIkd0ayIsICJHTGliIiwgInNlc3Npb25MaXN0IiwgInNlbGVjdGVkU2Vzc2lvbkluZGV4IiwgInNldFNlbGVjdGVkU2Vzc2lvbkluZGV4IiwgIkd0ayIsICJzdHlsZV9kZWZhdWx0IiwgInN0eWxlX2RlZmF1bHQiLCAic3R5bGVfZGVmYXVsdCIsICJHdGsiLCAidXNlckxpc3QiLCAic2VsZWN0ZWRVc2VySW5kZXgiLCAic2V0U2VsZWN0ZWRVc2VySW5kZXgiLCAiR2RrIiwgInN0eWxlX2RlZmF1bHQiLCAid2luZG93VmlzaWJsZSIsICJzZXRXaW5kb3dWaXNpYmxlIiwgIkd0ayIsICJzZXRDb25zb2xlTG9nRG9tYWluIl0KfQo=

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@
