#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/dmFyIF-ags.js"

/bin/cat <<EOF | /bin/base64 --decode > $file
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __knownSymbol = (name, symbol) => (symbol = Symbol[name]) ? symbol : Symbol.for("Symbol." + name);
var __typeError = (msg) => {
  throw TypeError(msg);
};
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __decoratorStart = (base) => [, , , __create(base?.[__knownSymbol("metadata")] ?? null)];
var __decoratorStrings = ["class", "method", "getter", "setter", "accessor", "field", "value", "get", "set"];
var __expectFn = (fn) => fn !== void 0 && typeof fn !== "function" ? __typeError("Function expected") : fn;
var __decoratorContext = (kind, name, done, metadata, fns) => ({ kind: __decoratorStrings[kind], name, metadata, addInitializer: (fn) => done._ ? __typeError("Already initialized") : fns.push(__expectFn(fn || null)) });
var __decoratorMetadata = (array, target) => __defNormalProp(target, __knownSymbol("metadata"), array[3]);
var __runInitializers = (array, flags, self, value) => {
  for (var i = 0, fns = array[flags >> 1], n = fns && fns.length; i < n; i++) flags & 1 ? fns[i].call(self) : value = fns[i].call(self, value);
  return value;
};
var __decorateElement = (array, flags, name, decorators, target, extra) => {
  var fn, it, done, ctx, access, k = flags & 7, s = !!(flags & 8), p = !!(flags & 16);
  var j = k > 3 ? array.length + 1 : k ? s ? 1 : 2 : 0, key = __decoratorStrings[k + 5];
  var initializers = k > 3 && (array[j - 1] = []), extraInitializers = array[j] || (array[j] = []);
  var desc = k && (!p && !s && (target = target.prototype), k < 5 && (k > 3 || !p) && __getOwnPropDesc(k < 4 ? target : { get [name]() {
    return __privateGet(this, extra);
  }, set [name](x) {
    return __privateSet(this, extra, x);
  } }, name));
  k ? p && k < 4 && __name(extra, (k > 2 ? "set " : k > 1 ? "get " : "") + name) : __name(target, name);
  for (var i = decorators.length - 1; i >= 0; i--) {
    ctx = __decoratorContext(k, name, done = {}, array[3], extraInitializers);
    if (k) {
      ctx.static = s, ctx.private = p, access = ctx.access = { has: p ? (x) => __privateIn(target, x) : (x) => name in x };
      if (k ^ 3) access.get = p ? (x) => (k ^ 1 ? __privateGet : __privateMethod)(x, target, k ^ 4 ? extra : desc.get) : (x) => x[name];
      if (k > 2) access.set = p ? (x, y) => __privateSet(x, target, y, k ^ 4 ? extra : desc.set) : (x, y) => x[name] = y;
    }
    it = (0, decorators[i])(k ? k < 4 ? p ? extra : desc[key] : k > 4 ? void 0 : { get: desc.get, set: desc.set } : target, ctx), done._ = 1;
    if (k ^ 4 || it === void 0) __expectFn(it) && (k > 4 ? initializers.unshift(it) : k ? p ? extra = it : desc[key] = it : target = it);
    else if (typeof it !== "object" || it === null) __typeError("Object expected");
    else __expectFn(fn = it.get) && (desc.get = fn), __expectFn(fn = it.set) && (desc.set = fn), __expectFn(fn = it.init) && initializers.unshift(fn);
  }
  return k || __decoratorMetadata(array, target), desc && __defProp(target, name, desc), p ? k ^ 4 ? extra : desc : target;
};
var __accessCheck = (obj, member, msg) => member.has(obj) || __typeError("Cannot " + msg);
var __privateIn = (member, obj) => Object(obj) !== obj ? __typeError('Cannot use the "in" operator on this value') : member.has(obj);
var __privateGet = (obj, member, getter2) => (__accessCheck(obj, member, "read from private field"), getter2 ? getter2.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value) => member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter2) => (__accessCheck(obj, member, "write to private field"), setter2 ? setter2.call(obj, value) : member.set(obj, value), value);
var __privateMethod = (obj, member, method) => (__accessCheck(obj, member, "access private method"), method);

// ../../../../../usr/share/ags/js/lib/overrides.ts
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod, patch2) {
  return mod.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland, Monitor, Workspace }) => {
  patch(Hyprland.prototype, "binds");
  patch(Hyprland.prototype, "monitors");
  patch(Hyprland.prototype, "workspaces");
  patch(Hyprland.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp, Audio, Video }) => {
  patch(Wp.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gobject.ts
import GObject from "gi://GObject";
import GLib from "gi://GLib";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function xml({ name, attributes, children }) {
  let builder = `<${name}`;
  const attrs = Object.entries(attributes ?? []);
  if (attrs.length > 0) {
    for (const [key, value] of attrs) {
      builder += ` ${key}="${value}"`;
    }
  }
  if (children && children.length > 0) {
    builder += ">";
    for (const node of children) {
      builder += xml(node);
    }
    builder += `</${name}>`;
  } else {
    builder += " />";
  }
  return builder;
}
function set(obj, prop, value) {
  const key = snakeify2(prop);
  const getter2 = `get_${key}`;
  const setter2 = `set_${key}`;
  let current;
  if (getter2 in obj && typeof obj[getter2] === "function") {
    current = obj[getter2]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter2 in obj && typeof obj[setter2] === "function") {
      ;
      obj[setter2](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gobject.ts
var priv = Symbol("gobject private");
var { defineProperty, fromEntries, entries } = Object;
var { Object: GObj, registerClass } = GObject;
var SignalFlags = GObject.SignalFlags;
var AccumulatorType = GObject.AccumulatorType;
var ParamSpec = GObject.ParamSpec;
var ParamFlags = GObject.ParamFlags;
function assertField(ctx) {
  if (ctx.private) throw Error("private fields are not supported");
  if (ctx.static) throw Error("static fields are not supported");
  if (typeof ctx.name !== "string") {
    throw Error("only strings can be gobject property keys");
  }
  return ctx.name;
}
function getter(typeDeclaration) {
  return function(get, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.READABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.READABLE, type: typeDeclaration };
    }
    return get;
  };
}
function setter(typeDeclaration) {
  return function(set2, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.WRITABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.WRITABLE, type: typeDeclaration };
    }
    return set2;
  };
}
function signal(...args) {
  return function(method, ctx) {
    if (ctx.private) throw Error("private fields are not supported");
    if (ctx.static) throw Error("static fields are not supported");
    if (typeof ctx.name !== "string") {
      throw Error("only strings can be gobject signals");
    }
    const signalName2 = kebabify(ctx.name);
    const meta = ctx.metadata;
    const signals = meta.signals ??= {};
    if (Array.isArray(args[0])) {
      const [params, returnType, options] = args;
      signals[signalName2] = {
        method,
        default: options?.default ?? true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i),
        ...returnType && {
          return_type: "$gtype" in returnType ? returnType.$gtype : returnType
        },
        ...options?.flags && {
          flags: options.flags
        },
        ...typeof options?.accumulator === "number" && {
          accumulator: options.accumulator
        }
      };
    } else {
      const params = args;
      signals[signalName2] = {
        method,
        default: true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i)
      };
    }
    return function(...params) {
      return this.emit(signalName2, ...params);
    };
  };
}
var MAXINT = 2 ** 31 - 1;
var MININT = -(2 ** 31);
var MAXUINT = 2 ** 32 - 1;
var MAXFLOAT = 34028235e31;
var MINFLOAT = -34028235e31;
var MININT64 = Number.MIN_SAFE_INTEGER;
var MAXINT64 = Number.MAX_SAFE_INTEGER;
function pspecFromGType(type, name, flags) {
  switch (type) {
    case GObject.TYPE_BOOLEAN:
      return ParamSpec.boolean(name, "", "", flags, false);
    case GObject.TYPE_STRING:
      return ParamSpec.string(name, "", "", flags, "");
    case GObject.TYPE_INT:
      return ParamSpec.int(name, "", "", flags, MININT, MAXINT, 0);
    case GObject.TYPE_UINT:
      return ParamSpec.uint(name, "", "", flags, 0, MAXUINT, 0);
    case GObject.TYPE_INT64:
      return ParamSpec.int64(name, "", "", flags, MININT64, MAXINT64, 0);
    case GObject.TYPE_UINT64:
      return ParamSpec.uint64(name, "", "", flags, 0, Number.MAX_SAFE_INTEGER, 0);
    case GObject.TYPE_FLOAT:
      return ParamSpec.float(name, "", "", flags, MINFLOAT, MAXFLOAT, 0);
    case GObject.TYPE_DOUBLE:
      return ParamSpec.double(name, "", "", flags, Number.MIN_VALUE, Number.MIN_VALUE, 0);
    case GObject.TYPE_JSOBJECT:
      return ParamSpec.jsobject(name, "", "", flags);
    case GObject.TYPE_VARIANT:
      return ParamSpec.object(name, "", "", flags, GLib.Variant);
    case GObject.TYPE_ENUM:
    case GObject.TYPE_INTERFACE:
    case GObject.TYPE_BOXED:
    case GObject.TYPE_POINTER:
    case GObject.TYPE_PARAM:
    case GObject.type_from_name("GType"):
      throw Error(`cannot guess ParamSpec from GType "${type}"`);
    case GObject.TYPE_OBJECT:
    default:
      return ParamSpec.object(name, "", "", flags, type);
  }
}
function pspec(name, flags, declaration) {
  if (declaration instanceof ParamSpec) return declaration;
  if (declaration === Object || declaration === Function || declaration === Array) {
    return ParamSpec.jsobject(name, "", "", flags);
  }
  if (declaration === String) {
    return ParamSpec.string(name, "", "", flags, "");
  }
  if (declaration === Number) {
    return ParamSpec.double(name, "", "", flags, -Number.MAX_VALUE, Number.MAX_VALUE, 0);
  }
  if (declaration === Boolean) {
    return ParamSpec.boolean(name, "", "", flags, false);
  }
  if ("$gtype" in declaration) {
    return pspecFromGType(declaration.$gtype, name, flags);
  }
  if (typeof declaration === "function") {
    return declaration(name, flags);
  }
  throw Error("invalid PropertyTypeDeclaration");
}
function register(options = {}) {
  return function(cls, ctx) {
    const t = options.Template;
    if (typeof t === "string" && !t.startsWith("resource://") && !t.startsWith("file://")) {
      options.Template = new TextEncoder().encode(t);
    }
    const meta = ctx.metadata;
    const props = fromEntries(
      entries(meta.properties ?? {}).map(([fieldName, { flags, type }]) => {
        const key = kebabify(fieldName);
        const spec = pspec(key, flags, type);
        return [key, spec];
      })
    );
    const signals = fromEntries(
      entries(meta.signals ?? {}).map(([signalName2, { default: def, method, ...signal2 }]) => {
        if (def) {
          defineProperty(cls.prototype, `on_${signalName2.replaceAll("-", "_")}`, {
            enumerable: false,
            configurable: false,
            value: method
          });
        }
        return [signalName2, signal2];
      })
    );
    delete meta.properties;
    delete meta.signals;
    registerClass({ ...options, Properties: props, Signals: signals }, cls);
  };
}
Function.$gtype = Object.$gtype;
Array.$gtype = Object.$gtype;
Date.$gtype = Object.$gtype;
Map.$gtype = Object.$gtype;
Set.$gtype = Object.$gtype;

// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
import GLib4 from "gi://GLib?version=2.0";
import Gtk from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";
import Gio3 from "gi://Gio?version=2.0";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/dbus.ts
import Gio from "gi://Gio";
import GLib2 from "gi://GLib";
import GObject2 from "gi://GObject";
var DEFAULT_TIMEOUT = 1e4;
var Variant = GLib2.Variant;
var info = Symbol("dbus interface info");
var internals = Symbol("dbus interface internals");
var remoteMethod = Symbol("proxy remoteMethod");
var remoteMethodAsync = Symbol("proxy remoteMethodAsync");
var remotePropertySet = Symbol("proxy remotePropertySet");
var _a;
var Service = class extends GObject2.Object {
  constructor() {
    super();
    this[_a] = {
      priv: {},
      onStop: /* @__PURE__ */ new Set()
    };
    const service = this.constructor;
    if (!service[info]) throw Error("missing interface info");
    this.#info = service[info];
  }
  static {
    GObject2.registerClass(this);
  }
  #info;
  notify(propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (prop && this[internals].dbusObject) {
      this[internals].dbusObject.emit_property_changed(
        propertyName,
        new GLib2.Variant(prop.signature, this[propertyName])
      );
    }
    super.notify(prop ? kebabify(propertyName) : propertyName);
  }
  emit(name, ...params) {
    const signal2 = this.#info.lookup_signal(name);
    if (signal2 && this[internals].dbusObject) {
      const signature = `(${signal2.args.map((a) => a.signature).join("")})`;
      this[internals].dbusObject.emit_signal(name, new GLib2.Variant(signature, params));
    }
    return super.emit(signal2 ? kebabify(name) : name, ...params);
  }
  // server
  #handlePropertyGet(_, propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no exported property: "${propertyName}"`);
    }
    const value = this[propertyName];
    if (typeof value !== "undefined") {
      return new GLib2.Variant(prop.signature, value);
    } else {
      return null;
    }
  }
  // server
  #handlePropertySet(_, propertyName, value) {
    const newValue = value.deepUnpack();
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no property: "${propertyName}"`);
    }
    if (this[propertyName] !== newValue) {
      this[propertyName] = value.deepUnpack();
    }
  }
  // server
  #returnError(error, invocation) {
    console.error(error);
    if (error instanceof GLib2.Error) {
      return invocation.return_gerror(error);
    }
    if (error instanceof Error) {
      return invocation.return_dbus_error(
        error.name.includes(".") ? error.name : `gjs.JSError.${error.name}`,
        error.message
      );
    }
    invocation.return_dbus_error("gjs.DBusService.UnknownError", `${error}`);
  }
  // server
  #returnValue(value, methodName, invocation) {
    if (value === null || value === void 0) {
      return invocation.return_value(new GLib2.Variant("()", []));
    }
    const args = this.#info.lookup_method(methodName)?.out_args ?? [];
    const signature = `(${args.map((arg) => arg.signature).join("")})`;
    if (!Array.isArray(value)) throw Error("value has to be a tuple");
    invocation.return_value(new GLib2.Variant(signature, value));
  }
  // server
  #handleMethodCall(_, methodName, parameters, invocation) {
    try {
      const value = this[methodName](
        ...parameters.deepUnpack()
      );
      if (value instanceof GLib2.Variant) {
        invocation.return_value(value);
      } else if (value instanceof Promise) {
        value.then((value2) => this.#returnValue(value2, methodName, invocation)).catch((error) => this.#returnError(error, invocation));
      } else {
        this.#returnValue(value, methodName, invocation);
      }
    } catch (error) {
      this.#returnError(error, invocation);
    }
  }
  // server
  async serve({
    busType = Gio.BusType.SESSION,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio.BusNameOwnerFlags.NONE,
    timeout = DEFAULT_TIMEOUT
  } = {}) {
    const impl = new Gio.DBusExportedObject(
      // @ts-expect-error missing constructor type
      { g_interface_info: this.#info }
    );
    impl.connect("handle-method-call", this.#handleMethodCall.bind(this));
    impl.connect("handle-property-get", this.#handlePropertyGet.bind(this));
    impl.connect("handle-property-set", this.#handlePropertySet.bind(this));
    this.#info.cache_build();
    return new Promise((resolve, reject) => {
      let source = timeout > 0 ? setTimeout(() => {
        reject(Error(`serve timed out`));
        source = null;
      }, timeout) : null;
      const clear = () => {
        if (source) {
          clearTimeout(source);
          source = null;
        }
      };
      const busId = Gio.bus_own_name(
        busType,
        name,
        flags,
        (conn) => {
          try {
            impl.export(conn, objectPath);
            this[internals].dbusObject = impl;
            this[internals].onStop.add(() => {
              Gio.bus_unown_name(busId);
              impl.unexport();
              this.#info.cache_release();
              delete this[internals].dbusObject;
            });
            resolve(this);
          } catch (error) {
            reject(error);
          }
        },
        clear,
        clear
      );
    });
  }
  // proxy
  #handlePropertiesChanged(_, changed, invalidated) {
    const set2 = /* @__PURE__ */ new Set([...Object.keys(changed.deepUnpack()), ...invalidated]);
    for (const prop of set2.values()) {
      this.notify(prop);
    }
  }
  // proxy
  #handleSignal(_, _sender, signal2, parameters) {
    this.emit(kebabify(signal2), ...parameters.deepUnpack());
  }
  // proxy
  #remoteMethodParams(methodName, args) {
    const { proxy } = this[internals];
    if (!proxy) throw Error("invalid remoteMethod invocation: not a proxy");
    const method = this.#info.lookup_method(methodName);
    if (!method) throw Error("method not found");
    const signature = `(${method.in_args.map((a) => a.signature).join("")})`;
    return [
      methodName,
      new GLib2.Variant(signature, args),
      Gio.DBusCallFlags.NONE,
      DEFAULT_TIMEOUT,
      null
    ];
  }
  // proxy
  [(info, _a = internals, remoteMethod)](methodName, args) {
    const params = this.#remoteMethodParams(methodName, args);
    return this[internals].proxy.call_sync(...params);
  }
  // proxy
  [remoteMethodAsync](methodName, args) {
    return new Promise((resolve, reject) => {
      try {
        const params = this.#remoteMethodParams(methodName, args);
        this[internals].proxy.call(...params, (_, res) => {
          try {
            resolve(this[internals].proxy.call_finish(res));
          } catch (error) {
            reject(error);
          }
        });
      } catch (error) {
        reject(error);
      }
    });
  }
  // proxy
  [remotePropertySet](name, value) {
    const proxy = this[internals].proxy;
    const prop = this.#info.lookup_property(name);
    const variant = new GLib2.Variant(prop.signature, value);
    proxy.set_cached_property(name, variant);
    proxy.call(
      "org.freedesktop.DBus.Properties.Set",
      new GLib2.Variant("(ssv)", [proxy.gInterfaceName, name, variant]),
      Gio.DBusCallFlags.NONE,
      -1,
      null,
      (_, res) => {
        try {
          proxy.call_finish(res);
        } catch (e) {
          console.error(e);
        }
      }
    );
  }
  // proxy
  async proxy({
    bus = Gio.DBus.session,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio.DBusProxyFlags.NONE,
    timeout = DEFAULT_TIMEOUT
  } = {}) {
    const proxy = new Gio.DBusProxy({
      gConnection: bus,
      gInterfaceName: this.#info.name,
      gInterfaceInfo: this.#info,
      gName: name,
      gFlags: flags,
      gObjectPath: objectPath
    });
    return new Promise((resolve, reject) => {
      const cancallable = new Gio.Cancellable();
      let source = timeout > 0 ? setTimeout(() => {
        reject(Error(`proxy timed out`));
        source = null;
        cancallable.cancel();
      }, timeout) : null;
      proxy.init_async(GLib2.PRIORITY_DEFAULT, cancallable, (_, res) => {
        try {
          if (source) {
            clearTimeout(source);
            source = null;
          }
          proxy.init_finish(res);
          this[internals].proxy = proxy;
          const ids = [
            proxy.connect("g-signal", this.#handleSignal.bind(this)),
            proxy.connect(
              "g-properties-changed",
              this.#handlePropertiesChanged.bind(this)
            )
          ];
          this[internals].onStop.add(() => {
            ids.forEach((id) => proxy.disconnect(id));
            delete this[internals].proxy;
          });
          resolve(this);
        } catch (error) {
          reject(error);
        }
      });
    });
  }
  stop() {
    const { onStop } = this[internals];
    for (const cb of onStop.values()) {
      onStop.delete(cb);
      cb();
    }
  }
};
function iface(name, options) {
  return function(cls, ctx) {
    const meta = ctx.metadata;
    if (!meta) throw Error(`${cls.name} is not an interface`);
    const { dbusMethods = {}, dbusSignals = {}, dbusProperties = {} } = meta;
    const infoXml = xml({
      name: "node",
      children: [
        {
          name: "interface",
          attributes: { name },
          children: [
            ...Object.entries(dbusMethods).map(([name2, args]) => ({
              name: "method",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.entries(dbusSignals).map(([name2, args]) => ({
              name: "signal",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.values(dbusProperties).map(({ name: name2, type, read, write }) => ({
              name: "property",
              attributes: {
                ...name2 && { name: name2 },
                type,
                access: (read ? "read" : "") + (write ? "write" : "")
              }
            }))
          ]
        }
      ]
    });
    Object.assign(cls, { [info]: Gio.DBusInterfaceInfo.new_for_xml(infoXml) });
    register(options)(cls, ctx);
  };
}
function installMethod(args, method, ctx) {
  const name = ctx.name;
  const meta = ctx.metadata;
  const methods = meta.dbusMethods ??= {};
  if (typeof name !== "string") {
    throw Error("only string named methods are allowed");
  }
  const [inArgs, outArgs = []] = Array.isArray(args[0]) ? args : [args];
  methods[name] = [
    ...inArgs.map((arg) => ({
      direction: "in",
      ...typeof arg === "string" ? { type: arg } : arg
    })),
    ...outArgs.map((arg) => ({
      direction: "out",
      ...typeof arg === "string" ? { type: arg } : arg
    }))
  ];
  return name;
}
function methodAsync(...args) {
  return function(method, ctx) {
    const name = installMethod(args, method, ctx);
    return async function(...args2) {
      if (this[internals].proxy) {
        const value = await this[remoteMethodAsync](name, args2);
        return value.deepUnpack();
      } else {
        return method.apply(this, args2);
      }
    };
  };
}

// ../../../../../usr/share/ags/js/lib/app/dbus.ts
var _Request_dec, _Quit_dec, _ToggleWindow_dec, _Inspector_dec, _a2, _AppDBus_decorators, _init;
_AppDBus_decorators = [iface("io.Astal.Application")];
var _AppDBus = class _AppDBus extends (_a2 = Service, _Inspector_dec = [methodAsync()], _ToggleWindow_dec = [methodAsync("s")], _Quit_dec = [methodAsync()], _Request_dec = [methodAsync(["as"], ["s"])], _a2) {
  constructor(impl) {
    super();
    __runInitializers(_init, 5, this);
    this.impl = void 0;
    this.impl = impl;
  }
  async Inspector() {
    return Promise.resolve(this.impl.insector());
  }
  async ToggleWindow(name) {
    return Promise.resolve(this.impl.toggleWindow(name));
  }
  async Quit() {
    return Promise.resolve(this.impl.quit());
  }
  async Request(argv) {
    return this.impl.request(argv).then((res) => [res]);
  }
  static proxy(instanceName) {
    const app2 = new _AppDBus({
      insector() {
      },
      toggleWindow() {
      },
      quit() {
      },
      request: () => Promise.reject()
    });
    return app2.proxy({
      name: "io.Astal." + instanceName
    });
  }
};
_init = __decoratorStart(_a2);
__decorateElement(_init, 1, "Inspector", _Inspector_dec, _AppDBus);
__decorateElement(_init, 1, "ToggleWindow", _ToggleWindow_dec, _AppDBus);
__decorateElement(_init, 1, "Quit", _Quit_dec, _AppDBus);
__decorateElement(_init, 1, "Request", _Request_dec, _AppDBus);
_AppDBus = __decorateElement(_init, 0, "AppDBus", _AppDBus_decorators, _AppDBus);
__runInitializers(_init, 1, _AppDBus);
var AppDBus = _AppDBus;

// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
import GObject5 from "gi://GObject";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
import GObject3 from "gi://GObject";
var _a3, _b;
var Fragment = class _Fragment extends GObject3.Object {
  static {
    this[_b] = {
      append: { param_types: [GObject3.TYPE_OBJECT] },
      remove: { param_types: [GObject3.TYPE_OBJECT] }
    };
  }
  static {
    this[_a3] = {
      children: GObject3.ParamSpec.jsobject("children", "", "", GObject3.ParamFlags.READABLE)
    };
  }
  static {
    GObject3.registerClass(this);
  }
  *[(_b = GObject3.signals, _a3 = GObject3.properties, Symbol.iterator)]() {
    yield* this._children;
  }
  append(child) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    this._children.push(child);
    this.emit("append", child);
    this.notify("children");
  }
  remove(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("remove", child);
    this.notify("children");
  }
  constructor({ children = [] } = {}) {
    super();
    this._children = Array.isArray(children) ? children : [children];
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
};

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
import GObject4 from "gi://GObject";
import Gio2 from "gi://Gio";
import GLib3 from "gi://GLib";
var empty = Symbol("empty computed value");
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject4.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    let value = empty;
    let unsub;
    const subscribers = /* @__PURE__ */ new Set();
    const subscribe = (callback) => {
      if (subscribers.size === 0) {
        unsub = this.subscribe(() => {
          const newValue = transform(this.get());
          if (value !== newValue) {
            value = newValue;
            Array.from(subscribers).forEach((cb) => cb());
          }
        });
      }
      subscribers.add(callback);
      return () => {
        subscribers.delete(callback);
        if (subscribers.size === 0) {
          value = empty;
          unsub();
        }
      };
    };
    const get = () => {
      return value !== empty ? value : transform(this.get());
    };
    return new _Accessor(get, subscribe);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createComputedProducer(fn) {
  let value = empty;
  let prevDeps = /* @__PURE__ */ new Map();
  const subscribers = /* @__PURE__ */ new Set();
  const cache = /* @__PURE__ */ new Map();
  const effect = () => {
    const deps = /* @__PURE__ */ new Set();
    const newValue = fn((v) => {
      deps.add(v);
      return cache.get(v) || v.get();
    });
    const didChange = value !== newValue;
    value = newValue;
    const newDeps = /* @__PURE__ */ new Map();
    for (const [dep, unsub] of prevDeps) {
      if (!deps.has(dep)) {
        unsub();
      } else {
        newDeps.set(dep, unsub);
      }
    }
    for (const dep of deps) {
      if (!newDeps.has(dep)) {
        const dispose = dep.subscribe(() => {
          const value2 = dep.get();
          if (cache.get(dep) !== value2) {
            cache.set(dep, value2);
            effect();
          }
        });
        newDeps.set(dep, dispose);
      }
    }
    prevDeps = newDeps;
    if (didChange) {
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      effect();
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        value = empty;
        for (const [, unsub] of prevDeps) {
          unsub();
        }
      }
    };
  };
  const get = () => {
    return value !== empty ? value : fn((v) => v.get());
  };
  return new Accessor(get, subscribe);
}
function createComputedArgs(deps, transform) {
  let dispose;
  let value = empty;
  const subscribers = /* @__PURE__ */ new Set();
  const cache = new Array(deps.length);
  const compute = () => {
    const args = deps.map((dep, i) => {
      if (!cache[i]) {
        cache[i] = dep.get();
      }
      return cache[i];
    });
    return transform ? transform(...args) : args;
  };
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      dispose = deps.map(
        (dep, i) => dep.subscribe(() => {
          const newValue = dep.get();
          if (cache[i] !== newValue) {
            cache[i] = dep.get();
            const newValue2 = compute();
            if (value !== newValue2) {
              value = newValue2;
              Array.from(subscribers).forEach((cb) => cb());
            }
          }
        })
      );
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        value = empty;
        dispose.map((cb) => cb());
        dispose.length = 0;
        cache.length = 0;
      }
    };
  };
  const get = () => {
    return value !== empty ? value : compute();
  };
  return new Accessor(get, subscribe);
}
function createComputed(...args) {
  const [depsOrProducer, transform] = args;
  if (typeof depsOrProducer === "function") {
    return createComputedProducer(depsOrProducer);
  } else {
    return createComputedArgs(depsOrProducer, transform);
  }
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  textNode: missingImpl,
  appendChild: missingImpl,
  removeChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
var appendChild = Symbol("JSX add child method");
var removeChild = Symbol("JSX add remove method");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject5.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function signalName(key) {
  const [sig, detail] = kebabify(key.slice(2)).split(":");
  if (sig.startsWith("notify-")) {
    return `notify::${sig.slice(7)}`;
  }
  return detail ? `${sig}::${detail}` : sig;
}
function remove(parent, child) {
  if (parent instanceof Fragment) {
    parent.remove(child);
    return;
  }
  if (removeChild in parent && typeof parent[removeChild] === "function") {
    parent[removeChild](child);
    return;
  }
  env.removeChild(parent, child);
}
function append(parent, child) {
  if (parent instanceof Fragment) {
    parent.append(child);
    return;
  }
  if (child instanceof Fragment) {
    for (const ch of child) {
      append(parent, ch);
    }
    const appendHandler = child.connect("append", (_, ch) => {
      if (!(ch instanceof GObject5.Object)) {
        return console.error(TypeError(`cannot add ${ch} to ${parent}`));
      }
      append(parent, ch);
    });
    const removeHandler = child.connect("remove", (_, ch) => {
      if (!(ch instanceof GObject5.Object)) {
        return console.error(TypeError(`cannot remove ${ch} from ${parent}`));
      }
      remove(parent, ch);
    });
    onCleanup(() => {
      child.disconnect(appendHandler);
      child.disconnect(removeHandler);
    });
    return;
  }
  if (appendChild in parent && typeof parent[appendChild] === "function") {
    parent[appendChild](child, getType(child));
    return;
  }
  env.appendChild(parent, child);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  const deferProps = env.initProps(ctor, props) ?? [];
  const deferredProps = {};
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) {
      delete props[key2];
    }
    if (deferProps.includes(key2)) {
      deferredProps[key2] = props[key2];
      delete props[key2];
    }
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2, value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (let child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn(Error("Trying to add boolean value of `true` as a child."));
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        append(object, ch);
      }
    } else if (child) {
      if (!(child instanceof GObject5.Object)) {
        child = env.textNode(child);
      }
      append(object, child);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const id = object.connect(signalName(sig), handler);
    return () => object.disconnect(id);
  });
  for (const [key2, value] of Object.entries(deferredProps)) {
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
    } else {
      Object.assign(object, { [key2]: value });
    }
  }
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/This.ts
import GObject6 from "gi://GObject";

// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
Gtk.init();
GLib4.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw }) => Adw.init()).catch(() => void 0);
var _request_dec, _cursorTheme_dec, _cursorTheme_dec2, _iconTheme_dec, _iconTheme_dec2, _gtkTheme_dec, _gtkTheme_dec2, _windows_dec, _monitors_dec, _windowToggled_dec, _a4, _App_decorators, _instanceName, _main, _requestHandlers, _dbusService, _cssProviders, _App_instances, settings_get, display_get, _init2;
_App_decorators = [register()];
var App = class extends (_a4 = Gtk.Application, _windowToggled_dec = [signal(Gtk.Window)], _monitors_dec = [getter(Array)], _windows_dec = [getter(Array)], _gtkTheme_dec2 = [setter(String)], _gtkTheme_dec = [getter(String)], _iconTheme_dec2 = [setter(String)], _iconTheme_dec = [getter(String)], _cursorTheme_dec2 = [setter(String)], _cursorTheme_dec = [getter(String)], _request_dec = [signal(Array, Function)], _a4) {
  constructor() {
    super({ flags: Gio3.ApplicationFlags.HANDLES_COMMAND_LINE });
    __runInitializers(_init2, 5, this);
    __privateAdd(this, _App_instances);
    __privateAdd(this, _instanceName, "ags");
    __privateAdd(this, _main);
    __privateAdd(this, _requestHandlers, 0);
    __privateAdd(this, _dbusService);
    __privateAdd(this, _cssProviders, new Array());
    __privateSet(this, _dbusService, new AppDBus({
      toggleWindow: this.toggle_window.bind(this),
      quit: this.quit.bind(this),
      request: (argv) => new Promise((resolve) => this.request(argv, resolve)),
      insector: () => {
        Gtk.Window.set_interactive_debugging(true);
      }
    }));
    __privateGet(this, _App_instances, display_get).get_monitors().connect("items-changed", () => {
      this.notify("monitors");
    });
    this.connect("window-added", (_, window) => {
      const id1 = window.connect("notify::visible", () => this.windowToggled(window));
      const id2 = this.connect("window-removed", (_2, removed) => {
        if (removed == window) {
          window.disconnect(id1);
          this.disconnect(id2);
        }
      });
    });
    __privateGet(this, _App_instances, settings_get).connect("notify", (_, { name }) => {
      switch (name) {
        case "gtk-theme-name":
          this.notify("gtk-theme");
          break;
        case "gtk-icon-theme-name":
          this.notify("icon-theme");
          break;
        case "gtk-cursor-theme-name":
          this.notify("cursor-theme");
          break;
        default:
          break;
      }
    });
  }
  get instanceName() {
    return __privateGet(this, _instanceName);
  }
  /**
   * Get all monitors from {@link Gdk.Display}.
   */
  get_monitors() {
    const mons = __privateGet(this, _App_instances, display_get).get_monitors();
    const list = new Array();
    let monitor = null;
    let i = 0;
    while ((monitor = mons.get_item(i++)) !== null) {
      list.push(monitor);
    }
    return list;
  }
  windowToggled(window) {
    void window;
  }
  get monitors() {
    return this.get_monitors();
  }
  get windows() {
    return this.get_windows();
  }
  set gtkTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkThemeName = name;
  }
  get gtkTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkThemeName;
  }
  set iconTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkIconThemeName = name;
  }
  get iconTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkIconThemeName;
  }
  set cursorTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkCursorThemeName = name;
  }
  get cursorTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkCursorThemeName;
  }
  /**
   * Get a window by its {@link Gtk.Widget.prototype.name} that has been added to this app
   * using {@link Gtk.Application.prototype.add_window}.
   */
  get_window(name) {
    return this.windows.find((w) => w.name === name);
  }
  /**
   * Toggle the visibility of a window by its {@link Gtk.Widget.prototype.name}
   * that has been added to this app using {@link Gtk.Application.prototype.add_window}.
   */
  toggle_window(name) {
    const win = this.get_window(name);
    if (!win) throw Error(`no window registered with name "${name}"`);
    win.visible = !win.visible;
  }
  /**
   * Reset previously set css providers with {@link App.prototype.apply_css}.
   */
  reset_css() {
    for (const provider of __privateGet(this, _cssProviders)) {
      Gtk.StyleContext.remove_provider_for_display(__privateGet(this, _App_instances, display_get), provider);
    }
  }
  /**
   * Add a new {@link Gtk.CssProvider}.
   * @param style Css string or a path to a css file.
   */
  apply_css(style, reset = false) {
    const provider = new Gtk.CssProvider();
    provider.connect("parsing-error", (_, section, error) => {
      const name = section.get_file()?.get_basename() ?? "";
      const line = section.get_start_location().lines + 1;
      const chars = section.get_start_location().line_chars + 1;
      console.error(`CSS Error ${name}:${line}:${chars} ${error.message}`);
    });
    if (reset) this.reset_css();
    if (GLib4.file_test(style, GLib4.FileTest.EXISTS)) {
      provider.load_from_path(style);
    } else if (style.startsWith("resource://")) {
      provider.load_from_resource(style.replace("resource://", ""));
    } else {
      provider.load_from_string(style);
    }
    Gtk.StyleContext.add_provider_for_display(
      __privateGet(this, _App_instances, display_get),
      provider,
      Gtk.STYLE_PROVIDER_PRIORITY_USER
    );
    __privateGet(this, _cssProviders).push(provider);
  }
  /**
   * Shortcut for {@link Gtk.IconTheme.prototype.add_search_path}.
   */
  add_icons(path) {
    Gtk.IconTheme.get_for_display(__privateGet(this, _App_instances, display_get)).add_search_path(path);
  }
  /**
   * Quit and exit the application.
   */
  quit(code = 0) {
    __privateGet(this, _dbusService).stop();
    super.quit();
    exit(code);
  }
  request(args, response) {
    if (__privateGet(this, _requestHandlers) === 0) {
      response(`instance "${this.instanceName}" has no request handler implemented`);
    }
    void args;
  }
  vfunc_command_line(cmd) {
    if (cmd.isRemote) {
      this.request(cmd.get_arguments(), (str) => {
        cmd.print_literal(str + "\n");
        cmd.done();
      });
    } else {
      this.hold();
      __privateGet(this, _dbusService).serve({
        name: this.applicationId
      });
      createRoot((dispose) => {
        var _a5;
        this.connect("shutdown", dispose);
        (_a5 = __privateGet(this, _main)) == null ? void 0 : _a5.call(this, ...programArgs);
      });
    }
    return 0;
  }
  start(config) {
    const { main, requestHandler, instanceName, css, icons, ...cfg } = config;
    __privateSet(this, _main, main);
    Object.assign(this, cfg);
    if (requestHandler) {
      this.connect("request", (_, args, response) => requestHandler(args, response));
    }
    if (instanceName) __privateSet(this, _instanceName, instanceName);
    if (css) this.apply_css(css, false);
    if (icons) app.add_icons(icons);
    this.applicationId = "io.Astal." + this.instanceName;
    setConsoleLogDomain(this.instanceName);
    this.runAsync(programArgs);
  }
  connect(signal2, callback) {
    if (signal2 === "request") __privateSet(this, _requestHandlers, __privateGet(this, _requestHandlers) + 1);
    return super.connect(signal2, callback);
  }
};
_init2 = __decoratorStart(_a4);
_instanceName = new WeakMap();
_main = new WeakMap();
_requestHandlers = new WeakMap();
_dbusService = new WeakMap();
_cssProviders = new WeakMap();
_App_instances = new WeakSet();
settings_get = function() {
  const settings = Gtk.Settings.get_default();
  if (!settings) throw Error("could not get settings");
  return settings;
};
display_get = function() {
  const display = Gdk.Display.get_default();
  if (!display) throw Error("could not get display");
  return display;
};
__decorateElement(_init2, 1, "windowToggled", _windowToggled_dec, App);
__decorateElement(_init2, 2, "monitors", _monitors_dec, App);
__decorateElement(_init2, 2, "windows", _windows_dec, App);
__decorateElement(_init2, 3, "gtkTheme", _gtkTheme_dec2, App);
__decorateElement(_init2, 2, "gtkTheme", _gtkTheme_dec, App);
__decorateElement(_init2, 3, "iconTheme", _iconTheme_dec2, App);
__decorateElement(_init2, 2, "iconTheme", _iconTheme_dec, App);
__decorateElement(_init2, 3, "cursorTheme", _cursorTheme_dec2, App);
__decorateElement(_init2, 2, "cursorTheme", _cursorTheme_dec, App);
__decorateElement(_init2, 1, "request", _request_dec, App);
App = __decorateElement(_init2, 0, "App", _App_decorators, App);
__runInitializers(_init2, 1, App);
var app = new App();
var app_default = app;

// ../../../../../usr/share/ags/js/lib/gtk4/index.ts
import Astal from "gi://Astal?version=4.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Gdk2 from "gi://Gdk?version=4.0";

// ns/components/WindowFullscreen/index.tsx
import Graphene from "gi://Graphene";

// ns/libs/gnim-extensions/createComputedArray.ts
function createComputedArray(deps) {
  return createComputed(deps, (...arrays) => {
    const result = [];
    arrays.forEach((arr) => {
      result.push(...arr);
    });
    return result;
  });
}

// ns/libs/gnim-extensions/toAccessor.ts
function toAccessor(value) {
  return value instanceof Accessor ? value : new Accessor(() => value);
}

// sass:/home/shimarulin/Проекты/Workstation/kotami/ns/components/WindowFullscreen/style.scss
var style_default = "window.WindowFullscreen {\n  background: var(--dialog-bg-color);\n  color: @theme_fg_color;\n}";

// ../../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
import Gtk4 from "gi://Gtk?version=4.0";
import Astal2 from "gi://Astal?version=4.0";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Gio4 from "gi://Gio?version=2.0";
var adw = await import("gi://Adw").then((m) => m.default).catch(() => null);
var dummyBuilder = new Gtk3.Builder();
var { intrinsicElements } = configue({
  initProps(ctor) {
    if (ctor === Gtk3.Stack) {
      const keys = [
        "visibleChildName",
        "visible_child_name"
      ];
      return keys;
    }
    if (adw && ctor === adw.ToggleGroup) {
      const keys = [
        "active",
        "activeName",
        "active_name"
      ];
      return keys;
    }
  },
  setCss(object, css) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter2 = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk3.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk3.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter2(css.get());
      const dispose = css.subscribe(() => setter2(css.get()));
      onCleanup(dispose);
    } else {
      setter2(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  textNode(text) {
    return Gtk3.Label.new(text.toString());
  },
  // `set_child` and especially `remove` might be way too generic and there might
  // be cases where it does not actually do what we want it to do
  //
  // if there is a usecase for either of these two that does something else than
  // we expect it to do here in a JSX context we have to check for known instances
  removeChild(parent, child) {
    if (parent instanceof Gtk3.Widget && child instanceof Gtk3.EventController) {
      return parent.remove_controller(child);
    }
    if ("set_child" in parent && typeof parent.set_child == "function") {
      return parent.set_child(null);
    }
    if ("remove" in parent && typeof parent.remove == "function") {
      return parent.remove(child);
    }
    throw Error(`cannot remove ${child} from ${parent}`);
  },
  appendChild(parent, child) {
    if (child instanceof Gtk3.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
      return parent.set_adjustment(child);
    }
    if (child instanceof Gtk3.Widget && parent instanceof Gtk3.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
      return parent.add_named(child, child.name);
    }
    if (child instanceof Gtk3.Popover && parent instanceof Gtk3.MenuButton) {
      return parent.set_popover(child);
    }
    if (child instanceof Gio4.MenuModel && (parent instanceof Gtk3.MenuButton || parent instanceof Gtk3.PopoverMenu)) {
      return parent.set_menu_model(child);
    }
    if (child instanceof Gio4.MenuItem && parent instanceof Gio4.Menu) {
    }
    if (child instanceof Gtk3.Window && parent instanceof Gtk3.Application) {
      return parent.add_window(child);
    }
    if (child instanceof Gtk3.TextBuffer && parent instanceof Gtk3.TextView) {
      return parent.set_buffer(child);
    }
    if (parent instanceof Gtk3.Buildable) {
      return parent.vfunc_add_child(dummyBuilder, child, getType(child));
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk4.Box,
  button: Gtk4.Button,
  centerbox: Gtk4.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk4.DrawingArea,
  entry: Gtk4.Entry,
  image: Gtk4.Image,
  label: Gtk4.Label,
  levelbar: Gtk4.LevelBar,
  menubutton: Gtk4.MenuButton,
  overlay: Gtk4.Overlay,
  popover: Gtk4.Popover,
  revealer: Gtk4.Revealer,
  scrolledwindow: Gtk4.ScrolledWindow,
  slider: Astal2.Slider,
  stack: Gtk4.Stack,
  switch: Gtk4.Switch,
  togglebutton: Gtk4.ToggleButton,
  window: Astal2.Window
});

// ns/components/WindowFullscreen/index.tsx
app_default.apply_css(style_default);
function WindowFullscreen({ children, name, cssClasses, layer }) {
  const { TOP, LEFT, RIGHT, BOTTOM } = Astal.WindowAnchor;
  let window;
  let contentbox;
  function closeOnPressEscapeKey(_e, keyval) {
    if (keyval === Gdk2.KEY_Escape) {
      window.hide();
      return;
    }
  }
  function closeOnClickOutside(_e, _, x, y) {
    const [, rect] = contentbox.compute_bounds(window);
    const position = new Graphene.Point({ x, y });
    if (!rect.contains_point(position)) {
      window.hide();
      return true;
    }
  }
  return /* @__PURE__ */ jsxs(
    Astal.Window,
    {
      name,
      application: app_default,
      $: (ref) => window = ref,
      layer: layer || Astal.Layer.OVERLAY,
      anchor: TOP | LEFT | RIGHT | BOTTOM,
      keymode: Astal.Keymode.ON_DEMAND,
      cssClasses: createComputedArray([
        toAccessor(cssClasses || []),
        toAccessor(["WindowFullscreen"])
      ]),
      children: [
        /* @__PURE__ */ jsx(Gtk2.EventControllerKey, { onKeyPressed: closeOnPressEscapeKey }),
        /* @__PURE__ */ jsx(Gtk2.GestureClick, { onReleased: closeOnClickOutside }),
        /* @__PURE__ */ jsx(
          Gtk2.Box,
          {
            $: (ref) => contentbox = ref,
            valign: Gtk2.Align.CENTER,
            halign: Gtk2.Align.CENTER,
            children
          }
        )
      ]
    }
  );
}

// sass:/home/shimarulin/Проекты/Workstation/kotami/ns/apps/kotami-command-palette/views/CommandPalette/style.scss
var style_default2 = ".CommandPaletteContent {\n  color: @theme_fg_color;\n  background: @theme_bg_color;\n  border-radius: 8px;\n  border: 2px solid @borders;\n  padding: 6px;\n}";

// ns/apps/kotami-command-palette/views/CommandPalette/index.tsx
app_default.apply_css(style_default2);
function CommandPalette() {
  return /* @__PURE__ */ jsx(
    WindowFullscreen,
    {
      name: "command-palette",
      children: /* @__PURE__ */ jsx(
        Gtk2.Box,
        {
          name: "command-palette__content",
          cssClasses: ["CommandPaletteContent"],
          valign: Gtk2.Align.START,
          halign: Gtk2.Align.START,
          orientation: Gtk2.Orientation.VERTICAL,
          widthRequest: 600,
          heightRequest: 550,
          children: /* @__PURE__ */ jsx("label", { vexpand: false, hexpand: false, halign: Gtk2.Align.START, label: "ssss" })
        }
      )
    }
  );
}

// ns/apps/kotami-command-palette/app.ts
var applauncher;
app_default.start({
  /**
   * https://aylur.github.io/ags/guide/app-cli.html#instance-identifier
   *
   * Use in cli:
   * ags request show applications -i command-palette
   */
  instanceName: "command-palette",
  // css: style,
  // gtkTheme: 'Adwaita',
  requestHandler(argv, response) {
    const [
      cmd,
      arg,
      ...rest
    ] = argv;
    console.log("\ncommand-palette:");
    console.log(cmd);
    console.log(arg);
    console.log(rest);
    if (cmd === "show") {
      applauncher.present();
      return response("command-palette: visible");
    } else if (cmd === "hide") {
      applauncher.hide();
      return response("command-palette: hidden");
    }
    response("unknown command");
  },
  main() {
    applauncher = CommandPalette();
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9nb2JqZWN0LnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC91dGlsLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvYXBwLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9kYnVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2FwcC9kYnVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvanN4LnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRnJhZ21lbnQudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9zdGF0ZS50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2Vudi50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3Njb3BlLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvVGhpcy50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2luZGV4LnRzIiwgIm5zL2NvbXBvbmVudHMvV2luZG93RnVsbHNjcmVlbi9pbmRleC50c3giLCAibnMvbGlicy9nbmltLWV4dGVuc2lvbnMvY3JlYXRlQ29tcHV0ZWRBcnJheS50cyIsICJucy9saWJzL2duaW0tZXh0ZW5zaW9ucy90b0FjY2Vzc29yLnRzIiwgInNhc3M6L2hvbWUvc2hpbWFydWxpbi9cdTA0MUZcdTA0NDBcdTA0M0VcdTA0MzVcdTA0M0FcdTA0NDJcdTA0NEIvV29ya3N0YXRpb24va290YW1pL25zL2NvbXBvbmVudHMvV2luZG93RnVsbHNjcmVlbi9zdHlsZS5zY3NzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvanN4LXJ1bnRpbWUudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2d0azQvanN4LXJ1bnRpbWUudHMiLCAic2FzczovaG9tZS9zaGltYXJ1bGluL1x1MDQxRlx1MDQ0MFx1MDQzRVx1MDQzNVx1MDQzQVx1MDQ0Mlx1MDQ0Qi9Xb3Jrc3RhdGlvbi9rb3RhbWkvbnMvYXBwcy9rb3RhbWktY29tbWFuZC1wYWxldHRlL3ZpZXdzL0NvbW1hbmRQYWxldHRlL3N0eWxlLnNjc3MiLCAibnMvYXBwcy9rb3RhbWktY29tbWFuZC1wYWxldHRlL3ZpZXdzL0NvbW1hbmRQYWxldHRlL2luZGV4LnRzeCIsICJucy9hcHBzL2tvdGFtaS1jb21tYW5kLXBhbGV0dGUvYXBwLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvKipcbiAqIFdvcmthcm91bmQgZm9yIFwiQ2FuJ3QgY29udmVydCBub24tbnVsbCBwb2ludGVyIHRvIEpTIHZhbHVlIFwiXG4gKi9cblxuZXhwb3J0IHt9XG5cbmZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMV8kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHN1cHByZXNzPFQ+KG1vZDogUHJvbWlzZTx7IGRlZmF1bHQ6IFQgfT4sIHBhdGNoOiAobTogVCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBtb2QudGhlbigobSkgPT4gcGF0Y2gobS5kZWZhdWx0KSkuY2F0Y2goKCkgPT4gdm9pZCAwKVxufVxuXG5mdW5jdGlvbiBwYXRjaDxQIGV4dGVuZHMgb2JqZWN0Pihwcm90bzogUCwgcHJvcDogRXh0cmFjdDxrZXlvZiBQLCBzdHJpbmc+KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvLCBwcm9wLCB7XG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzW2BnZXRfJHtzbmFrZWlmeShwcm9wKX1gXSgpXG4gICAgICAgIH0sXG4gICAgfSlcbn1cblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEFwcHNcIiksICh7IEFwcHMsIEFwcGxpY2F0aW9uIH0pID0+IHtcbiAgICBwYXRjaChBcHBzLnByb3RvdHlwZSwgXCJsaXN0XCIpXG4gICAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCBcImtleXdvcmRzXCIpXG4gICAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCBcImNhdGVnb3JpZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxCYXR0ZXJ5XCIpLCAoeyBVUG93ZXIgfSkgPT4ge1xuICAgIHBhdGNoKFVQb3dlci5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJsdWV0b290aFwiKSwgKHsgQWRhcHRlciwgQmx1ZXRvb3RoLCBEZXZpY2UgfSkgPT4ge1xuICAgIHBhdGNoKEFkYXB0ZXIucHJvdG90eXBlLCBcInV1aWRzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJhZGFwdGVyc1wiKVxuICAgIHBhdGNoKEJsdWV0b290aC5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKERldmljZS5wcm90b3R5cGUsIFwidXVpZHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxIeXBybGFuZFwiKSwgKHsgSHlwcmxhbmQsIE1vbml0b3IsIFdvcmtzcGFjZSB9KSA9PiB7XG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcImJpbmRzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcIm1vbml0b3JzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcIndvcmtzcGFjZXNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiY2xpZW50c1wiKVxuICAgIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCBcImF2YWlsYWJsZU1vZGVzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlX21vZGVzXCIpXG4gICAgcGF0Y2goV29ya3NwYWNlLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTXByaXNcIiksICh7IE1wcmlzLCBQbGF5ZXIgfSkgPT4ge1xuICAgIHBhdGNoKE1wcmlzLnByb3RvdHlwZSwgXCJwbGF5ZXJzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRfdXJpX3NjaGVtZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZFVyaVNjaGVtZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF9taW1lX3R5cGVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRNaW1lVHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcImNvbW1lbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTmV0d29ya1wiKSwgKHsgV2lmaSB9KSA9PiB7XG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzX3BvaW50c1wiKVxuICAgIHBhdGNoKFdpZmkucHJvdG90eXBlLCBcImFjY2Vzc1BvaW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE5vdGlmZFwiKSwgKHsgTm90aWZkLCBOb3RpZmljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKE5vdGlmZC5wcm90b3R5cGUsIFwibm90aWZpY2F0aW9uc1wiKVxuICAgIHBhdGNoKE5vdGlmaWNhdGlvbi5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFBvd2VyUHJvZmlsZXNcIiksICh7IFBvd2VyUHJvZmlsZXMgfSkgPT4ge1xuICAgIHBhdGNoKFBvd2VyUHJvZmlsZXMucHJvdG90eXBlLCBcImFjdGlvbnNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxXcFwiKSwgKHsgV3AsIEF1ZGlvLCBWaWRlbyB9KSA9PiB7XG4gICAgcGF0Y2goV3AucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwic3RyZWFtc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJyZWNvcmRlcnNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwibWljcm9waG9uZXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwic3BlYWtlcnNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzdHJlYW1zXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInJlY29yZGVyc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzaW5rc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzb3VyY2VzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcImRldmljZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxUcmF5XCIpLCAoeyBUcmF5IH0pID0+IHtcbiAgICBwYXRjaChUcmF5LnByb3RvdHlwZSwgXCJpdGVtc1wiKVxufSlcbiIsICIvKipcbiAqIEluIHRoZSBmdXR1cmUgSSB3b3VsZCBsaWtlIHRvIG1ha2UgdHlwZSBkZWNsYXJhdGlvbiBpbiBkZWNvcmF0b3JzIG9wdGlvbmFsXG4gKiBhbmQgaW5mZXIgaXQgZnJvbSB0eXBlc2NyaXB0IHR5cGVzIGF0IHRyYW5zcGlsZSB0aW1lLiBDdXJyZW50bHksIHdlIGNvdWxkXG4gKiBlaXRoZXIgdXNlIHN0YWdlIDIgZGVjb3JhdG9ycyB3aXRoIHRoZSBcImVtaXREZWNvcmF0b3JNZXRhZGF0YVwiIGFuZFxuICogXCJleHBlcmltZW50YWxEZWNvcmF0b3JzXCIgdHNjb25maWcgb3B0aW9ucy4gSG93ZXZlciwgbWV0YWRhdGEgaXMgbm90IHN1cHBvcnRlZFxuICogYnkgZXNidWlsZCB3aGljaCBpcyB3aGF0IEknbSBtb3N0bHkgdGFyZ2V0aW5nIGFzIHRoZSBidW5kbGVyIGZvciBwZXJmb3JtYW5jZVxuICogcmVhc29ucy4gaHR0cHM6Ly9naXRodWIuY29tL2V2YW53L2VzYnVpbGQvaXNzdWVzLzI1N1xuICogSG93ZXZlciwgSSBiZWxpZXZlIHRoYXQgd2Ugc2hvdWxkIG5vdCB1c2Ugc3RhZ2UgMiBhbnltb3JlLFxuICogc28gSSdtIHdhaXRpbmcgZm9yIGEgYmV0dGVyIGFsdGVybmF0aXZlLlxuICovXG5cbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiXG5pbXBvcnQgeyBkZWZpbmVQcm9wZXJ0eUdldHRlciwga2ViYWJpZnkgfSBmcm9tIFwiLi91dGlsLmpzXCJcblxuY29uc3QgcHJpdiA9IFN5bWJvbChcImdvYmplY3QgcHJpdmF0ZVwiKVxuY29uc3QgeyBkZWZpbmVQcm9wZXJ0eSwgZnJvbUVudHJpZXMsIGVudHJpZXMgfSA9IE9iamVjdFxuY29uc3QgeyBPYmplY3Q6IEdPYmosIHJlZ2lzdGVyQ2xhc3MgfSA9IEdPYmplY3RcblxuZXhwb3J0IHsgR09iamVjdCBhcyBkZWZhdWx0IH1cbmV4cG9ydCB7IEdPYmogYXMgT2JqZWN0IH1cblxuZXhwb3J0IGNvbnN0IFNpZ25hbEZsYWdzID0gR09iamVjdC5TaWduYWxGbGFnc1xuZXhwb3J0IHR5cGUgU2lnbmFsRmxhZ3MgPSBHT2JqZWN0LlNpZ25hbEZsYWdzXG5cbmV4cG9ydCBjb25zdCBBY2N1bXVsYXRvclR5cGUgPSBHT2JqZWN0LkFjY3VtdWxhdG9yVHlwZVxuZXhwb3J0IHR5cGUgQWNjdW11bGF0b3JUeXBlID0gR09iamVjdC5BY2N1bXVsYXRvclR5cGVcblxuZXhwb3J0IHR5cGUgUGFyYW1TcGVjPFQgPSB1bmtub3duPiA9IEdPYmplY3QuUGFyYW1TcGVjPFQ+XG5leHBvcnQgY29uc3QgUGFyYW1TcGVjID0gR09iamVjdC5QYXJhbVNwZWNcblxuZXhwb3J0IHR5cGUgUGFyYW1GbGFncyA9IEdPYmplY3QuUGFyYW1GbGFnc1xuZXhwb3J0IGNvbnN0IFBhcmFtRmxhZ3MgPSBHT2JqZWN0LlBhcmFtRmxhZ3NcblxuZXhwb3J0IHR5cGUgR1R5cGU8VCA9IHVua25vd24+ID0gR09iamVjdC5HVHlwZTxUPlxuXG50eXBlIEdPYmogPSBHT2JqZWN0Lk9iamVjdFxuXG5pbnRlcmZhY2UgR09ialByaXZhdGUgZXh0ZW5kcyBHT2JqIHtcbiAgICBbcHJpdl06IFJlY29yZDxzdHJpbmcsIGFueT5cbn1cblxudHlwZSBNZXRhID0ge1xuICAgIHByb3BlcnRpZXM/OiB7XG4gICAgICAgIFtmaWVsZE5hbWU6IHN0cmluZ106IHtcbiAgICAgICAgICAgIGZsYWdzOiBQYXJhbUZsYWdzXG4gICAgICAgICAgICB0eXBlOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjx1bmtub3duPlxuICAgICAgICB9XG4gICAgfVxuICAgIHNpZ25hbHM/OiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHtcbiAgICAgICAgICAgIGRlZmF1bHQ/OiBib29sZWFuXG4gICAgICAgICAgICBmbGFncz86IFNpZ25hbEZsYWdzXG4gICAgICAgICAgICBhY2N1bXVsYXRvcj86IEFjY3VtdWxhdG9yVHlwZVxuICAgICAgICAgICAgcmV0dXJuX3R5cGU/OiBHVHlwZVxuICAgICAgICAgICAgcGFyYW1fdHlwZXM/OiBBcnJheTxHVHlwZT5cbiAgICAgICAgICAgIG1ldGhvZDogKC4uLmFyZzogYW55W10pID0+IHVua25vd25cbiAgICAgICAgfVxuICAgIH1cbn1cblxudHlwZSBDb250ZXh0ID0geyBwcml2YXRlOiBmYWxzZTsgc3RhdGljOiBmYWxzZTsgbmFtZTogc3RyaW5nIH1cbnR5cGUgUHJvcGVydHlDb250ZXh0PFQ+ID0gQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG50eXBlIEdldHRlckNvbnRleHQ8VD4gPSBDbGFzc0dldHRlckRlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG50eXBlIFNldHRlckNvbnRleHQ8VD4gPSBDbGFzc1NldHRlckRlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG50eXBlIFNpZ25hbENvbnRleHQ8VCBleHRlbmRzICgpID0+IGFueT4gPSBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG5cbnR5cGUgU2lnbmFsT3B0aW9ucyA9IHtcbiAgICBkZWZhdWx0PzogYm9vbGVhblxuICAgIGZsYWdzPzogU2lnbmFsRmxhZ3NcbiAgICBhY2N1bXVsYXRvcj86IEFjY3VtdWxhdG9yVHlwZVxufVxuXG50eXBlIFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPFQ+ID1cbiAgICB8ICgobmFtZTogc3RyaW5nLCBmbGFnczogUGFyYW1GbGFncykgPT4gUGFyYW1TcGVjPFQ+KVxuICAgIHwgUGFyYW1TcGVjPFQ+XG4gICAgfCB7ICRndHlwZTogR1R5cGU8VD4gfVxuXG5mdW5jdGlvbiBhc3NlcnRGaWVsZChcbiAgICBjdHg6IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0LFxuKTogc3RyaW5nIHtcbiAgICBpZiAoY3R4LnByaXZhdGUpIHRocm93IEVycm9yKFwicHJpdmF0ZSBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWRcIilcbiAgICBpZiAoY3R4LnN0YXRpYykgdGhyb3cgRXJyb3IoXCJzdGF0aWMgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkXCIpXG5cbiAgICBpZiAodHlwZW9mIGN0eC5uYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwib25seSBzdHJpbmdzIGNhbiBiZSBnb2JqZWN0IHByb3BlcnR5IGtleXNcIilcbiAgICB9XG5cbiAgICByZXR1cm4gY3R4Lm5hbWVcbn1cblxuLyoqXG4gKiBEZWZpbmVzIGEgcmVhZGFibGUgKmFuZCogd3JpdGVhYmxlIHByb3BlcnR5IHRvIGJlIHJlZ2lzdGVyZWQgd2hlbiB1c2luZyB0aGUge0BsaW5rIHJlZ2lzdGVyfSBkZWNvcmF0b3IuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAcHJvcGVydHkoU3RyaW5nKSBteVByb3AgPSBcIlwiXG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByb3BlcnR5PFQ+KHR5cGVEZWNsYXJhdGlvbjogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248VD4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBfOiB2b2lkLFxuICAgICAgICBjdHg6IFByb3BlcnR5Q29udGV4dDxUPixcbiAgICAgICAgb3B0aW9ucz86IHsgbWV0YU9ubHk6IHRydWUgfSxcbiAgICApOiAodGhpczogR09iaiwgaW5pdDogVCkgPT4gYW55IHtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gYXNzZXJ0RmllbGQoY3R4KVxuICAgICAgICBjb25zdCBrZXkgPSBrZWJhYmlmeShmaWVsZE5hbWUpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG5cbiAgICAgICAgbWV0YS5wcm9wZXJ0aWVzID8/PSB7fVxuICAgICAgICBtZXRhLnByb3BlcnRpZXNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IFBhcmFtRmxhZ3MuUkVBRFdSSVRFLCB0eXBlOiB0eXBlRGVjbGFyYXRpb24gfVxuXG4gICAgICAgIGN0eC5hZGRJbml0aWFsaXplcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eUdldHRlcih0aGlzLCBmaWVsZE5hbWUgYXMgRXh0cmFjdDxrZXlvZiBHT2JqLCBzdHJpbmc+KVxuXG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLm1ldGFPbmx5KSByZXR1cm5cblxuICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkodGhpcywgZmllbGROYW1lLCB7XG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNldCh2OiBUKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzW3ByaXZdW2tleV0gIT09IHYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbcHJpdl1ba2V5XSA9IHZcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KGtleSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0KCk6IFQge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpc1twcml2XVtrZXldXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gc2F0aXNmaWVzIFRoaXNUeXBlPEdPYmpQcml2YXRlPilcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGluaXQ6IFQpIHtcbiAgICAgICAgICAgIGNvbnN0IGRpY3QgPSAoKHRoaXMgYXMgR09ialByaXZhdGUpW3ByaXZdID8/PSB7fSlcbiAgICAgICAgICAgIGRpY3Rba2V5XSA9IGluaXRcbiAgICAgICAgICAgIHJldHVybiBpbml0XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogRGVmaW5lcyBhIHJlYWQtb25seSBwcm9wZXJ0eSB0byBiZSByZWdpc3RlcmVkIHdoZW4gdXNpbmcgdGhlIHtAbGluayByZWdpc3Rlcn0gZGVjb3JhdG9yLlxuICogSWYgdGhlIGdldHRlciBoYXMgYSBzZXR0ZXIgcGFpciBkZWNvcmF0ZWQgd2l0aCB0aGUge0BsaW5rIHNldHRlcn0gZGVjb3JhdG9yIHRoZSBwcm9wZXJ0eSB3aWxsIGJlIHJlYWRhYmxlICphbmQqIHdyaXRlYWJsZS5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNsYXNzIHtcbiAqICAgICBcXEBzZXR0ZXIoU3RyaW5nKVxuICogICAgIHNldCBteVByb3AodmFsdWU6IHN0cmluZykge1xuICogICAgICAgICAvL1xuICogICAgIH1cbiAqXG4gKiAgICAgXFxAZ2V0dGVyKFN0cmluZylcbiAqICAgICBnZXQgbXlQcm9wKCk6IHN0cmluZyB7XG4gKiAgICAgICAgIHJldHVybiBcIlwiXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXR0ZXI8VD4odHlwZURlY2xhcmF0aW9uOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjxUPikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoZ2V0OiAodGhpczogR09iaikgPT4gYW55LCBjdHg6IEdldHRlckNvbnRleHQ8VD4pIHtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gYXNzZXJ0RmllbGQoY3R4KVxuICAgICAgICBjb25zdCBtZXRhOiBQYXJ0aWFsPE1ldGE+ID0gY3R4Lm1ldGFkYXRhIVxuICAgICAgICBjb25zdCBwcm9wcyA9IChtZXRhLnByb3BlcnRpZXMgPz89IHt9KVxuICAgICAgICBpZiAoZmllbGROYW1lIGluIHByb3BzKSB7XG4gICAgICAgICAgICBjb25zdCB7IGZsYWdzLCB0eXBlIH0gPSBwcm9wc1tmaWVsZE5hbWVdXG4gICAgICAgICAgICBwcm9wc1tmaWVsZE5hbWVdID0geyBmbGFnczogZmxhZ3MgfCBQYXJhbUZsYWdzLlJFQURBQkxFLCB0eXBlIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBQYXJhbUZsYWdzLlJFQURBQkxFLCB0eXBlOiB0eXBlRGVjbGFyYXRpb24gfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBnZXRcbiAgICB9XG59XG5cbi8qKlxuICogRGVmaW5lcyBhIHdyaXRlLW9ubHkgcHJvcGVydHkgdG8gYmUgcmVnaXN0ZXJlZCB3aGVuIHVzaW5nIHRoZSB7QGxpbmsgcmVnaXN0ZXJ9IGRlY29yYXRvci5cbiAqIElmIHRoZSBzZXR0ZXIgaGFzIGEgZ2V0dGVyIHBhaXIgZGVjb3JhdGVkIHdpdGggdGhlIHtAbGluayBnZXR0ZXJ9IGRlY29yYXRvciB0aGUgcHJvcGVydHkgd2lsbCBiZSB3cml0ZWFibGUgKmFuZCogcmVhZGFibGUuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAc2V0dGVyKFN0cmluZylcbiAqICAgICBzZXQgbXlQcm9wKHZhbHVlOiBzdHJpbmcpIHtcbiAqICAgICAgICAgLy9cbiAqICAgICB9XG4gKlxuICogICAgIFxcQGdldHRlcihTdHJpbmcpXG4gKiAgICAgZ2V0IG15UHJvcCgpOiBzdHJpbmcge1xuICogICAgICAgICByZXR1cm4gXCJcIlxuICogICAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0dGVyPFQ+KHR5cGVEZWNsYXJhdGlvbjogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248VD4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHNldDogKHRoaXM6IEdPYmosIHZhbHVlOiBhbnkpID0+IHZvaWQsIGN0eDogU2V0dGVyQ29udGV4dDxUPikge1xuICAgICAgICBjb25zdCBmaWVsZE5hbWUgPSBhc3NlcnRGaWVsZChjdHgpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG4gICAgICAgIGNvbnN0IHByb3BzID0gKG1ldGEucHJvcGVydGllcyA/Pz0ge30pXG4gICAgICAgIGlmIChmaWVsZE5hbWUgaW4gcHJvcHMpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZmxhZ3MsIHR5cGUgfSA9IHByb3BzW2ZpZWxkTmFtZV1cbiAgICAgICAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBmbGFncyB8IFBhcmFtRmxhZ3MuV1JJVEFCTEUsIHR5cGUgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvcHNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IFBhcmFtRmxhZ3MuV1JJVEFCTEUsIHR5cGU6IHR5cGVEZWNsYXJhdGlvbiB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNldFxuICAgIH1cbn1cblxudHlwZSBQYXJhbVR5cGU8UD4gPSBQIGV4dGVuZHMgeyAkZ3R5cGU6IEdUeXBlPGluZmVyIFQ+IH0gPyBUIDogUCBleHRlbmRzIEdUeXBlPGluZmVyIFQ+ID8gVCA6IG5ldmVyXG5cbnR5cGUgUGFyYW1UeXBlczxQYXJhbXM+ID0ge1xuICAgIFtLIGluIGtleW9mIFBhcmFtc106IFBhcmFtVHlwZTxQYXJhbXNbS10+XG59XG5cbi8qKlxuICogRGVmaW5lcyBhIHNpZ25hbCB0byBiZSByZWdpc3RlcmVkIHdoZW4gdXNpbmcgdGhlIHtAbGluayByZWdpc3Rlcn0gZGVjb3JhdG9yLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY2xhc3Mge1xuICogICAgIFxcQHNpZ25hbChbU3RyaW5nLCBOdW1iZXJdLCBCb29sZWFuLCB7XG4gKiAgICAgICAgIGFjY3VtdWxhdG9yOiBBY2N1bXVsYXRvclR5cGUuRklSU1RfV0lOU1xuICogICAgIH0pXG4gKiAgICAgbXlTaWduYWwoc3RyOiBzdHJpbmcsIG46IG51bWJlcik6IGJvb2xlYW4ge1xuICogICAgICAgICAvLyBkZWZhdWx0IGhhbmRsZXJcbiAqICAgICAgICAgcmV0dXJuIGZhbHNlXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8XG4gICAgY29uc3QgUGFyYW1zIGV4dGVuZHMgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZT4sXG4gICAgUmV0dXJuIGV4dGVuZHMgeyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZSxcbj4oXG4gICAgcGFyYW1zOiBQYXJhbXMsXG4gICAgcmV0dXJuVHlwZTogUmV0dXJuLFxuICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zLFxuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IEdPYmosIC4uLmFyZ3M6IGFueSkgPT4gUGFyYW1UeXBlPFJldHVybj4sXG4gICAgY3R4OiBTaWduYWxDb250ZXh0PHR5cGVvZiBtZXRob2Q+LFxuKSA9PiAodGhpczogR09iaiwgLi4uYXJnczogUGFyYW1UeXBlczxQYXJhbXM+KSA9PiBhbnlcblxuLyoqXG4gKiBEZWZpbmVzIGEgc2lnbmFsIHRvIGJlIHJlZ2lzdGVyZWQgd2hlbiB1c2luZyB0aGUge0BsaW5rIHJlZ2lzdGVyfSBkZWNvcmF0b3IuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAc2lnbmFsKFN0cmluZywgTnVtYmVyKVxuICogICAgIG15U2lnbmFsKHN0cjogc3RyaW5nLCBuOiBudW1iZXIpOiB2b2lkIHtcbiAqICAgICAgICAgLy8gZGVmYXVsdCBoYW5kbGVyXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8UGFyYW1zIGV4dGVuZHMgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZT4+KFxuICAgIC4uLnBhcmFtczogUGFyYW1zXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogR09iamVjdC5PYmplY3QsIC4uLmFyZ3M6IGFueSkgPT4gdm9pZCxcbiAgICBjdHg6IFNpZ25hbENvbnRleHQ8dHlwZW9mIG1ldGhvZD4sXG4pID0+ICh0aGlzOiBHT2JqZWN0Lk9iamVjdCwgLi4uYXJnczogUGFyYW1UeXBlczxQYXJhbXM+KSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8XG4gICAgUGFyYW1zIGV4dGVuZHMgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZT4sXG4gICAgUmV0dXJuIGV4dGVuZHMgeyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZSxcbj4oXG4gICAgLi4uYXJnczogUGFyYW1zIHwgW3BhcmFtczogUGFyYW1zLCByZXR1cm5UeXBlPzogUmV0dXJuLCBvcHRpb25zPzogU2lnbmFsT3B0aW9uc11cbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBHT2JqLCAuLi5hcmdzOiBQYXJhbVR5cGVzPFBhcmFtcz4pID0+IFBhcmFtVHlwZTxSZXR1cm4+IHwgdm9pZCxcbiAgICBjdHg6IFNpZ25hbENvbnRleHQ8dHlwZW9mIG1ldGhvZD4sXG4pID0+IHR5cGVvZiBtZXRob2Qge1xuICAgIHJldHVybiBmdW5jdGlvbiAobWV0aG9kLCBjdHgpIHtcbiAgICAgICAgaWYgKGN0eC5wcml2YXRlKSB0aHJvdyBFcnJvcihcInByaXZhdGUgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkXCIpXG4gICAgICAgIGlmIChjdHguc3RhdGljKSB0aHJvdyBFcnJvcihcInN0YXRpYyBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWRcIilcblxuICAgICAgICBpZiAodHlwZW9mIGN0eC5uYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIm9ubHkgc3RyaW5ncyBjYW4gYmUgZ29iamVjdCBzaWduYWxzXCIpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzaWduYWxOYW1lID0ga2ViYWJpZnkoY3R4Lm5hbWUpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG4gICAgICAgIGNvbnN0IHNpZ25hbHMgPSAobWV0YS5zaWduYWxzID8/PSB7fSlcblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkge1xuICAgICAgICAgICAgY29uc3QgW3BhcmFtcywgcmV0dXJuVHlwZSwgb3B0aW9uc10gPSBhcmdzIGFzIFtcbiAgICAgICAgICAgICAgICBwYXJhbXM6IFBhcmFtcyxcbiAgICAgICAgICAgICAgICByZXR1cm5UeXBlPzogUmV0dXJuLFxuICAgICAgICAgICAgICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zLFxuICAgICAgICAgICAgXVxuXG4gICAgICAgICAgICBzaWduYWxzW3NpZ25hbE5hbWVdID0ge1xuICAgICAgICAgICAgICAgIG1ldGhvZCxcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiBvcHRpb25zPy5kZWZhdWx0ID8/IHRydWUsXG4gICAgICAgICAgICAgICAgcGFyYW1fdHlwZXM6IHBhcmFtcy5tYXAoKGkpID0+IChcIiRndHlwZVwiIGluIGkgPyBpLiRndHlwZSA6IGkpKSxcbiAgICAgICAgICAgICAgICAuLi4ocmV0dXJuVHlwZSAmJiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybl90eXBlOiBcIiRndHlwZVwiIGluIHJldHVyblR5cGUgPyByZXR1cm5UeXBlLiRndHlwZSA6IHJldHVyblR5cGUsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLi4uKG9wdGlvbnM/LmZsYWdzICYmIHtcbiAgICAgICAgICAgICAgICAgICAgZmxhZ3M6IG9wdGlvbnMuZmxhZ3MsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLi4uKHR5cGVvZiBvcHRpb25zPy5hY2N1bXVsYXRvciA9PT0gXCJudW1iZXJcIiAmJiB7XG4gICAgICAgICAgICAgICAgICAgIGFjY3VtdWxhdG9yOiBvcHRpb25zLmFjY3VtdWxhdG9yLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gYXJncyBhcyBQYXJhbXNcbiAgICAgICAgICAgIHNpZ25hbHNbc2lnbmFsTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgcGFyYW1fdHlwZXM6IHBhcmFtcy5tYXAoKGkpID0+IChcIiRndHlwZVwiIGluIGkgPyBpLiRndHlwZSA6IGkpKSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4ucGFyYW1zKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5lbWl0KHNpZ25hbE5hbWUsIC4uLnBhcmFtcykgYXMgUGFyYW1UeXBlPFJldHVybj5cbiAgICAgICAgfVxuICAgIH1cbn1cblxuY29uc3QgTUFYSU5UID0gMiAqKiAzMSAtIDFcbmNvbnN0IE1JTklOVCA9IC0oMiAqKiAzMSlcbmNvbnN0IE1BWFVJTlQgPSAyICoqIDMyIC0gMVxuY29uc3QgTUFYRkxPQVQgPSAzLjQwMjgyMzVlMzhcbmNvbnN0IE1JTkZMT0FUID0gLTMuNDAyODIzNWUzOFxuY29uc3QgTUlOSU5UNjQgPSBOdW1iZXIuTUlOX1NBRkVfSU5URUdFUlxuY29uc3QgTUFYSU5UNjQgPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUlxuXG5mdW5jdGlvbiBwc3BlY0Zyb21HVHlwZSh0eXBlOiBHVHlwZTx1bmtub3duPiwgbmFtZTogc3RyaW5nLCBmbGFnczogUGFyYW1GbGFncykge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9CT09MRUFOOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5ib29sZWFuKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBmYWxzZSlcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfU1RSSU5HOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5zdHJpbmcobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIFwiXCIpXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0lOVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuaW50KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBNSU5JTlQsIE1BWElOVCwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfVUlOVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMudWludChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgMCwgTUFYVUlOVCwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfSU5UNjQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmludDY0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBNSU5JTlQ2NCwgTUFYSU5UNjQsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1VJTlQ2NDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMudWludDY0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCAwLCBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfRkxPQVQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmZsb2F0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBNSU5GTE9BVCwgTUFYRkxPQVQsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0RPVUJMRTpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuZG91YmxlKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBOdW1iZXIuTUlOX1ZBTFVFLCBOdW1iZXIuTUlOX1ZBTFVFLCAwKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9KU09CSkVDVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuanNvYmplY3QobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MpXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1ZBUklBTlQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLm9iamVjdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncyBhcyBhbnksIEdMaWIuVmFyaWFudClcblxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9FTlVNOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9JTlRFUkZBQ0U6XG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0JPWEVEOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9QT0lOVEVSOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9QQVJBTTpcbiAgICAgICAgY2FzZSBHT2JqZWN0LnR5cGVfZnJvbV9uYW1lKFwiR1R5cGVcIik6XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGd1ZXNzIFBhcmFtU3BlYyBmcm9tIEdUeXBlIFwiJHt0eXBlfVwiYClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfT0JKRUNUOlxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5vYmplY3QobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MgYXMgYW55LCB0eXBlKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gcHNwZWMobmFtZTogc3RyaW5nLCBmbGFnczogUGFyYW1GbGFncywgZGVjbGFyYXRpb246IFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPHVua25vd24+KSB7XG4gICAgaWYgKGRlY2xhcmF0aW9uIGluc3RhbmNlb2YgUGFyYW1TcGVjKSByZXR1cm4gZGVjbGFyYXRpb25cblxuICAgIGlmIChkZWNsYXJhdGlvbiA9PT0gT2JqZWN0IHx8IGRlY2xhcmF0aW9uID09PSBGdW5jdGlvbiB8fCBkZWNsYXJhdGlvbiA9PT0gQXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5qc29iamVjdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncylcbiAgICB9XG5cbiAgICBpZiAoZGVjbGFyYXRpb24gPT09IFN0cmluZykge1xuICAgICAgICByZXR1cm4gUGFyYW1TcGVjLnN0cmluZyhuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgXCJcIilcbiAgICB9XG5cbiAgICBpZiAoZGVjbGFyYXRpb24gPT09IE51bWJlcikge1xuICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmRvdWJsZShuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgLU51bWJlci5NQVhfVkFMVUUsIE51bWJlci5NQVhfVkFMVUUsIDApXG4gICAgfVxuXG4gICAgaWYgKGRlY2xhcmF0aW9uID09PSBCb29sZWFuKSB7XG4gICAgICAgIHJldHVybiBQYXJhbVNwZWMuYm9vbGVhbihuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgZmFsc2UpXG4gICAgfVxuXG4gICAgaWYgKFwiJGd0eXBlXCIgaW4gZGVjbGFyYXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHBzcGVjRnJvbUdUeXBlKGRlY2xhcmF0aW9uLiRndHlwZSwgbmFtZSwgZmxhZ3MpXG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBkZWNsYXJhdGlvbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBkZWNsYXJhdGlvbihuYW1lLCBmbGFncylcbiAgICB9XG5cbiAgICB0aHJvdyBFcnJvcihcImludmFsaWQgUHJvcGVydHlUeXBlRGVjbGFyYXRpb25cIilcbn1cblxudHlwZSBNZXRhSW5mbyA9IEdPYmplY3QuTWV0YUluZm88bmV2ZXIsIEFycmF5PHsgJGd0eXBlOiBHVHlwZTx1bmtub3duPiB9PiwgbmV2ZXI+XG5cbi8qKlxuICogUmVwbGFjZW1lbnQgZm9yIHtAbGluayBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3N9XG4gKiBUaGlzIGRlY29yYXRvciBjb25zdW1lcyBtZXRhZGF0YSBuZWVkZWQgdG8gcmVnaXN0ZXIgdHlwZXMgd2hlcmUgdGhlIHByb3ZpZGVkIGRlY29yYXRvcnMgYXJlIHVzZWQ6XG4gKiAtIHtAbGluayBzaWduYWx9XG4gKiAtIHtAbGluayBwcm9wZXJ0eX1cbiAqIC0ge0BsaW5rIGdldHRlcn1cbiAqIC0ge0BsaW5rIHNldHRlcn1cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIFxcQHJlZ2lzdGVyKHsgR1R5cGVOYW1lOiBcIk15Q2xhc3NcIiB9KVxuICogY2xhc3MgTXlDbGFzcyBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHsgfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlcjxDbHMgZXh0ZW5kcyB7IG5ldyAoLi4uYXJnczogYW55KTogR09iaiB9PihvcHRpb25zOiBNZXRhSW5mbyA9IHt9KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjbHM6IENscywgY3R4OiBDbGFzc0RlY29yYXRvckNvbnRleHQ8Q2xzPikge1xuICAgICAgICBjb25zdCB0ID0gb3B0aW9ucy5UZW1wbGF0ZVxuXG4gICAgICAgIGlmICh0eXBlb2YgdCA9PT0gXCJzdHJpbmdcIiAmJiAhdC5zdGFydHNXaXRoKFwicmVzb3VyY2U6Ly9cIikgJiYgIXQuc3RhcnRzV2l0aChcImZpbGU6Ly9cIikpIHtcbiAgICAgICAgICAgIG9wdGlvbnMuVGVtcGxhdGUgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGEhIGFzIE1ldGFcblxuICAgICAgICBjb25zdCBwcm9wczogUmVjb3JkPHN0cmluZywgUGFyYW1TcGVjPHVua25vd24+PiA9IGZyb21FbnRyaWVzKFxuICAgICAgICAgICAgZW50cmllcyhtZXRhLnByb3BlcnRpZXMgPz8ge30pLm1hcCgoW2ZpZWxkTmFtZSwgeyBmbGFncywgdHlwZSB9XSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGtlYmFiaWZ5KGZpZWxkTmFtZSlcbiAgICAgICAgICAgICAgICBjb25zdCBzcGVjID0gcHNwZWMoa2V5LCBmbGFncywgdHlwZSlcbiAgICAgICAgICAgICAgICByZXR1cm4gW2tleSwgc3BlY11cbiAgICAgICAgICAgIH0pLFxuICAgICAgICApXG5cbiAgICAgICAgY29uc3Qgc2lnbmFscyA9IGZyb21FbnRyaWVzKFxuICAgICAgICAgICAgZW50cmllcyhtZXRhLnNpZ25hbHMgPz8ge30pLm1hcCgoW3NpZ25hbE5hbWUsIHsgZGVmYXVsdDogZGVmLCBtZXRob2QsIC4uLnNpZ25hbCB9XSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChkZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkoY2xzLnByb3RvdHlwZSwgYG9uXyR7c2lnbmFsTmFtZS5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IG1ldGhvZCxcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtzaWduYWxOYW1lLCBzaWduYWxdXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgKVxuXG4gICAgICAgIGRlbGV0ZSBtZXRhLnByb3BlcnRpZXNcbiAgICAgICAgZGVsZXRlIG1ldGEuc2lnbmFsc1xuXG4gICAgICAgIHJlZ2lzdGVyQ2xhc3MoeyAuLi5vcHRpb25zLCBQcm9wZXJ0aWVzOiBwcm9wcywgU2lnbmFsczogc2lnbmFscyB9LCBjbHMpXG4gICAgfVxufVxuXG4vKipcbiAqIEBleHBlcmltZW50YWxcbiAqIEFzc2VydHMgYSBndHlwZSBpbiBjYXNlcyB3aGVyZSB0aGUgdHlwZSBpcyB0b28gbG9vc2Uvc3RyaWN0LlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogdHlwZSBUdXBsZSA9IFtudW1iZXIsIG51bWJlcl1cbiAqIGNvbnN0IFR1cGxlID0gZ3R5cGU8VHVwbGU+KEFycmF5KVxuICpcbiAqIGNsYXNzIHtcbiAqICAgXFxAcHJvcGVydHkoVHVwbGUpIHZhbHVlID0gWzEsIDJdIGFzIFR1cGxlXG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGd0eXBlPEFzc2VydD4odHlwZTogR1R5cGU8YW55PiB8IHsgJGd0eXBlOiBHVHlwZTxhbnk+IH0pOiB7XG4gICAgJGd0eXBlOiBHVHlwZTxBc3NlcnQ+XG59IHtcbiAgICByZXR1cm4gXCIkZ3R5cGVcIiBpbiB0eXBlID8gdHlwZSA6IHsgJGd0eXBlOiB0eXBlIH1cbn1cblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIGludGVyZmFjZSBGdW5jdGlvbkNvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTwoLi4uYXJnczogYW55W10pID0+IGFueT5cbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgQXJyYXlDb25zdHJ1Y3RvciB7XG4gICAgICAgICRndHlwZTogR1R5cGU8YW55W10+XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIERhdGVDb25zdHJ1Y3RvciB7XG4gICAgICAgICRndHlwZTogR1R5cGU8RGF0ZT5cbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgTWFwQ29uc3RydWN0b3Ige1xuICAgICAgICAkZ3R5cGU6IEdUeXBlPE1hcDxhbnksIGFueT4+XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIFNldENvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTxTZXQ8YW55Pj5cbiAgICB9XG59XG5cbkZ1bmN0aW9uLiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgRnVuY3Rpb25Db25zdHJ1Y3RvcltcIiRndHlwZVwiXVxuQXJyYXkuJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBBcnJheUNvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG5EYXRlLiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgRGF0ZUNvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG5NYXAuJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBNYXBDb25zdHJ1Y3RvcltcIiRndHlwZVwiXVxuU2V0LiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgU2V0Q29uc3RydWN0b3JbXCIkZ3R5cGVcIl1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG5leHBvcnQgZnVuY3Rpb24ga2ViYWJpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiX1wiLCBcIi1cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYW1lbGlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvWy1fXSguKS9nLCAoXywgY2hhcikgPT4gY2hhci50b1VwcGVyQ2FzZSgpKVxufVxuXG5leHBvcnQgdHlwZSBQYXNjYWxpZnk8Uz4gPSBTIGV4dGVuZHMgYCR7aW5mZXIgSGVhZH0ke1wiLVwiIHwgXCJfXCJ9JHtpbmZlciBUYWlsfWBcbiAgICA/IGAke0NhcGl0YWxpemU8SGVhZD59JHtQYXNjYWxpZnk8VGFpbD59YFxuICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgPyBDYXBpdGFsaXplPFM+XG4gICAgICA6IG5ldmVyXG5cbmV4cG9ydCB0eXBlIFhtbE5vZGUgPSB7XG4gICAgbmFtZTogc3RyaW5nXG4gICAgYXR0cmlidXRlcz86IFJlY29yZDxzdHJpbmcsIHN0cmluZz5cbiAgICBjaGlsZHJlbj86IEFycmF5PFhtbE5vZGU+XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB4bWwoeyBuYW1lLCBhdHRyaWJ1dGVzLCBjaGlsZHJlbiB9OiBYbWxOb2RlKSB7XG4gICAgbGV0IGJ1aWxkZXIgPSBgPCR7bmFtZX1gXG5cbiAgICBjb25zdCBhdHRycyA9IE9iamVjdC5lbnRyaWVzKGF0dHJpYnV0ZXMgPz8gW10pXG5cbiAgICBpZiAoYXR0cnMubGVuZ3RoID4gMCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBhdHRycykge1xuICAgICAgICAgICAgYnVpbGRlciArPSBgICR7a2V5fT1cIiR7dmFsdWV9XCJgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICBidWlsZGVyICs9IFwiPlwiXG4gICAgICAgIGZvciAoY29uc3Qgbm9kZSBvZiBjaGlsZHJlbikge1xuICAgICAgICAgICAgYnVpbGRlciArPSB4bWwobm9kZSlcbiAgICAgICAgfVxuICAgICAgICBidWlsZGVyICs9IGA8LyR7bmFtZX0+YFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGJ1aWxkZXIgKz0gXCIgLz5cIlxuICAgIH1cblxuICAgIHJldHVybiBidWlsZGVyXG59XG5cbi8vIEJpbmRpbmdzIHdvcmsgb3ZlciBwcm9wZXJ0aWVzIGluIGtlYmFiLWNhc2UgYmVjYXVzZSB0aGF0cyB0aGUgY29udmVudGlvbiBvZiBnb2JqZWN0XG4vLyBob3dldmVyIGluIGpzIGl0cyBlaXRoZXIgc25ha2VfY2FzZSBvciBjYW1lbENhc2Vcbi8vIGFsc28gb24gREJ1cyBpbnRlcmZhY2VzIGl0cyBQYXNjYWxDYXNlIGJ5IGNvbnZlbnRpb25cbi8vIHNvIGFzIGEgd29ya2Fyb3VuZCB3ZSB1c2UgZ2V0X3Byb3BlcnR5X25hbWUgYW5kIG9ubHkgdXNlIHRoZSBwcm9wZXJ0eSBmaWVsZCBhcyBhIGZhbGxiYWNrXG5leHBvcnQgZnVuY3Rpb24gZGVmaW5lUHJvcGVydHlHZXR0ZXI8VCBleHRlbmRzIG9iamVjdD4ob2JqZWN0OiBULCBwcm9wOiBFeHRyYWN0PGtleW9mIFQsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBgZ2V0XyR7a2ViYWJpZnkocHJvcCkucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6ICgpID0+IG9iamVjdFtwcm9wXSxcbiAgICB9KVxufVxuXG4vLyBhdHRlbXB0IHNldHRpbmcgYSBwcm9wZXJ0eSBvZiBHT2JqZWN0Lk9iamVjdFxuZXhwb3J0IGZ1bmN0aW9uIHNldChvYmo6IEdPYmplY3QuT2JqZWN0LCBwcm9wOiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICBjb25zdCBrZXkgPSBzbmFrZWlmeShwcm9wKVxuICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtrZXl9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqXG4gICAgY29uc3Qgc2V0dGVyID0gYHNldF8ke2tleX1gIGFzIGtleW9mIHR5cGVvZiBvYmpcblxuICAgIGxldCBjdXJyZW50OiB1bmtub3duXG5cbiAgICBpZiAoZ2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW2dldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBjdXJyZW50ID0gKG9ialtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKClcbiAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50ID0gb2JqW3Byb3AgYXMga2V5b2YgdHlwZW9mIG9ial1cbiAgICB9XG5cbiAgICBpZiAoY3VycmVudCAhPT0gdmFsdWUpIHtcbiAgICAgICAgaWYgKHNldHRlciBpbiBvYmogJiYgdHlwZW9mIG9ialtzZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIDsob2JqW3NldHRlcl0gYXMgKHY6IGFueSkgPT4gdm9pZCkodmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKG9iaiwgeyBbcHJvcF06IHZhbHVlIH0pXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IFwiLi4vb3ZlcnJpZGVzLmpzXCJcbmltcG9ydCBHT2JqZWN0LCB7IHJlZ2lzdGVyLCBzaWduYWwsIHNldHRlciB9IGZyb20gXCJnbmltL2dvYmplY3RcIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2RrIGZyb20gXCJnaTovL0dkaz92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgeyBnZXR0ZXIgfSBmcm9tIFwiZ25pbS9nb2JqZWN0XCJcbmltcG9ydCB7IEFwcERCdXMgfSBmcm9tIFwiLi4vYXBwL2RidXMuanNcIlxuaW1wb3J0IHsgc2V0Q29uc29sZUxvZ0RvbWFpbiB9IGZyb20gXCJjb25zb2xlXCJcbmltcG9ydCB7IGV4aXQsIHByb2dyYW1BcmdzIH0gZnJvbSBcInN5c3RlbVwiXG5pbXBvcnQgeyBjcmVhdGVSb290IH0gZnJvbSBcImduaW1cIlxuXG5HdGsuaW5pdCgpXG5cbi8vIHN0b3AgdGhpcyBmcm9tIGxlYWtpbmcgaW50byBzdWJwcm9jZXNzZXNcbi8vIGFuZCBnaW8gbGF1bmNoIGludm9jYXRpb25zXG5HTGliLnVuc2V0ZW52KFwiTERfUFJFTE9BRFwiKVxuXG4vLyB1c2VycyBtaWdodCB3YW50IHRvIHVzZSBBZHdhaXRhIGluIHdoaWNoIGNhc2UgaXQgaGFzIHRvIGJlIGluaXRpYWxpemVkXG4vLyBpdCBtaWdodCBiZSBjb21tb24gcGl0ZmFsbCB0byBmb3JnZXQgaXQgYmVjYXVzZSBgQXBwYCBpcyBub3QgYEFkdy5BcHBsaWNhdGlvbmBcbmF3YWl0IGltcG9ydChcImdpOi8vQWR3P3ZlcnNpb249MVwiKS50aGVuKCh7IGRlZmF1bHQ6IEFkdyB9KSA9PiBBZHcuaW5pdCgpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG5cbnR5cGUgU3RhcnRDb25maWcgPSBQYXJ0aWFsPHtcbiAgICBpbnN0YW5jZU5hbWU6IHN0cmluZ1xuICAgIGNzczogc3RyaW5nXG4gICAgaWNvbnM6IHN0cmluZ1xuICAgIGd0a1RoZW1lOiBzdHJpbmdcbiAgICBpY29uVGhlbWU6IHN0cmluZ1xuICAgIGN1cnNvclRoZW1lOiBzdHJpbmdcbiAgICBtYWluKC4uLmFyZ3Y6IHN0cmluZ1tdKTogdm9pZFxuICAgIHJlcXVlc3RIYW5kbGVyKGFyZ3Y6IHN0cmluZ1tdLCByZXM6IChyZXNwb25zZTogYW55KSA9PiB2b2lkKTogdm9pZFxufT5cblxuaW50ZXJmYWNlIEFwcFNpZ25hbHMgZXh0ZW5kcyBHdGsuQXBwbGljYXRpb24uU2lnbmFsU2lnbmF0dXJlcyB7XG4gICAgXCJyZXF1ZXN0XCI6IEFwcFtcInJlcXVlc3RcIl1cbiAgICBcIndpbmRvdy10b2dnbGVkXCI6IEFwcFtcIndpbmRvd1RvZ2dsZWRcIl1cbn1cblxuQHJlZ2lzdGVyKClcbmNsYXNzIEFwcCBleHRlbmRzIEd0ay5BcHBsaWNhdGlvbiB7XG4gICAgZGVjbGFyZSAkc2lnbmFsczogQXBwU2lnbmFsc1xuXG4gICAgI2luc3RhbmNlTmFtZSA9IFwiYWdzXCJcbiAgICAjbWFpbj86ICguLi5hcmd2OiBzdHJpbmdbXSkgPT4gdm9pZFxuICAgICNyZXF1ZXN0SGFuZGxlcnMgPSAwXG4gICAgI2RidXNTZXJ2aWNlOiBBcHBEQnVzXG4gICAgI2Nzc1Byb3ZpZGVycyA9IG5ldyBBcnJheTxHdGsuQ3NzUHJvdmlkZXI+KClcblxuICAgIGdldCAjc2V0dGluZ3MoKTogR3RrLlNldHRpbmdzIHtcbiAgICAgICAgY29uc3Qgc2V0dGluZ3MgPSBHdGsuU2V0dGluZ3MuZ2V0X2RlZmF1bHQoKVxuICAgICAgICBpZiAoIXNldHRpbmdzKSB0aHJvdyBFcnJvcihcImNvdWxkIG5vdCBnZXQgc2V0dGluZ3NcIilcbiAgICAgICAgcmV0dXJuIHNldHRpbmdzXG4gICAgfVxuXG4gICAgZ2V0ICNkaXNwbGF5KCk6IEdkay5EaXNwbGF5IHtcbiAgICAgICAgY29uc3QgZGlzcGxheSA9IEdkay5EaXNwbGF5LmdldF9kZWZhdWx0KClcbiAgICAgICAgaWYgKCFkaXNwbGF5KSB0aHJvdyBFcnJvcihcImNvdWxkIG5vdCBnZXQgZGlzcGxheVwiKVxuICAgICAgICByZXR1cm4gZGlzcGxheVxuICAgIH1cblxuICAgIGdldCBpbnN0YW5jZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNpbnN0YW5jZU5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgYWxsIG1vbml0b3JzIGZyb20ge0BsaW5rIEdkay5EaXNwbGF5fS5cbiAgICAgKi9cbiAgICBnZXRfbW9uaXRvcnMoKSB7XG4gICAgICAgIGNvbnN0IG1vbnMgPSB0aGlzLiNkaXNwbGF5LmdldF9tb25pdG9ycygpIGFzIEdpby5MaXN0TW9kZWw8R2RrLk1vbml0b3I+XG4gICAgICAgIGNvbnN0IGxpc3QgPSBuZXcgQXJyYXk8R2RrLk1vbml0b3I+KClcblxuICAgICAgICBsZXQgbW9uaXRvcjogR2RrLk1vbml0b3IgfCBudWxsID0gbnVsbFxuICAgICAgICBsZXQgaSA9IDBcblxuICAgICAgICB3aGlsZSAoKG1vbml0b3IgPSBtb25zLmdldF9pdGVtKGkrKykpICE9PSBudWxsKSB7XG4gICAgICAgICAgICBsaXN0LnB1c2gobW9uaXRvcilcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBsaXN0XG4gICAgfVxuXG4gICAgQHNpZ25hbChHdGsuV2luZG93KVxuICAgIHByaXZhdGUgd2luZG93VG9nZ2xlZCh3aW5kb3c6IEd0ay5XaW5kb3cpIHtcbiAgICAgICAgdm9pZCB3aW5kb3dcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgYWxsIG1vbml0b3JzIGZyb20ge0BsaW5rIEdkay5EaXNwbGF5fS5cbiAgICAgKi9cbiAgICBAZ2V0dGVyKEFycmF5KVxuICAgIGdldCBtb25pdG9ycygpOiBBcnJheTxHZGsuTW9uaXRvcj4ge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRfbW9uaXRvcnMoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFdpbmRvd3MgdGhhdCBoYXMgYmVlbiBhZGRlZCB0byB0aGlzIGFwcFxuICAgICAqIHVzaW5nIHtAbGluayBHdGsuQXBwbGljYXRpb24ucHJvdG90eXBlLmFkZF93aW5kb3d9LlxuICAgICAqL1xuICAgIEBnZXR0ZXIoQXJyYXkpXG4gICAgZ2V0IHdpbmRvd3MoKTogQXJyYXk8R3RrLldpbmRvdz4ge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRfd2luZG93cygpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a1RoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAc2V0dGVyKFN0cmluZylcbiAgICBzZXQgZ3RrVGhlbWUobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuI3NldHRpbmdzLmd0a1RoZW1lTmFtZSA9IG5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBnZXR0ZXIoU3RyaW5nKVxuICAgIGdldCBndGtUaGVtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI3NldHRpbmdzLmd0a1RoZW1lTmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtJY29uVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBzZXR0ZXIoU3RyaW5nKVxuICAgIHNldCBpY29uVGhlbWUobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuI3NldHRpbmdzLmd0a0ljb25UaGVtZU5hbWUgPSBuYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a0ljb25UaGVtZU5hbWV9XG4gICAgICovXG4gICAgQGdldHRlcihTdHJpbmcpXG4gICAgZ2V0IGljb25UaGVtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI3NldHRpbmdzLmd0a0ljb25UaGVtZU5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrQ3Vyc29yVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBzZXR0ZXIoU3RyaW5nKVxuICAgIHNldCBjdXJzb3JUaGVtZShuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy4jc2V0dGluZ3MuZ3RrQ3Vyc29yVGhlbWVOYW1lID0gbmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtDdXJzb3JUaGVtZU5hbWV9XG4gICAgICovXG4gICAgQGdldHRlcihTdHJpbmcpXG4gICAgZ2V0IGN1cnNvclRoZW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jc2V0dGluZ3MuZ3RrQ3Vyc29yVGhlbWVOYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IGEgd2luZG93IGJ5IGl0cyB7QGxpbmsgR3RrLldpZGdldC5wcm90b3R5cGUubmFtZX0gdGhhdCBoYXMgYmVlbiBhZGRlZCB0byB0aGlzIGFwcFxuICAgICAqIHVzaW5nIHtAbGluayBHdGsuQXBwbGljYXRpb24ucHJvdG90eXBlLmFkZF93aW5kb3d9LlxuICAgICAqL1xuICAgIGdldF93aW5kb3cobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHJldHVybiB0aGlzLndpbmRvd3MuZmluZCgodykgPT4gdy5uYW1lID09PSBuYW1lKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRvZ2dsZSB0aGUgdmlzaWJpbGl0eSBvZiBhIHdpbmRvdyBieSBpdHMge0BsaW5rIEd0ay5XaWRnZXQucHJvdG90eXBlLm5hbWV9XG4gICAgICogdGhhdCBoYXMgYmVlbiBhZGRlZCB0byB0aGlzIGFwcCB1c2luZyB7QGxpbmsgR3RrLkFwcGxpY2F0aW9uLnByb3RvdHlwZS5hZGRfd2luZG93fS5cbiAgICAgKi9cbiAgICB0b2dnbGVfd2luZG93KG5hbWU6IHN0cmluZykge1xuICAgICAgICBjb25zdCB3aW4gPSB0aGlzLmdldF93aW5kb3cobmFtZSlcbiAgICAgICAgaWYgKCF3aW4pIHRocm93IEVycm9yKGBubyB3aW5kb3cgcmVnaXN0ZXJlZCB3aXRoIG5hbWUgXCIke25hbWV9XCJgKVxuICAgICAgICB3aW4udmlzaWJsZSA9ICF3aW4udmlzaWJsZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlc2V0IHByZXZpb3VzbHkgc2V0IGNzcyBwcm92aWRlcnMgd2l0aCB7QGxpbmsgQXBwLnByb3RvdHlwZS5hcHBseV9jc3N9LlxuICAgICAqL1xuICAgIHJlc2V0X2NzcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBwcm92aWRlciBvZiB0aGlzLiNjc3NQcm92aWRlcnMpIHtcbiAgICAgICAgICAgIEd0ay5TdHlsZUNvbnRleHQucmVtb3ZlX3Byb3ZpZGVyX2Zvcl9kaXNwbGF5KHRoaXMuI2Rpc3BsYXksIHByb3ZpZGVyKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIGEgbmV3IHtAbGluayBHdGsuQ3NzUHJvdmlkZXJ9LlxuICAgICAqIEBwYXJhbSBzdHlsZSBDc3Mgc3RyaW5nIG9yIGEgcGF0aCB0byBhIGNzcyBmaWxlLlxuICAgICAqL1xuICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldCA9IGZhbHNlKSB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IEd0ay5Dc3NQcm92aWRlcigpXG5cbiAgICAgICAgcHJvdmlkZXIuY29ubmVjdChcInBhcnNpbmctZXJyb3JcIiwgKF8sIHNlY3Rpb24sIGVycm9yKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBuYW1lID0gc2VjdGlvbi5nZXRfZmlsZSgpPy5nZXRfYmFzZW5hbWUoKSA/PyBcIlwiXG4gICAgICAgICAgICBjb25zdCBsaW5lID0gc2VjdGlvbi5nZXRfc3RhcnRfbG9jYXRpb24oKS5saW5lcyArIDFcbiAgICAgICAgICAgIGNvbnN0IGNoYXJzID0gc2VjdGlvbi5nZXRfc3RhcnRfbG9jYXRpb24oKS5saW5lX2NoYXJzICsgMVxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgQ1NTIEVycm9yICR7bmFtZX06JHtsaW5lfToke2NoYXJzfSAke2Vycm9yLm1lc3NhZ2V9YClcbiAgICAgICAgfSlcblxuICAgICAgICBpZiAocmVzZXQpIHRoaXMucmVzZXRfY3NzKClcblxuICAgICAgICBpZiAoR0xpYi5maWxlX3Rlc3Qoc3R5bGUsIEdMaWIuRmlsZVRlc3QuRVhJU1RTKSkge1xuICAgICAgICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3BhdGgoc3R5bGUpXG4gICAgICAgIH0gZWxzZSBpZiAoc3R5bGUuc3RhcnRzV2l0aChcInJlc291cmNlOi8vXCIpKSB7XG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fcmVzb3VyY2Uoc3R5bGUucmVwbGFjZShcInJlc291cmNlOi8vXCIsIFwiXCIpKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3N0cmluZyhzdHlsZSlcbiAgICAgICAgfVxuXG4gICAgICAgIEd0ay5TdHlsZUNvbnRleHQuYWRkX3Byb3ZpZGVyX2Zvcl9kaXNwbGF5KFxuICAgICAgICAgICAgdGhpcy4jZGlzcGxheSxcbiAgICAgICAgICAgIHByb3ZpZGVyLFxuICAgICAgICAgICAgR3RrLlNUWUxFX1BST1ZJREVSX1BSSU9SSVRZX1VTRVIsXG4gICAgICAgIClcblxuICAgICAgICB0aGlzLiNjc3NQcm92aWRlcnMucHVzaChwcm92aWRlcilcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5JY29uVGhlbWUucHJvdG90eXBlLmFkZF9zZWFyY2hfcGF0aH0uXG4gICAgICovXG4gICAgYWRkX2ljb25zKHBhdGg6IHN0cmluZykge1xuICAgICAgICBHdGsuSWNvblRoZW1lLmdldF9mb3JfZGlzcGxheSh0aGlzLiNkaXNwbGF5KS5hZGRfc2VhcmNoX3BhdGgocGF0aClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBRdWl0IGFuZCBleGl0IHRoZSBhcHBsaWNhdGlvbi5cbiAgICAgKi9cbiAgICBxdWl0KGNvZGUgPSAwKSB7XG4gICAgICAgIHRoaXMuI2RidXNTZXJ2aWNlLnN0b3AoKVxuICAgICAgICBzdXBlci5xdWl0KClcbiAgICAgICAgZXhpdChjb2RlKVxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcih7IGZsYWdzOiBHaW8uQXBwbGljYXRpb25GbGFncy5IQU5ETEVTX0NPTU1BTkRfTElORSB9KVxuXG4gICAgICAgIHRoaXMuI2RidXNTZXJ2aWNlID0gbmV3IEFwcERCdXMoe1xuICAgICAgICAgICAgdG9nZ2xlV2luZG93OiB0aGlzLnRvZ2dsZV93aW5kb3cuYmluZCh0aGlzKSxcbiAgICAgICAgICAgIHF1aXQ6IHRoaXMucXVpdC5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgcmVxdWVzdDogKGFyZ3YpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB0aGlzLnJlcXVlc3QoYXJndiwgcmVzb2x2ZSkpLFxuICAgICAgICAgICAgaW5zZWN0b3I6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBHdGsuV2luZG93LnNldF9pbnRlcmFjdGl2ZV9kZWJ1Z2dpbmcodHJ1ZSlcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy4jZGlzcGxheS5nZXRfbW9uaXRvcnMoKS5jb25uZWN0KFwiaXRlbXMtY2hhbmdlZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm5vdGlmeShcIm1vbml0b3JzXCIpXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy5jb25uZWN0KFwid2luZG93LWFkZGVkXCIsIChfLCB3aW5kb3cpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGlkMSA9IHdpbmRvdy5jb25uZWN0KFwibm90aWZ5Ojp2aXNpYmxlXCIsICgpID0+IHRoaXMud2luZG93VG9nZ2xlZCh3aW5kb3cpKVxuICAgICAgICAgICAgY29uc3QgaWQyID0gdGhpcy5jb25uZWN0KFwid2luZG93LXJlbW92ZWRcIiwgKF8sIHJlbW92ZWQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocmVtb3ZlZCA9PSB3aW5kb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmRpc2Nvbm5lY3QoaWQxKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc2Nvbm5lY3QoaWQyKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy4jc2V0dGluZ3MuY29ubmVjdChcIm5vdGlmeVwiLCAoXywgeyBuYW1lIH0pID0+IHtcbiAgICAgICAgICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJndGstdGhlbWUtbmFtZVwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShcImd0ay10aGVtZVwiKVxuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgIGNhc2UgXCJndGstaWNvbi10aGVtZS1uYW1lXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KFwiaWNvbi10aGVtZVwiKVxuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgIGNhc2UgXCJndGstY3Vyc29yLXRoZW1lLW5hbWVcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3RpZnkoXCJjdXJzb3ItdGhlbWVcIilcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIEBzaWduYWwoQXJyYXksIEZ1bmN0aW9uKVxuICAgIHByaXZhdGUgcmVxdWVzdChhcmdzOiBzdHJpbmdbXSwgcmVzcG9uc2U6IChyZXNwb25zZTogc3RyaW5nKSA9PiB2b2lkKSB7XG4gICAgICAgIGlmICh0aGlzLiNyZXF1ZXN0SGFuZGxlcnMgPT09IDApIHtcbiAgICAgICAgICAgIHJlc3BvbnNlKGBpbnN0YW5jZSBcIiR7dGhpcy5pbnN0YW5jZU5hbWV9XCIgaGFzIG5vIHJlcXVlc3QgaGFuZGxlciBpbXBsZW1lbnRlZGApXG4gICAgICAgIH1cbiAgICAgICAgdm9pZCBhcmdzXG4gICAgfVxuXG4gICAgdmZ1bmNfY29tbWFuZF9saW5lKGNtZDogR2lvLkFwcGxpY2F0aW9uQ29tbWFuZExpbmUpOiBudW1iZXIge1xuICAgICAgICBpZiAoY21kLmlzUmVtb3RlKSB7XG4gICAgICAgICAgICB0aGlzLnJlcXVlc3QoY21kLmdldF9hcmd1bWVudHMoKSwgKHN0cikgPT4ge1xuICAgICAgICAgICAgICAgIGNtZC5wcmludF9saXRlcmFsKHN0ciArIFwiXFxuXCIpXG4gICAgICAgICAgICAgICAgY21kLmRvbmUoKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaG9sZCgpXG4gICAgICAgICAgICB0aGlzLiNkYnVzU2VydmljZS5zZXJ2ZSh7XG4gICAgICAgICAgICAgICAgbmFtZTogdGhpcy5hcHBsaWNhdGlvbklkLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGNyZWF0ZVJvb3QoKGRpc3Bvc2UpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbm5lY3QoXCJzaHV0ZG93blwiLCBkaXNwb3NlKVxuICAgICAgICAgICAgICAgIHRoaXMuI21haW4/LiguLi5wcm9ncmFtQXJncylcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gMFxuICAgIH1cblxuICAgIHN0YXJ0KGNvbmZpZzogU3RhcnRDb25maWcpIHtcbiAgICAgICAgY29uc3QgeyBtYWluLCByZXF1ZXN0SGFuZGxlciwgaW5zdGFuY2VOYW1lLCBjc3MsIGljb25zLCAuLi5jZmcgfSA9IGNvbmZpZ1xuXG4gICAgICAgIHRoaXMuI21haW4gPSBtYWluXG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgY2ZnKVxuXG4gICAgICAgIGlmIChyZXF1ZXN0SGFuZGxlcikge1xuICAgICAgICAgICAgdGhpcy5jb25uZWN0KFwicmVxdWVzdFwiLCAoXywgYXJncywgcmVzcG9uc2UpID0+IHJlcXVlc3RIYW5kbGVyKGFyZ3MsIHJlc3BvbnNlKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbnN0YW5jZU5hbWUpIHRoaXMuI2luc3RhbmNlTmFtZSA9IGluc3RhbmNlTmFtZVxuICAgICAgICBpZiAoY3NzKSB0aGlzLmFwcGx5X2Nzcyhjc3MsIGZhbHNlKVxuICAgICAgICBpZiAoaWNvbnMpIGFwcC5hZGRfaWNvbnMoaWNvbnMpXG5cbiAgICAgICAgdGhpcy5hcHBsaWNhdGlvbklkID0gXCJpby5Bc3RhbC5cIiArIHRoaXMuaW5zdGFuY2VOYW1lXG4gICAgICAgIHNldENvbnNvbGVMb2dEb21haW4odGhpcy5pbnN0YW5jZU5hbWUpXG4gICAgICAgIHRoaXMucnVuQXN5bmMocHJvZ3JhbUFyZ3MpXG4gICAgfVxuXG4gICAgY29ubmVjdDxTIGV4dGVuZHMga2V5b2YgQXBwU2lnbmFscz4oXG4gICAgICAgIHNpZ25hbDogUyxcbiAgICAgICAgY2FsbGJhY2s6IEdPYmplY3QuU2lnbmFsQ2FsbGJhY2s8dGhpcywgQXBwU2lnbmFsc1tTXT4sXG4gICAgKTogbnVtYmVyIHtcbiAgICAgICAgaWYgKHNpZ25hbCA9PT0gXCJyZXF1ZXN0XCIpIHRoaXMuI3JlcXVlc3RIYW5kbGVycyArPSAxXG4gICAgICAgIHJldHVybiBzdXBlci5jb25uZWN0KHNpZ25hbCwgY2FsbGJhY2spXG4gICAgfVxufVxuXG5jb25zdCBhcHAgPSBuZXcgQXBwKClcbmV4cG9ydCBkZWZhdWx0IGFwcFxuIiwgIi8qKlxuICogQSB7QGxpbmsgU2VydmljZX0gY3VycmVudGx5IG9ubHkgYWxsb3dzIGludGVyZmFjaW5nIHdpdGggYSBzaW5nbGUgaW50ZXJmYWNlIG9mIGEgcmVtb3RlIG9iamVjdC5cbiAqIEluIHRoZSBmdXR1cmUgSSB3YW50IHRvIGNvbWUgdXAgd2l0aCBhbiBBUEkgdG8gYmUgYWJsZSB0byBjcmVhdGUgU2VydmljZSBvYmplY3RzIGZvciBtdWx0aXBsZVxuICogaW50ZXJmYWNlcyBvZiBhbiBvYmplY3QgYXQgdGhlIHNhbWUgdGltZS4gRXhhbXBsZSB1c2FnZSB3b3VsZCBiZSBmb3IgZXhhbXBsZSBjb21iaW5pbmdcbiAqIFwib3JnLm1wcmlzLk1lZGlhUGxheWVyMlwiIGFuZCBcIm9yZy5tcHJpcy5NZWRpYVBsYXllcjIuUGxheWVyXCIgaW50byBhIHNpbmdsZSBvYmplY3QuXG4gKi9cbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvXCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWJcIlxuaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBkZWZpbmVQcm9wZXJ0eUdldHRlciwga2ViYWJpZnksIHhtbCB9IGZyb20gXCIuL3V0aWwuanNcIlxuaW1wb3J0IHR5cGUgeyBEZWVwSW5mZXIgfSBmcm9tIFwiLi92YXJpYW50LmpzXCJcbmltcG9ydCB7XG4gICAgcmVnaXN0ZXIsXG4gICAgcHJvcGVydHkgYXMgZ3Byb3BlcnR5LFxuICAgIHNpZ25hbCBhcyBnc2lnbmFsLFxuICAgIGdldHRlciBhcyBnZ2V0dGVyLFxuICAgIHNldHRlciBhcyBnc2V0dGVyLFxufSBmcm9tIFwiLi9nb2JqZWN0LmpzXCJcblxuY29uc3QgREVGQVVMVF9USU1FT1VUID0gMTBfMDAwXG5cbmV4cG9ydCBjb25zdCBWYXJpYW50ID0gR0xpYi5WYXJpYW50XG5leHBvcnQgdHlwZSBWYXJpYW50PFQgZXh0ZW5kcyBzdHJpbmc+ID0gR0xpYi5WYXJpYW50PFQ+XG5cbmNvbnN0IGluZm8gPSBTeW1ib2woXCJkYnVzIGludGVyZmFjZSBpbmZvXCIpXG5jb25zdCBpbnRlcm5hbHMgPSBTeW1ib2woXCJkYnVzIGludGVyZmFjZSBpbnRlcm5hbHNcIilcbmNvbnN0IHJlbW90ZU1ldGhvZCA9IFN5bWJvbChcInByb3h5IHJlbW90ZU1ldGhvZFwiKVxuY29uc3QgcmVtb3RlTWV0aG9kQXN5bmMgPSBTeW1ib2woXCJwcm94eSByZW1vdGVNZXRob2RBc3luY1wiKVxuY29uc3QgcmVtb3RlUHJvcGVydHlTZXQgPSBTeW1ib2woXCJwcm94eSByZW1vdGVQcm9wZXJ0eVNldFwiKVxuXG50eXBlIEN0eCA9IHsgcHJpdmF0ZTogZmFsc2U7IHN0YXRpYzogZmFsc2U7IG5hbWU6IHN0cmluZyB9XG5cbi8qKlxuICogQmFzZSB0eXBlIGZvciBEQnVzIHNlcnZpY2VzIGFuZCBwcm94aWVzLiBJbnRlcmZhY2UgbmFtZSBpcyBzZXQgd2l0aFxuICogdGhlIHtAbGluayBpZmFjZX0gZGVjb3JhdG9yIHdoaWNoIGFsc28gcmVnaXN0ZXIgaXQgYXMgYSBHT2JqZWN0IHR5cGUuXG4gKi9cbmV4cG9ydCBjbGFzcyBTZXJ2aWNlIGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICAgIHN0YXRpYyBbaW5mb10/OiBHaW8uREJ1c0ludGVyZmFjZUluZm9cblxuICAgIHN0YXRpYyB7XG4gICAgICAgIEdPYmplY3QucmVnaXN0ZXJDbGFzcyh0aGlzKVxuICAgIH1cblxuICAgIFtpbnRlcm5hbHNdOiB7XG4gICAgICAgIGRidXNPYmplY3Q/OiBHaW8uREJ1c0V4cG9ydGVkT2JqZWN0XG4gICAgICAgIHByb3h5PzogR2lvLkRCdXNQcm94eVxuICAgICAgICBwcml2OiBSZWNvcmQ8c3RyaW5nIHwgc3ltYm9sLCB1bmtub3duPlxuICAgICAgICBvblN0b3A6IFNldDwoKSA9PiB2b2lkPlxuICAgIH0gPSB7XG4gICAgICAgIHByaXY6IHt9LFxuICAgICAgICBvblN0b3A6IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKSxcbiAgICB9XG5cbiAgICAjaW5mbzogR2lvLkRCdXNJbnRlcmZhY2VJbmZvXG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICBjb25zdCBzZXJ2aWNlID0gdGhpcy5jb25zdHJ1Y3RvciBhcyB1bmtub3duIGFzIHR5cGVvZiBTZXJ2aWNlXG4gICAgICAgIGlmICghc2VydmljZVtpbmZvXSkgdGhyb3cgRXJyb3IoXCJtaXNzaW5nIGludGVyZmFjZSBpbmZvXCIpXG4gICAgICAgIHRoaXMuI2luZm8gPSBzZXJ2aWNlW2luZm9dXG4gICAgfVxuXG4gICAgbm90aWZ5KHByb3BlcnR5TmFtZTogRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+IHwgKHN0cmluZyAmIHt9KSk6IHZvaWQge1xuICAgICAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkocHJvcGVydHlOYW1lKVxuXG4gICAgICAgIGlmIChwcm9wICYmIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0KSB7XG4gICAgICAgICAgICB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdC5lbWl0X3Byb3BlcnR5X2NoYW5nZWQoXG4gICAgICAgICAgICAgICAgcHJvcGVydHlOYW1lLFxuICAgICAgICAgICAgICAgIG5ldyBHTGliLlZhcmlhbnQocHJvcC5zaWduYXR1cmUsIHRoaXNbcHJvcGVydHlOYW1lIGFzIGtleW9mIHRoaXNdKSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHN1cGVyLm5vdGlmeShwcm9wID8ga2ViYWJpZnkocHJvcGVydHlOYW1lKSA6IHByb3BlcnR5TmFtZSlcbiAgICB9XG5cbiAgICBlbWl0KG5hbWU6IHN0cmluZywgLi4ucGFyYW1zOiB1bmtub3duW10pOiB2b2lkIHtcbiAgICAgICAgY29uc3Qgc2lnbmFsID0gdGhpcy4jaW5mby5sb29rdXBfc2lnbmFsKG5hbWUpXG5cbiAgICAgICAgaWYgKHNpZ25hbCAmJiB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdCkge1xuICAgICAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYCgke3NpZ25hbC5hcmdzLm1hcCgoYSkgPT4gYS5zaWduYXR1cmUpLmpvaW4oXCJcIil9KWBcbiAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0LmVtaXRfc2lnbmFsKG5hbWUsIG5ldyBHTGliLlZhcmlhbnQoc2lnbmF0dXJlLCBwYXJhbXMpKVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHN1cGVyLmVtaXQoc2lnbmFsID8ga2ViYWJpZnkobmFtZSkgOiBuYW1lLCAuLi5wYXJhbXMpXG4gICAgfVxuXG4gICAgLy8gc2VydmVyXG4gICAgI2hhbmRsZVByb3BlcnR5R2V0KF86IEdpby5EQnVzRXhwb3J0ZWRPYmplY3QsIHByb3BlcnR5TmFtZTogRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+KSB7XG4gICAgICAgIGNvbnN0IHByb3AgPSB0aGlzLiNpbmZvLmxvb2t1cF9wcm9wZXJ0eShwcm9wZXJ0eU5hbWUpXG5cbiAgICAgICAgaWYgKCFwcm9wKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9IGhhcyBubyBleHBvcnRlZCBwcm9wZXJ0eTogXCIke3Byb3BlcnR5TmFtZX1cImApXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXNbcHJvcGVydHlOYW1lXVxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEdMaWIuVmFyaWFudChwcm9wLnNpZ25hdHVyZSwgdmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gc2VydmVyXG4gICAgI2hhbmRsZVByb3BlcnR5U2V0KFxuICAgICAgICBfOiBHaW8uREJ1c0V4cG9ydGVkT2JqZWN0LFxuICAgICAgICBwcm9wZXJ0eU5hbWU6IEV4dHJhY3Q8a2V5b2YgdGhpcywgc3RyaW5nPixcbiAgICAgICAgdmFsdWU6IEdMaWIuVmFyaWFudCxcbiAgICApIHtcbiAgICAgICAgY29uc3QgbmV3VmFsdWUgPSB2YWx1ZS5kZWVwVW5wYWNrKClcbiAgICAgICAgY29uc3QgcHJvcCA9IHRoaXMuI2luZm8ubG9va3VwX3Byb3BlcnR5KHByb3BlcnR5TmFtZSlcblxuICAgICAgICBpZiAoIXByb3ApIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0gaGFzIG5vIHByb3BlcnR5OiBcIiR7cHJvcGVydHlOYW1lfVwiYClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzW3Byb3BlcnR5TmFtZV0gIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzW3Byb3BlcnR5TmFtZV0gPSB2YWx1ZS5kZWVwVW5wYWNrPGFueT4oKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gc2VydmVyXG4gICAgI3JldHVybkVycm9yKGVycm9yOiB1bmtub3duLCBpbnZvY2F0aW9uOiBHaW8uREJ1c01ldGhvZEludm9jYXRpb24pIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcilcbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgR0xpYi5FcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIGludm9jYXRpb24ucmV0dXJuX2dlcnJvcihlcnJvcilcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIGludm9jYXRpb24ucmV0dXJuX2RidXNfZXJyb3IoXG4gICAgICAgICAgICAgICAgZXJyb3IubmFtZS5pbmNsdWRlcyhcIi5cIikgPyBlcnJvci5uYW1lIDogYGdqcy5KU0Vycm9yLiR7ZXJyb3IubmFtZX1gLFxuICAgICAgICAgICAgICAgIGVycm9yLm1lc3NhZ2UsXG4gICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgICAgaW52b2NhdGlvbi5yZXR1cm5fZGJ1c19lcnJvcihcImdqcy5EQnVzU2VydmljZS5Vbmtub3duRXJyb3JcIiwgYCR7ZXJyb3J9YClcbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjcmV0dXJuVmFsdWUodmFsdWU6IHVua25vd24sIG1ldGhvZE5hbWU6IHN0cmluZywgaW52b2NhdGlvbjogR2lvLkRCdXNNZXRob2RJbnZvY2F0aW9uKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gaW52b2NhdGlvbi5yZXR1cm5fdmFsdWUobmV3IEdMaWIuVmFyaWFudChcIigpXCIsIFtdKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGFyZ3MgPSB0aGlzLiNpbmZvLmxvb2t1cF9tZXRob2QobWV0aG9kTmFtZSk/Lm91dF9hcmdzID8/IFtdXG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IGAoJHthcmdzLm1hcCgoYXJnKSA9PiBhcmcuc2lnbmF0dXJlKS5qb2luKFwiXCIpfSlgXG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHRocm93IEVycm9yKFwidmFsdWUgaGFzIHRvIGJlIGEgdHVwbGVcIilcbiAgICAgICAgaW52b2NhdGlvbi5yZXR1cm5fdmFsdWUobmV3IEdMaWIuVmFyaWFudChzaWduYXR1cmUsIHZhbHVlKSlcbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjaGFuZGxlTWV0aG9kQ2FsbChcbiAgICAgICAgXzogR2lvLkRCdXNFeHBvcnRlZE9iamVjdCxcbiAgICAgICAgbWV0aG9kTmFtZTogRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+LFxuICAgICAgICBwYXJhbWV0ZXJzOiBHTGliLlZhcmlhbnQsXG4gICAgICAgIGludm9jYXRpb246IEdpby5EQnVzTWV0aG9kSW52b2NhdGlvbixcbiAgICApOiB2b2lkIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gKHRoaXNbbWV0aG9kTmFtZV0gYXMgKC4uLmFyZ3M6IHVua25vd25bXSkgPT4gdW5rbm93bikoXG4gICAgICAgICAgICAgICAgLi4ucGFyYW1ldGVycy5kZWVwVW5wYWNrPEFycmF5PHVua25vd24+PigpLFxuICAgICAgICAgICAgKVxuXG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBHTGliLlZhcmlhbnQpIHtcbiAgICAgICAgICAgICAgICBpbnZvY2F0aW9uLnJldHVybl92YWx1ZSh2YWx1ZSlcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKHZhbHVlKSA9PiB0aGlzLiNyZXR1cm5WYWx1ZSh2YWx1ZSwgbWV0aG9kTmFtZSwgaW52b2NhdGlvbikpXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHRoaXMuI3JldHVybkVycm9yKGVycm9yLCBpbnZvY2F0aW9uKSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy4jcmV0dXJuVmFsdWUodmFsdWUsIG1ldGhvZE5hbWUsIGludm9jYXRpb24pXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB0aGlzLiNyZXR1cm5FcnJvcihlcnJvciwgaW52b2NhdGlvbilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgIGFzeW5jIHNlcnZlKHtcbiAgICAgICAgYnVzVHlwZSA9IEdpby5CdXNUeXBlLlNFU1NJT04sXG4gICAgICAgIG5hbWUgPSB0aGlzLiNpbmZvLm5hbWUsXG4gICAgICAgIG9iamVjdFBhdGggPSBcIi9cIiArIHRoaXMuI2luZm8ubmFtZS5zcGxpdChcIi5cIikuam9pbihcIi9cIiksXG4gICAgICAgIGZsYWdzID0gR2lvLkJ1c05hbWVPd25lckZsYWdzLk5PTkUsXG4gICAgICAgIHRpbWVvdXQgPSBERUZBVUxUX1RJTUVPVVQsXG4gICAgfToge1xuICAgICAgICBidXNUeXBlPzogR2lvLkJ1c1R5cGVcbiAgICAgICAgbmFtZT86IHN0cmluZ1xuICAgICAgICBvYmplY3RQYXRoPzogc3RyaW5nXG4gICAgICAgIGZsYWdzPzogR2lvLkJ1c05hbWVPd25lckZsYWdzXG4gICAgICAgIHRpbWVvdXQ/OiBudW1iZXJcbiAgICB9ID0ge30pOiBQcm9taXNlPHRoaXM+IHtcbiAgICAgICAgY29uc3QgaW1wbCA9IG5ldyBHaW8uREJ1c0V4cG9ydGVkT2JqZWN0KFxuICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBtaXNzaW5nIGNvbnN0cnVjdG9yIHR5cGVcbiAgICAgICAgICAgIHsgZ19pbnRlcmZhY2VfaW5mbzogdGhpcy4jaW5mbyB9LFxuICAgICAgICApXG5cbiAgICAgICAgaW1wbC5jb25uZWN0KFwiaGFuZGxlLW1ldGhvZC1jYWxsXCIsIHRoaXMuI2hhbmRsZU1ldGhvZENhbGwuYmluZCh0aGlzKSlcbiAgICAgICAgaW1wbC5jb25uZWN0KFwiaGFuZGxlLXByb3BlcnR5LWdldFwiLCB0aGlzLiNoYW5kbGVQcm9wZXJ0eUdldC5iaW5kKHRoaXMpKVxuICAgICAgICBpbXBsLmNvbm5lY3QoXCJoYW5kbGUtcHJvcGVydHktc2V0XCIsIHRoaXMuI2hhbmRsZVByb3BlcnR5U2V0LmJpbmQodGhpcykpXG5cbiAgICAgICAgdGhpcy4jaW5mby5jYWNoZV9idWlsZCgpXG5cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGxldCBzb3VyY2UgPVxuICAgICAgICAgICAgICAgIHRpbWVvdXQgPiAwXG4gICAgICAgICAgICAgICAgICAgID8gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChFcnJvcihgc2VydmUgdGltZWQgb3V0YCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZSA9IG51bGxcbiAgICAgICAgICAgICAgICAgICAgICB9LCB0aW1lb3V0KVxuICAgICAgICAgICAgICAgICAgICA6IG51bGxcblxuICAgICAgICAgICAgY29uc3QgY2xlYXIgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHNvdXJjZSkge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoc291cmNlKVxuICAgICAgICAgICAgICAgICAgICBzb3VyY2UgPSBudWxsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBidXNJZCA9IEdpby5idXNfb3duX25hbWUoXG4gICAgICAgICAgICAgICAgYnVzVHlwZSxcbiAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgIGZsYWdzLFxuICAgICAgICAgICAgICAgIChjb25uOiBHaW8uREJ1c0Nvbm5lY3Rpb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGltcGwuZXhwb3J0KGNvbm4sIG9iamVjdFBhdGgpXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdCA9IGltcGxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5vblN0b3AuYWRkKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBHaW8uYnVzX3Vub3duX25hbWUoYnVzSWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1wbC51bmV4cG9ydCgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4jaW5mby5jYWNoZV9yZWxlYXNlKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3RcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodGhpcylcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2xlYXIsXG4gICAgICAgICAgICAgICAgY2xlYXIsXG4gICAgICAgICAgICApXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICAjaGFuZGxlUHJvcGVydGllc0NoYW5nZWQoXG4gICAgICAgIF86IEdpby5EQnVzUHJveHksXG4gICAgICAgIGNoYW5nZWQ6IEdMaWIuVmFyaWFudDxcImF7c3Z9XCI+LFxuICAgICAgICBpbnZhbGlkYXRlZDogc3RyaW5nW10sXG4gICAgKSB7XG4gICAgICAgIGNvbnN0IHNldCA9IG5ldyBTZXQoWy4uLk9iamVjdC5rZXlzKGNoYW5nZWQuZGVlcFVucGFjaygpKSwgLi4uaW52YWxpZGF0ZWRdKVxuICAgICAgICBmb3IgKGNvbnN0IHByb3Agb2Ygc2V0LnZhbHVlcygpKSB7XG4gICAgICAgICAgICB0aGlzLm5vdGlmeShwcm9wIGFzIEV4dHJhY3Q8a2V5b2YgdGhpcywgc3RyaW5nPilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgI2hhbmRsZVNpZ25hbChcbiAgICAgICAgXzogR2lvLkRCdXNQcm94eSxcbiAgICAgICAgX3NlbmRlcjogc3RyaW5nIHwgbnVsbCxcbiAgICAgICAgc2lnbmFsOiBzdHJpbmcsXG4gICAgICAgIHBhcmFtZXRlcnM6IEdMaWIuVmFyaWFudCxcbiAgICApIHtcbiAgICAgICAgdGhpcy5lbWl0KGtlYmFiaWZ5KHNpZ25hbCksIC4uLnBhcmFtZXRlcnMuZGVlcFVucGFjazxBcnJheTx1bmtub3duPj4oKSlcbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgICNyZW1vdGVNZXRob2RQYXJhbXMoXG4gICAgICAgIG1ldGhvZE5hbWU6IHN0cmluZyxcbiAgICAgICAgYXJnczogdW5rbm93bltdLFxuICAgICk6IFBhcmFtZXRlcnM8R2lvLkRCdXNQcm94eVtcImNhbGxfc3luY1wiXT4ge1xuICAgICAgICBjb25zdCB7IHByb3h5IH0gPSB0aGlzW2ludGVybmFsc11cbiAgICAgICAgaWYgKCFwcm94eSkgdGhyb3cgRXJyb3IoXCJpbnZhbGlkIHJlbW90ZU1ldGhvZCBpbnZvY2F0aW9uOiBub3QgYSBwcm94eVwiKVxuXG4gICAgICAgIGNvbnN0IG1ldGhvZCA9IHRoaXMuI2luZm8ubG9va3VwX21ldGhvZChtZXRob2ROYW1lKVxuICAgICAgICBpZiAoIW1ldGhvZCkgdGhyb3cgRXJyb3IoXCJtZXRob2Qgbm90IGZvdW5kXCIpXG5cbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYCgke21ldGhvZC5pbl9hcmdzLm1hcCgoYSkgPT4gYS5zaWduYXR1cmUpLmpvaW4oXCJcIil9KWBcblxuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgbWV0aG9kTmFtZSxcbiAgICAgICAgICAgIG5ldyBHTGliLlZhcmlhbnQoc2lnbmF0dXJlLCBhcmdzKSxcbiAgICAgICAgICAgIEdpby5EQnVzQ2FsbEZsYWdzLk5PTkUsXG4gICAgICAgICAgICBERUZBVUxUX1RJTUVPVVQsXG4gICAgICAgICAgICBudWxsLFxuICAgICAgICBdXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICBbcmVtb3RlTWV0aG9kXShtZXRob2ROYW1lOiBzdHJpbmcsIGFyZ3M6IHVua25vd25bXSk6IEdMaWIuVmFyaWFudCB7XG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuI3JlbW90ZU1ldGhvZFBhcmFtcyhtZXRob2ROYW1lLCBhcmdzKVxuICAgICAgICByZXR1cm4gdGhpc1tpbnRlcm5hbHNdLnByb3h5IS5jYWxsX3N5bmMoLi4ucGFyYW1zKVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgW3JlbW90ZU1ldGhvZEFzeW5jXShtZXRob2ROYW1lOiBzdHJpbmcsIGFyZ3M6IHVua25vd25bXSk6IFByb21pc2U8R0xpYi5WYXJpYW50PiB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuI3JlbW90ZU1ldGhvZFBhcmFtcyhtZXRob2ROYW1lLCBhcmdzKVxuICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5wcm94eSEuY2FsbCguLi5wYXJhbXMsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodGhpc1tpbnRlcm5hbHNdLnByb3h5IS5jYWxsX2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgW3JlbW90ZVByb3BlcnR5U2V0XShuYW1lOiBzdHJpbmcsIHZhbHVlOiB1bmtub3duKSB7XG4gICAgICAgIGNvbnN0IHByb3h5ID0gdGhpc1tpbnRlcm5hbHNdLnByb3h5IVxuICAgICAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkobmFtZSkhXG5cbiAgICAgICAgY29uc3QgdmFyaWFudCA9IG5ldyBHTGliLlZhcmlhbnQocHJvcC5zaWduYXR1cmUsIHZhbHVlKVxuICAgICAgICBwcm94eS5zZXRfY2FjaGVkX3Byb3BlcnR5KG5hbWUsIHZhcmlhbnQpXG5cbiAgICAgICAgcHJveHkuY2FsbChcbiAgICAgICAgICAgIFwib3JnLmZyZWVkZXNrdG9wLkRCdXMuUHJvcGVydGllcy5TZXRcIixcbiAgICAgICAgICAgIG5ldyBHTGliLlZhcmlhbnQoXCIoc3N2KVwiLCBbcHJveHkuZ0ludGVyZmFjZU5hbWUsIG5hbWUsIHZhcmlhbnRdKSxcbiAgICAgICAgICAgIEdpby5EQnVzQ2FsbEZsYWdzLk5PTkUsXG4gICAgICAgICAgICAtMSxcbiAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcHJveHkuY2FsbF9maW5pc2gocmVzKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIClcbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgIGFzeW5jIHByb3h5KHtcbiAgICAgICAgYnVzID0gR2lvLkRCdXMuc2Vzc2lvbixcbiAgICAgICAgbmFtZSA9IHRoaXMuI2luZm8ubmFtZSxcbiAgICAgICAgb2JqZWN0UGF0aCA9IFwiL1wiICsgdGhpcy4jaW5mby5uYW1lLnNwbGl0KFwiLlwiKS5qb2luKFwiL1wiKSxcbiAgICAgICAgZmxhZ3MgPSBHaW8uREJ1c1Byb3h5RmxhZ3MuTk9ORSxcbiAgICAgICAgdGltZW91dCA9IERFRkFVTFRfVElNRU9VVCxcbiAgICB9OiB7XG4gICAgICAgIGJ1cz86IEdpby5EQnVzQ29ubmVjdGlvblxuICAgICAgICBuYW1lPzogc3RyaW5nXG4gICAgICAgIG9iamVjdFBhdGg/OiBzdHJpbmdcbiAgICAgICAgZmxhZ3M/OiBHaW8uREJ1c1Byb3h5RmxhZ3NcbiAgICAgICAgdGltZW91dD86IG51bWJlclxuICAgIH0gPSB7fSk6IFByb21pc2U8dGhpcz4ge1xuICAgICAgICBjb25zdCBwcm94eSA9IG5ldyBHaW8uREJ1c1Byb3h5KHtcbiAgICAgICAgICAgIGdDb25uZWN0aW9uOiBidXMsXG4gICAgICAgICAgICBnSW50ZXJmYWNlTmFtZTogdGhpcy4jaW5mby5uYW1lLFxuICAgICAgICAgICAgZ0ludGVyZmFjZUluZm86IHRoaXMuI2luZm8sXG4gICAgICAgICAgICBnTmFtZTogbmFtZSxcbiAgICAgICAgICAgIGdGbGFnczogZmxhZ3MsXG4gICAgICAgICAgICBnT2JqZWN0UGF0aDogb2JqZWN0UGF0aCxcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgY2FuY2FsbGFibGUgPSBuZXcgR2lvLkNhbmNlbGxhYmxlKClcblxuICAgICAgICAgICAgbGV0IHNvdXJjZSA9XG4gICAgICAgICAgICAgICAgdGltZW91dCA+IDBcbiAgICAgICAgICAgICAgICAgICAgPyBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KEVycm9yKGBwcm94eSB0aW1lZCBvdXRgKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjYW5jYWxsYWJsZS5jYW5jZWwoKVxuICAgICAgICAgICAgICAgICAgICAgIH0sIHRpbWVvdXQpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuXG4gICAgICAgICAgICBwcm94eS5pbml0X2FzeW5jKEdMaWIuUFJJT1JJVFlfREVGQVVMVCwgY2FuY2FsbGFibGUsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoc291cmNlKVxuICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgcHJveHkuaW5pdF9maW5pc2gocmVzKVxuICAgICAgICAgICAgICAgICAgICB0aGlzW2ludGVybmFsc10ucHJveHkgPSBwcm94eVxuXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGlkcyA9IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3h5LmNvbm5lY3QoXCJnLXNpZ25hbFwiLCB0aGlzLiNoYW5kbGVTaWduYWwuYmluZCh0aGlzKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm94eS5jb25uZWN0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZy1wcm9wZXJ0aWVzLWNoYW5nZWRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiNoYW5kbGVQcm9wZXJ0aWVzQ2hhbmdlZC5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgXVxuXG4gICAgICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5vblN0b3AuYWRkKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkcy5mb3JFYWNoKChpZCkgPT4gcHJveHkuZGlzY29ubmVjdChpZCkpXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgdGhpc1tpbnRlcm5hbHNdLnByb3h5XG4gICAgICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHN0b3AoKSB7XG4gICAgICAgIGNvbnN0IHsgb25TdG9wIH0gPSB0aGlzW2ludGVybmFsc11cbiAgICAgICAgZm9yIChjb25zdCBjYiBvZiBvblN0b3AudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIG9uU3RvcC5kZWxldGUoY2IpXG4gICAgICAgICAgICBjYigpXG4gICAgICAgIH1cbiAgICB9XG59XG5cbnR5cGUgSW50ZXJmYWNlTWV0YSA9IHtcbiAgICBkYnVzTWV0aG9kcz86IFJlY29yZDxcbiAgICAgICAgc3RyaW5nLFxuICAgICAgICBBcnJheTx7XG4gICAgICAgICAgICBuYW1lPzogc3RyaW5nXG4gICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAgICAgICAgICAgIGRpcmVjdGlvbjogXCJpblwiIHwgXCJvdXRcIlxuICAgICAgICB9PlxuICAgID5cbiAgICBkYnVzU2lnbmFscz86IFJlY29yZDxcbiAgICAgICAgc3RyaW5nLFxuICAgICAgICBBcnJheTx7XG4gICAgICAgICAgICBuYW1lPzogc3RyaW5nXG4gICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAgICAgICAgfT5cbiAgICA+XG4gICAgZGJ1c1Byb3BlcnRpZXM/OiBSZWNvcmQ8XG4gICAgICAgIHN0cmluZyxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogc3RyaW5nXG4gICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAgICAgICAgICAgIHJlYWQ/OiB0cnVlXG4gICAgICAgICAgICB3cml0ZT86IHRydWVcbiAgICAgICAgfVxuICAgID5cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSB7QGxpbmsgU2VydmljZX0gYXMgYSBkYnVzIGludGVyZmFjZS5cbiAqXG4gKiBAcGFyYW0gbmFtZSBJbnRlcmZhY2UgbmFtZSBvZiB0aGUgb2JqZWN0LiBGb3IgZXhhbXBsZSBcIm9yZy5nbm9tZS5TaGVsbC5TZWFyY2hQcm92aWRlcjJcIlxuICogQHBhcmFtIG9wdGlvbnMgb3B0aW9uYWwgcHJvcGVydGllcyB0byBwYXNzIHRvIHtAbGluayByZWdpc3Rlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlmYWNlKG5hbWU6IHN0cmluZywgb3B0aW9ucz86IFBhcmFtZXRlcnM8dHlwZW9mIHJlZ2lzdGVyPlswXSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoY2xzOiB7IG5ldyAoLi4uYXJnczogYW55W10pOiBTZXJ2aWNlIH0sIGN0eDogQ2xhc3NEZWNvcmF0b3JDb250ZXh0KSB7XG4gICAgICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGFcbiAgICAgICAgaWYgKCFtZXRhKSB0aHJvdyBFcnJvcihgJHtjbHMubmFtZX0gaXMgbm90IGFuIGludGVyZmFjZWApXG5cbiAgICAgICAgY29uc3QgeyBkYnVzTWV0aG9kcyA9IHt9LCBkYnVzU2lnbmFscyA9IHt9LCBkYnVzUHJvcGVydGllcyA9IHt9IH0gPSBtZXRhIGFzIEludGVyZmFjZU1ldGFcblxuICAgICAgICBjb25zdCBpbmZvWG1sID0geG1sKHtcbiAgICAgICAgICAgIG5hbWU6IFwibm9kZVwiLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiaW50ZXJmYWNlXCIsXG4gICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHsgbmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgLi4uT2JqZWN0LmVudHJpZXMoZGJ1c01ldGhvZHMpLm1hcCgoW25hbWUsIGFyZ3NdKSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibWV0aG9kXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogeyBuYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IGFyZ3MubWFwKChhcmcpID0+ICh7IG5hbWU6IFwiYXJnXCIsIGF0dHJpYnV0ZXM6IGFyZyB9KSksXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5PYmplY3QuZW50cmllcyhkYnVzU2lnbmFscykubWFwKChbbmFtZSwgYXJnc10pID0+ICh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzaWduYWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7IG5hbWUgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogYXJncy5tYXAoKGFyZykgPT4gKHsgbmFtZTogXCJhcmdcIiwgYXR0cmlidXRlczogYXJnIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLk9iamVjdC52YWx1ZXMoZGJ1c1Byb3BlcnRpZXMpLm1hcCgoeyBuYW1lLCB0eXBlLCByZWFkLCB3cml0ZSB9KSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwicHJvcGVydHlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLihuYW1lICYmIHsgbmFtZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzOiAocmVhZCA/IFwicmVhZFwiIDogXCJcIikgKyAod3JpdGUgPyBcIndyaXRlXCIgOiBcIlwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpLFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICB9KVxuXG4gICAgICAgIE9iamVjdC5hc3NpZ24oY2xzLCB7IFtpbmZvXTogR2lvLkRCdXNJbnRlcmZhY2VJbmZvLm5ld19mb3JfeG1sKGluZm9YbWwpIH0pXG4gICAgICAgIHJlZ2lzdGVyKG9wdGlvbnMpKGNscywgY3R4KVxuICAgIH1cbn1cblxudHlwZSBEQnVzVHlwZSA9IHN0cmluZyB8IHsgdHlwZTogc3RyaW5nOyBuYW1lOiBzdHJpbmcgfVxuXG50eXBlIEluZmVyVmFyaWFudFR5cGVzPFQgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+ID0ge1xuICAgIFtLIGluIGtleW9mIFRdOiBUW0tdIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgID8gRGVlcEluZmVyPFRbS10+XG4gICAgICAgIDogVFtLXSBleHRlbmRzIHsgdHlwZTogaW5mZXIgUyB9XG4gICAgICAgICAgPyBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgICAgICAgID8gRGVlcEluZmVyPFM+XG4gICAgICAgICAgICAgIDogbmV2ZXJcbiAgICAgICAgICA6IHVua25vd25cbn1cblxuZnVuY3Rpb24gaW5zdGFsbE1ldGhvZDxBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PihcbiAgICBhcmdzOiBBcmdzIHwgW0FyZ3MsIEFyZ3M/XSxcbiAgICBtZXRob2Q6ICguLi5hcmdzOiBhbnlbXSkgPT4gdW5rbm93bixcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbikge1xuICAgIGNvbnN0IG5hbWUgPSBjdHgubmFtZVxuICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGEhIGFzIEludGVyZmFjZU1ldGFcbiAgICBjb25zdCBtZXRob2RzID0gKG1ldGEuZGJ1c01ldGhvZHMgPz89IHt9KVxuXG4gICAgaWYgKHR5cGVvZiBuYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwib25seSBzdHJpbmcgbmFtZWQgbWV0aG9kcyBhcmUgYWxsb3dlZFwiKVxuICAgIH1cblxuICAgIGNvbnN0IFtpbkFyZ3MsIG91dEFyZ3MgPSBbXV0gPSAoQXJyYXkuaXNBcnJheShhcmdzWzBdKSA/IGFyZ3MgOiBbYXJnc10pIGFzIFtBcmdzLCBBcmdzXVxuXG4gICAgbWV0aG9kc1tuYW1lXSA9IFtcbiAgICAgICAgLi4uaW5BcmdzLm1hcCgoYXJnKSA9PiAoe1xuICAgICAgICAgICAgZGlyZWN0aW9uOiBcImluXCIgYXMgY29uc3QsXG4gICAgICAgICAgICAuLi4odHlwZW9mIGFyZyA9PT0gXCJzdHJpbmdcIiA/IHsgdHlwZTogYXJnIH0gOiBhcmcpLFxuICAgICAgICB9KSksXG4gICAgICAgIC4uLm91dEFyZ3MubWFwKChhcmcpID0+ICh7XG4gICAgICAgICAgICBkaXJlY3Rpb246IFwib3V0XCIgYXMgY29uc3QsXG4gICAgICAgICAgICAuLi4odHlwZW9mIGFyZyA9PT0gXCJzdHJpbmdcIiA/IHsgdHlwZTogYXJnIH0gOiBhcmcpLFxuICAgICAgICB9KSksXG4gICAgXVxuXG4gICAgcmV0dXJuIG5hbWVcbn1cblxuZnVuY3Rpb24gaW5zdGFsbFByb3BlcnR5PFQgZXh0ZW5kcyBzdHJpbmc+KFxuICAgIHR5cGU6IFQsXG4gICAgY3R4OiBDbGFzc0ZpZWxkRGVjb3JhdG9yQ29udGV4dCB8IENsYXNzR2V0dGVyRGVjb3JhdG9yQ29udGV4dCB8IENsYXNzU2V0dGVyRGVjb3JhdG9yQ29udGV4dCxcbikge1xuICAgIGNvbnN0IGtpbmQgPSBjdHgua2luZFxuICAgIGNvbnN0IG5hbWUgPSBjdHgubmFtZVxuICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGEhIGFzIEludGVyZmFjZU1ldGFcbiAgICBjb25zdCBwcm9wZXJ0aWVzID0gKG1ldGEuZGJ1c1Byb3BlcnRpZXMgPz89IHt9KVxuXG4gICAgaWYgKHR5cGVvZiBuYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwib25seSBzdHJpbmcgbmFtZWQgcHJvcGVydGllcyBhcmUgYWxsb3dlZFwiKVxuICAgIH1cblxuICAgIGNvbnN0IHJlYWQgPSBraW5kID09PSBcImZpZWxkXCIgfHwga2luZCA9PT0gXCJnZXR0ZXJcIlxuICAgIGNvbnN0IHdyaXRlID0ga2luZCA9PT0gXCJmaWVsZFwiIHx8IGtpbmQgPT09IFwic2V0dGVyXCJcblxuICAgIGlmIChuYW1lIGluIHByb3BlcnRpZXMpIHtcbiAgICAgICAgaWYgKHdyaXRlKSBwcm9wZXJ0aWVzW25hbWVdLndyaXRlID0gdHJ1ZVxuICAgICAgICBpZiAocmVhZCkgcHJvcGVydGllc1tuYW1lXS5yZWFkID0gdHJ1ZVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHByb3BlcnRpZXNbbmFtZV0gPSB7XG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgIC4uLihyZWFkICYmIHsgcmVhZCB9KSxcbiAgICAgICAgICAgIC4uLih3cml0ZSAmJiB7IHdyaXRlIH0pLFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5hbWVcbn1cblxuZnVuY3Rpb24gaW5zdGFsbFNpZ25hbDxQYXJhbXMgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIHBhcmFtczogUGFyYW1zLFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2U+LFxuKSB7XG4gICAgY29uc3QgbmFtZSA9IGN0eC5uYW1lXG4gICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YSEgYXMgSW50ZXJmYWNlTWV0YVxuICAgIGNvbnN0IHNpZ25hbHMgPSAobWV0YS5kYnVzU2lnbmFscyA/Pz0ge30pXG5cbiAgICBpZiAodHlwZW9mIG5hbWUgPT09IFwic3ltYm9sXCIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJzeW1ib2xzIGFyZSBub3QgdmFsaWQgc2lnbmFsc1wiKVxuICAgIH1cblxuICAgIHNpZ25hbHNbbmFtZV0gPSBwYXJhbXMubWFwKChhcmcpID0+ICh0eXBlb2YgYXJnID09PSBcInN0cmluZ1wiID8geyB0eXBlOiBhcmcgfSA6IGFyZykpXG5cbiAgICByZXR1cm4gbmFtZVxufVxuXG5mdW5jdGlvbiBpbmZlckdUeXBlRnJvbVZhcmlhbnQodHlwZTogREJ1c1R5cGUpOiBHT2JqZWN0LkdUeXBlPGFueT4ge1xuICAgIGlmICh0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIikgcmV0dXJuIGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlLnR5cGUpXG5cbiAgICBpZiAodHlwZS5zdGFydHNXaXRoKFwiYVwiKSB8fCB0eXBlLnN0YXJ0c1dpdGgoXCIoXCIpKSB7XG4gICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfSlNPQkpFQ1RcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSBcInZcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVkFSSUFOVFxuICAgICAgICBjYXNlIFwiYlwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9CT09MRUFOXG4gICAgICAgIGNhc2UgXCJ5XCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX1VJTlRcbiAgICAgICAgY2FzZSBcIm5cIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfSU5UXG4gICAgICAgIGNhc2UgXCJxXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX1VJTlRcbiAgICAgICAgY2FzZSBcImlcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfSU5UXG4gICAgICAgIGNhc2UgXCJ1XCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX1VJTlRcbiAgICAgICAgY2FzZSBcInhcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfSU5UNjRcbiAgICAgICAgY2FzZSBcInRcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVDY0XG4gICAgICAgIGNhc2UgXCJoXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0lOVFxuICAgICAgICBjYXNlIFwiZFwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9ET1VCTEVcbiAgICAgICAgY2FzZSBcInNcIjpcbiAgICAgICAgY2FzZSBcImdcIjpcbiAgICAgICAgY2FzZSBcIm9cIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfU1RSSU5HXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBicmVha1xuICAgIH1cblxuICAgIHRocm93IEVycm9yKGBjYW5ub3QgaW5mZXIgR1R5cGUgZnJvbSB2YXJpYW50IFwiJHt0eXBlfVwiYClcbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSBtZXRob2QuXG4gKiBZb3Ugc2hvdWxkIHByZWZlciB1c2luZyB7QGxpbmsgbWV0aG9kQXN5bmN9IHdoZW4gcHJveHlpbmcsIGR1ZSB0byBJTyBibG9ja2luZy5cbiAqIE5vdGUgdGhhdCB0aGlzIGlzIGZ1bmN0aW9uYWxseSB0aGUgc2FtZSBhcyB7QGxpbmsgbWV0aG9kQXN5bmN9IG9uIGV4cG9ydGVkIG9iamVjdHMuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZDxjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4sIGNvbnN0IE91dEFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIGluQXJnczogSW5BcmdzLFxuICAgIG91dEFyZ3M6IE91dEFyZ3MsXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogU2VydmljZSwgLi4uYXJnczogYW55W10pID0+IEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+LFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSA9PiAodGhpczogU2VydmljZSwgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPikgPT4gYW55XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgbWV0aG9kLlxuICogWW91IHNob3VsZCBwcmVmZXIgdXNpbmcge0BsaW5rIG1ldGhvZEFzeW5jfSB3aGVuIHByb3h5aW5nLCBkdWUgdG8gSU8gYmxvY2tpbmcuXG4gKiBOb3RlIHRoYXQgdGhpcyBpcyBmdW5jdGlvbmFsbHkgdGhlIHNhbWUgYXMge0BsaW5rIG1ldGhvZEFzeW5jfSBvbiBleHBvcnRlZCBvYmplY3RzLlxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2Q8Y29uc3QgSW5BcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PihcbiAgICAuLi5pbkFyZ3M6IEluQXJnc1xuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkLFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSA9PiAodGhpczogU2VydmljZSwgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPikgPT4gdm9pZFxuXG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPiwgY29uc3QgT3V0QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgLi4uYXJnczogSW5BcmdzIHwgW2luQXJnczogSW5BcmdzLCBvdXRBcmdzPzogT3V0QXJnc11cbikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIG1ldGhvZDogKFxuICAgICAgICAgICAgdGhpczogU2VydmljZSxcbiAgICAgICAgICAgIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz5cbiAgICAgICAgKSA9PiBJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPiB8IHZvaWQsXG4gICAgICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuICAgICk6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBhbnkge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbE1ldGhvZChhcmdzLCBtZXRob2QsIGN0eClcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgICAgIGlmICh0aGlzW2ludGVybmFsc10ucHJveHkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXNbcmVtb3RlTWV0aG9kXShuYW1lLCBhcmdzKVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS5kZWVwVW5wYWNrPEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+PigpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBtZXRob2QuYXBwbHkodGhpcywgYXJncylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSBtZXRob2QuXG4gKiBZb3Ugc2hvdWxkIHByZWZlciB1c2luZyB0aGlzIG92ZXIge0BsaW5rIG1ldGhvZH0gd2hlbiBwcm94eWluZywgc2luY2UgdGhpcyBkb2VzIG5vdCBibG9jayBJTy5cbiAqIE5vdGUgdGhhdCB0aGlzIGlzIGZ1bmN0aW9uYWxseSB0aGUgc2FtZSBhcyB7QGxpbmsgbWV0aG9kfSBvbiBleHBvcnRlZCBvYmplY3RzLlxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2RBc3luYzxcbiAgICBjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4sXG4gICAgY29uc3QgT3V0QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPixcbj4oXG4gICAgaW5BcmdzOiBJbkFyZ3MsXG4gICAgb3V0QXJnczogT3V0QXJncyxcbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBhbnlbXSkgPT4gUHJvbWlzZTxJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPj4sXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4pID0+ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBQcm9taXNlPGFueT5cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSBtZXRob2QuXG4gKiBZb3Ugc2hvdWxkIHByZWZlciB1c2luZyB0aGlzIG92ZXIge0BsaW5rIG1ldGhvZH0gd2hlbiBwcm94eWluZywgc2luY2UgdGhpcyBkb2VzIG5vdCBibG9jayBJTy5cbiAqIE5vdGUgdGhhdCB0aGlzIGlzIGZ1bmN0aW9uYWxseSB0aGUgc2FtZSBhcyB7QGxpbmsgbWV0aG9kfSBvbiBleHBvcnRlZCBvYmplY3RzLlxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2RBc3luYzxjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIC4uLmluQXJnczogSW5BcmdzXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogU2VydmljZSwgLi4uYXJnczogYW55W10pID0+IFByb21pc2U8dm9pZD4sXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4pID0+ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBQcm9taXNlPHZvaWQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2RBc3luYzxcbiAgICBjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4sXG4gICAgY29uc3QgT3V0QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPixcbj4oLi4uYXJnczogSW5BcmdzIHwgW2luQXJnczogSW5BcmdzLCBvdXRBcmdzPzogT3V0QXJnc10pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBtZXRob2Q6IChcbiAgICAgICAgICAgIHRoaXM6IFNlcnZpY2UsXG4gICAgICAgICAgICAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+XG4gICAgICAgICkgPT4gUHJvbWlzZTxJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPiB8IHZvaWQ+LFxuICAgICAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbiAgICApOiAodGhpczogU2VydmljZSwgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPikgPT4gUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxNZXRob2QoYXJncywgbWV0aG9kLCBjdHgpXG5cbiAgICAgICAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgICAgICAgICBpZiAodGhpc1tpbnRlcm5hbHNdLnByb3h5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBhd2FpdCB0aGlzW3JlbW90ZU1ldGhvZEFzeW5jXShuYW1lLCBhcmdzKVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS5kZWVwVW5wYWNrPEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+PigpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBtZXRob2QuYXBwbHkodGhpcywgYXJncylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSByZWFkLXdyaXRlIHByb3BlcnR5LiBXaGVuIGEgbmV3IHZhbHVlIGlzIGFzc2lnbmVkIHRoZSBub3RpZnkgc2lnbmFsXG4gKiBpcyBhdXRvbWF0aWNhbGx5IGVtaXR0ZWQgb24gdGhlIGxvY2FsIGFuZCBleHBvcnRlZCBvYmplY3QuXG4gKlxuICogTm90ZSB0aGF0IG5ldyB2YWx1ZXMgYXJlIGNoZWNrZWQgYnkgcmVmZXJlbmNlIHNvIGFzc2lnbmluZyB0aGUgc2FtZSBvYmplY3Qgd2lsbFxuICogbm90IGVtaXQgdGhlIG5vdGlmeSBzaWduYWwuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByb3BlcnR5PFQgZXh0ZW5kcyBzdHJpbmc+KHR5cGU6IFQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBfOiB2b2lkLFxuICAgICAgICBjdHg6IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIERlZXBJbmZlcjxUPj4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIGluaXQ6IERlZXBJbmZlcjxUPikgPT4gYW55IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxQcm9wZXJ0eSh0eXBlLCBjdHgpXG5cbiAgICAgICAgdm9pZCBncHJvcGVydHkoeyAkZ3R5cGU6IGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlKSB9KShcbiAgICAgICAgICAgIF8sXG4gICAgICAgICAgICBjdHggYXMgQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQ8R09iamVjdC5PYmplY3Q+ICYgQ3R4LFxuICAgICAgICAgICAgeyBtZXRhT25seTogdHJ1ZSB9LFxuICAgICAgICApXG5cbiAgICAgICAgY3R4LmFkZEluaXRpYWxpemVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBuYW1lLCB7XG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNldCh2YWx1ZTogRGVlcEluZmVyPFQ+KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJveHksIHByaXYgfSA9IHRoaXNbaW50ZXJuYWxzXVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcm94eSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1tyZW1vdGVQcm9wZXJ0eVNldF0obmFtZSwgdmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcml2W25hbWVdICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJpdltuYW1lXSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShuYW1lIGFzIEV4dHJhY3Q8a2V5b2YgU2VydmljZSwgc3RyaW5nPilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0KCk6IERlZXBJbmZlcjxUPiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJveHksIHByaXYgfSA9IHRoaXNbaW50ZXJuYWxzXVxuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm94eVxuICAgICAgICAgICAgICAgICAgICAgICAgPyBwcm94eS5nZXRfY2FjaGVkX3Byb3BlcnR5KG5hbWUpIS5kZWVwVW5wYWNrPERlZXBJbmZlcjxUPj4oKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiAocHJpdltuYW1lXSBhcyBEZWVwSW5mZXI8VD4pXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gc2F0aXNmaWVzIFRoaXNUeXBlPFNlcnZpY2U+KVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoaW5pdCkge1xuICAgICAgICAgICAgY29uc3QgcHJpdiA9IHRoaXNbaW50ZXJuYWxzXS5wcml2XG4gICAgICAgICAgICBwcml2W25hbWVdID0gaW5pdFxuICAgICAgICAgICAgLy8gd2UgZG9uJ3QgbmVlZCB0byBzdG9yZSB0aGUgdmFsdWUgb24gdGhlIG9iamVjdCBpdHNlbGZcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSByZWFkLW9ubHkgcHJvcGVydHkuIENhbiBiZSB1c2VkIGluIGNvbmp1Y3Rpb24gd2l0aCB7QGxpbmsgc2V0dGVyfSB0byBkZWZpbmVcbiAqIHJlYWQtd3JpdGUgcHJvcGVydGllcyBhcyBhY2Nlc3NvcnMuXG4gKlxuICogTm90ZSB0aGF0IHlvdSB3aWxsIG5lZWQgdG8gZXhwbGljaXRseSBlbWl0IHRoZSBub3RpZnkgc2lnbmFsLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0dGVyPFQgZXh0ZW5kcyBzdHJpbmc+KHR5cGU6IFQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlKSA9PiBEZWVwSW5mZXI8VD4sXG4gICAgICAgIGN0eDogQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIERlZXBJbmZlcjxUPj4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UpID0+IGFueSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBpbnN0YWxsUHJvcGVydHkodHlwZSwgY3R4KVxuXG4gICAgICAgIGN0eC5hZGRJbml0aWFsaXplcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eUdldHRlcih0aGlzLCBuYW1lIGFzIEV4dHJhY3Q8a2V5b2YgU2VydmljZSwgc3RyaW5nPilcbiAgICAgICAgfSlcblxuICAgICAgICB2b2lkIGdnZXR0ZXIoeyAkZ3R5cGU6IGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlKSB9KShcbiAgICAgICAgICAgICgpID0+IHt9LFxuICAgICAgICAgICAgY3R4IGFzIENsYXNzR2V0dGVyRGVjb3JhdG9yQ29udGV4dDxHT2JqZWN0Lk9iamVjdD4gJiBDdHgsXG4gICAgICAgIClcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gZ2V0KCk6IERlZXBJbmZlcjxUPiB7XG4gICAgICAgICAgICBjb25zdCB7IHByb3h5IH0gPSB0aGlzW2ludGVybmFsc11cbiAgICAgICAgICAgIHJldHVybiBwcm94eVxuICAgICAgICAgICAgICAgID8gcHJveHkuZ2V0X2NhY2hlZF9wcm9wZXJ0eShuYW1lKSEuZGVlcFVucGFjazxEZWVwSW5mZXI8VD4+KClcbiAgICAgICAgICAgICAgICA6IG1ldGhvZC5jYWxsKHRoaXMpXG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgd3JpdGUtb25seSBwcm9wZXJ0eS4gQ2FuIGJlIHVzZWQgaW4gY29uanVjdGlvbiB3aXRoIHtAbGluayBnZXR0ZXJ9IHRvIGRlZmluZVxuICogcmVhZC13cml0ZSBwcm9wZXJ0aWVzIGFzIGFjY2Vzc29ycy5cbiAqXG4gKiBOb3RlIHRoYXQgeW91IHdpbGwgbmVlZCB0byBleHBsaWNpdGx5IGVtaXQgdGhlIG5vdGlmeSBzaWduYWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXR0ZXI8VCBleHRlbmRzIHN0cmluZz4odHlwZTogVCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIHNldHRlcjogKHRoaXM6IFNlcnZpY2UsIHZhbHVlOiBhbnkpID0+IHZvaWQsXG4gICAgICAgIGN0eDogQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIERlZXBJbmZlcjxUPj4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIHZhbHVlOiBEZWVwSW5mZXI8VD4pID0+IHZvaWQge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbFByb3BlcnR5KHR5cGUsIGN0eClcblxuICAgICAgICB2b2lkIGdzZXR0ZXIoeyAkZ3R5cGU6IGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlKSB9KShcbiAgICAgICAgICAgICgpID0+IHt9LFxuICAgICAgICAgICAgY3R4IGFzIENsYXNzU2V0dGVyRGVjb3JhdG9yQ29udGV4dDxHT2JqZWN0Lk9iamVjdD4gJiBDdHgsXG4gICAgICAgIClcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHZhbHVlOiBEZWVwSW5mZXI8VD4pIHtcbiAgICAgICAgICAgIGNvbnN0IHsgcHJveHkgfSA9IHRoaXNbaW50ZXJuYWxzXVxuXG4gICAgICAgICAgICBpZiAocHJveHkpIHtcbiAgICAgICAgICAgICAgICB0aGlzW3JlbW90ZVByb3BlcnR5U2V0XShuYW1lLCB2YWx1ZSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2V0dGVyLmNhbGwodGhpcywgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgc2lnbmFsIHdoaWNoIHdoZW4gaW52b2tlZCB3aWxsIGVtaXQgdGhlIHNpZ25hbFxuICogb24gdGhlIGxvY2FsIG9iamVjdCBhbmQgdGhlIGV4cG9ydGVkIG9iamVjdC5cbiAqXG4gKiAqKk5vdGUqKjogaXRzIG5vdCBwb3NzaWJsZSB0byBlbWl0IHNpZ25hbHMgb24gcmVtb3RlIG9iamVjdHMgdGhyb3VnaCBwcm94aWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsPGNvbnN0IFBhcmFtcyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oLi4ucGFyYW1zOiBQYXJhbXMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5wYXJhbXM6IGFueSkgPT4gdm9pZCxcbiAgICAgICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIC4uLnBhcmFtczogSW5mZXJWYXJpYW50VHlwZXM8UGFyYW1zPikgPT4gdm9pZCB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBpbnN0YWxsU2lnbmFsKHBhcmFtcywgY3R4KVxuXG4gICAgICAgIHZvaWQgZ3NpZ25hbCguLi5wYXJhbXMubWFwKGluZmVyR1R5cGVGcm9tVmFyaWFudCkpKFxuICAgICAgICAgICAgKCkgPT4ge30sXG4gICAgICAgICAgICBjdHggYXMgQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PEdPYmplY3QuT2JqZWN0PiAmIEN0eCxcbiAgICAgICAgKVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4ucGFyYW1zKSB7XG4gICAgICAgICAgICBpZiAodGhpc1tpbnRlcm5hbHNdLnByb3h5KSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBjYW5ub3QgZW1pdCBzaWduYWwgXCIke25hbWV9XCIgb24gcmVtb3RlIG9iamVjdGApXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdCB8fCAhdGhpc1tpbnRlcm5hbHNdLnByb3h5KSB7XG4gICAgICAgICAgICAgICAgbWV0aG9kLmFwcGx5KHRoaXMsIHBhcmFtcylcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZW1pdChuYW1lLCAuLi5wYXJhbXMpXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IHsgU2VydmljZSwgaWZhY2UsIG1ldGhvZEFzeW5jIH0gZnJvbSBcImduaW0vZGJ1c1wiXG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBwREJ1c0ltcGwge1xuICAgIGluc2VjdG9yKCk6IHZvaWRcbiAgICB0b2dnbGVXaW5kb3cobmFtZTogc3RyaW5nKTogdm9pZFxuICAgIHF1aXQoKTogdm9pZFxuICAgIHJlcXVlc3QoYXJndjogc3RyaW5nW10pOiBQcm9taXNlPHN0cmluZz5cbn1cblxuQGlmYWNlKFwiaW8uQXN0YWwuQXBwbGljYXRpb25cIilcbmV4cG9ydCBjbGFzcyBBcHBEQnVzIGV4dGVuZHMgU2VydmljZSB7XG4gICAgcHJpdmF0ZSBpbXBsOiBBcHBEQnVzSW1wbFxuXG4gICAgQG1ldGhvZEFzeW5jKClcbiAgICBhc3luYyBJbnNwZWN0b3IoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5pbXBsLmluc2VjdG9yKCkpXG4gICAgfVxuXG4gICAgQG1ldGhvZEFzeW5jKFwic1wiKVxuICAgIGFzeW5jIFRvZ2dsZVdpbmRvdyhuYW1lOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLmltcGwudG9nZ2xlV2luZG93KG5hbWUpKVxuICAgIH1cblxuICAgIEBtZXRob2RBc3luYygpXG4gICAgYXN5bmMgUXVpdCgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLmltcGwucXVpdCgpKVxuICAgIH1cblxuICAgIEBtZXRob2RBc3luYyhbXCJhc1wiXSwgW1wic1wiXSlcbiAgICBhc3luYyBSZXF1ZXN0KGFyZ3Y6IHN0cmluZ1tdKTogUHJvbWlzZTxbc3RyaW5nXT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5pbXBsLnJlcXVlc3QoYXJndikudGhlbigocmVzKSA9PiBbcmVzXSlcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcihpbXBsOiBBcHBEQnVzSW1wbCkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIHRoaXMuaW1wbCA9IGltcGxcbiAgICB9XG5cbiAgICBzdGF0aWMgcHJveHkoaW5zdGFuY2VOYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgYXBwID0gbmV3IEFwcERCdXMoe1xuICAgICAgICAgICAgaW5zZWN0b3IoKSB7fSxcbiAgICAgICAgICAgIHRvZ2dsZVdpbmRvdygpIHt9LFxuICAgICAgICAgICAgcXVpdCgpIHt9LFxuICAgICAgICAgICAgcmVxdWVzdDogKCkgPT4gUHJvbWlzZS5yZWplY3QoKSxcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gYXBwLnByb3h5KHtcbiAgICAgICAgICAgIG5hbWU6IFwiaW8uQXN0YWwuXCIgKyBpbnN0YW5jZU5hbWUsXG4gICAgICAgIH0pXG4gICAgfVxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tIFwiLi9GcmFnbWVudC5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IHR5cGUgQ0MsIHR5cGUgRkMsIGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBrZWJhYmlmeSwgdHlwZSBQYXNjYWxpZnksIHNldCB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuLyoqXG4gKiBSZXByZXNlbnRzIGFsbCBvZiB0aGUgdGhpbmdzIHRoYXQgY2FuIGJlIHBhc3NlZCBhcyBhIGNoaWxkIHRvIGNsYXNzIGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCB0eXBlIE5vZGUgPVxuICAgIHwgQXJyYXk8R09iamVjdC5PYmplY3Q+XG4gICAgfCBHT2JqZWN0Lk9iamVjdFxuICAgIHwgbnVtYmVyXG4gICAgfCBzdHJpbmdcbiAgICB8IGJvb2xlYW5cbiAgICB8IG51bGxcbiAgICB8IHVuZGVmaW5lZFxuXG5leHBvcnQgY29uc3QgZ3RrVHlwZSA9IFN5bWJvbChcImd0ayBidWlsZGVyIHR5cGVcIilcblxuLyoqXG4gKiBTcGVjaWFsIHN5bWJvbCB3aGljaCBsZXRzIHlvdSBpbXBsZW1lbnQgaG93IHdpZGdldHMgYXJlIGFwcGVuZGVkIGluIEpTWC5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjbGFzcyBNeUNvbXBvbmVudCBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAqICAgW2FwcGVuZENoaWxkXShjaGlsZDogR09iamVjdC5PYmplY3QsIHR5cGU6IHN0cmluZyB8IG51bGwpIHtcbiAqICAgICAvLyBpbXBsZW1lbnRcbiAqICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCBhcHBlbmRDaGlsZCA9IFN5bWJvbChcIkpTWCBhZGQgY2hpbGQgbWV0aG9kXCIpXG5cbi8qKlxuICogU3BlY2lhbCBzeW1ib2wgd2hpY2ggbGV0cyB5b3UgaW1wbGVtZW50IGhvdyB3aWRnZXRzIGFyZSByZW1vdmVkIGluIEpTWC5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjbGFzcyBNeUNvbXBvbmVudCBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAqICAgW3JlbW92ZUNoaWxkXShjaGlsZDogR09iamVjdC5PYmplY3QpIHtcbiAqICAgICAvLyBpbXBsZW1lbnRcbiAqICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCByZW1vdmVDaGlsZCA9IFN5bWJvbChcIkpTWCBhZGQgcmVtb3ZlIG1ldGhvZFwiKVxuXG4vKipcbiAqIEdldCB0aGUgdHlwZSBvZiB0aGUgb2JqZWN0IHNwZWNpZmllZCB0aHJvdWdoIHRoZSBgJHR5cGVgIHByb3BlcnR5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUeXBlKG9iamVjdDogR09iamVjdC5PYmplY3QpIHtcbiAgICByZXR1cm4gZ3RrVHlwZSBpbiBvYmplY3QgPyAob2JqZWN0W2d0a1R5cGVdIGFzIHN0cmluZykgOiBudWxsXG59XG5cbi8qKlxuICogRnVuY3Rpb24gQ29tcG9uZW50IFByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IHR5cGUgRkNQcm9wczxTZWxmLCBQcm9wcz4gPSBQcm9wcyAmIHtcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgYXMgYSBwYXJhbWV0ZXJzXG4gICAgICovXG4gICAgJHR5cGU/OiBzdHJpbmdcbiAgICAvKipcbiAgICAgKiBzZXR1cCBmdW5jdGlvblxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIGFzIGEgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgICQ/KHNlbGY6IFNlbGYpOiB2b2lkXG59XG5cbi8qKlxuICogQ2xhc3MgQ29tcG9uZW50IFByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IHR5cGUgQ0NQcm9wczxTZWxmIGV4dGVuZHMgR09iamVjdC5PYmplY3QsIFByb3BzPiA9IHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWwgY2hpbGRyZW4gZWxlbWVudHNcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBBcnJheTxOb2RlPiB8IE5vZGVcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG4gICAgLyoqXG4gICAgICogZnVuY3Rpb24gdG8gdXNlIGFzIGEgY29uc3RydWN0b3IsXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICRjb25zdHJ1Y3Rvcj8ocHJvcHM6IFBhcnRpYWw8UHJvcHM+KTogU2VsZlxuICAgIC8qKlxuICAgICAqIHNldHVwIGZ1bmN0aW9uLFxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkPyhzZWxmOiBTZWxmKTogdm9pZFxuICAgIC8qKlxuICAgICAqIENTUyBjbGFzcyBuYW1lc1xuICAgICAqL1xuICAgIGNsYXNzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxuICAgIC8qKlxuICAgICAqIGlubGluZSBDU1NcbiAgICAgKi9cbiAgICBjc3M/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG59ICYge1xuICAgIFtLIGluIGtleW9mIFByb3BzXTogQWNjZXNzb3I8Tm9uTnVsbGFibGU8UHJvcHNbS10+PiB8IFByb3BzW0tdXG59ICYge1xuICAgIFtTIGluIGtleW9mIFNlbGZbXCIkc2lnbmFsc1wiXSBhcyBTIGV4dGVuZHMgYG5vdGlmeTo6JHtpbmZlciBQfWBcbiAgICAgICAgPyBgb25Ob3RpZnkke1Bhc2NhbGlmeTxQPn1gXG4gICAgICAgIDogUyBleHRlbmRzIGAke2luZmVyIEV9Ojoke2luZmVyIER9YFxuICAgICAgICAgID8gYG9uJHtQYXNjYWxpZnk8YCR7RX06JHtEfWA+fWBcbiAgICAgICAgICA6IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgICAgID8gYG9uJHtQYXNjYWxpZnk8Uz59YFxuICAgICAgICAgICAgOiBuZXZlcl0/OiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPFNlbGYsIFNlbGZbXCIkc2lnbmFsc1wiXVtTXT5cbn1cblxuLy8gcHJldHRpZXItaWdub3JlXG50eXBlIEpzeFByb3BzPEMsIFByb3BzPiA9XG4gICAgQyBleHRlbmRzIHR5cGVvZiBGcmFnbWVudCA/IChQcm9wcyAmIHt9KVxuICAgIC8vIGludHJpbnNpY0VsZW1lbnRzIGFsd2F5cyByZXNvbHZlIGFzIEZDXG4gICAgLy8gc28gd2UgY2FuJ3QgbmFycm93IGl0IGRvd24sIGFuZCBpbiBzb21lIGNhc2VzXG4gICAgLy8gdGhlIHNldHVwIGZ1bmN0aW9uIGlzIHR5cGVkIGFzIGEgdW5pb24gb2YgT2JqZWN0IGFuZCBhY3R1YWwgdHlwZVxuICAgIC8vIGFzIGEgZml4IHVzZXJzIGNhbiBhbmQgc2hvdWxkIHVzZSBGQ1Byb3BzXG4gICAgOiBDIGV4dGVuZHMgRkMgPyBQcm9wcyAmIE9taXQ8RkNQcm9wczxSZXR1cm5UeXBlPEM+LCBQcm9wcz4sIFwiJFwiPlxuICAgIDogQyBleHRlbmRzIENDID8gQ0NQcm9wczxJbnN0YW5jZVR5cGU8Qz4sIFByb3BzPlxuICAgIDogbmV2ZXJcblxuZnVuY3Rpb24gaXNHT2JqZWN0Q3RvcihjdG9yOiBhbnkpOiBjdG9yIGlzIENDIHtcbiAgICByZXR1cm4gY3Rvci5wcm90b3R5cGUgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdFxufVxuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uQ3RvcihjdG9yOiBhbnkpOiBjdG9yIGlzIEZDIHtcbiAgICByZXR1cm4gdHlwZW9mIGN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiAhaXNHT2JqZWN0Q3RvcihjdG9yKVxufVxuXG4vLyBvbk5vdGlmeVByb3BOYW1lIC0+IG5vdGlmeTo6cHJvcC1uYW1lXG4vLyBvblBhc2NhbE5hbWU6ZGV0YWlsTmFtZSAtPiBwYXNjYWwtbmFtZTo6ZGV0YWlsLW5hbWVcbmV4cG9ydCBmdW5jdGlvbiBzaWduYWxOYW1lKGtleTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBjb25zdCBbc2lnLCBkZXRhaWxdID0ga2ViYWJpZnkoa2V5LnNsaWNlKDIpKS5zcGxpdChcIjpcIilcblxuICAgIGlmIChzaWcuc3RhcnRzV2l0aChcIm5vdGlmeS1cIikpIHtcbiAgICAgICAgcmV0dXJuIGBub3RpZnk6OiR7c2lnLnNsaWNlKDcpfWBcbiAgICB9XG5cbiAgICByZXR1cm4gZGV0YWlsID8gYCR7c2lnfTo6JHtkZXRhaWx9YCA6IHNpZ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlKHBhcmVudDogR09iamVjdC5PYmplY3QsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICBwYXJlbnQucmVtb3ZlKGNoaWxkKVxuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAocmVtb3ZlQ2hpbGQgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnRbcmVtb3ZlQ2hpbGRdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcGFyZW50W3JlbW92ZUNoaWxkXShjaGlsZClcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZW52LnJlbW92ZUNoaWxkKHBhcmVudCwgY2hpbGQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcHBlbmQocGFyZW50OiBHT2JqZWN0Lk9iamVjdCwgY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgIHBhcmVudC5hcHBlbmQoY2hpbGQpXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQpIHtcbiAgICAgICAgICAgIGFwcGVuZChwYXJlbnQsIGNoKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgYXBwZW5kSGFuZGxlciA9IGNoaWxkLmNvbm5lY3QoXCJhcHBlbmRcIiwgKF8sIGNoKSA9PiB7XG4gICAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IGFkZCAke2NofSB0byAke3BhcmVudH1gKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFwcGVuZChwYXJlbnQsIGNoKVxuICAgICAgICB9KVxuXG4gICAgICAgIGNvbnN0IHJlbW92ZUhhbmRsZXIgPSBjaGlsZC5jb25uZWN0KFwicmVtb3ZlXCIsIChfLCBjaCkgPT4ge1xuICAgICAgICAgICAgaWYgKCEoY2ggaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaH0gZnJvbSAke3BhcmVudH1gKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlbW92ZShwYXJlbnQsIGNoKVxuICAgICAgICB9KVxuXG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICBjaGlsZC5kaXNjb25uZWN0KGFwcGVuZEhhbmRsZXIpXG4gICAgICAgICAgICBjaGlsZC5kaXNjb25uZWN0KHJlbW92ZUhhbmRsZXIpXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKGFwcGVuZENoaWxkIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50W2FwcGVuZENoaWxkXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHBhcmVudFthcHBlbmRDaGlsZF0oY2hpbGQsIGdldFR5cGUoY2hpbGQpKVxuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBlbnYuYXBwZW5kQ2hpbGQocGFyZW50LCBjaGlsZClcbn1cblxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldFR5cGUob2JqZWN0OiBvYmplY3QsIHR5cGU6IHN0cmluZykge1xuICAgIGlmIChndGtUeXBlIGluIG9iamVjdCAmJiBvYmplY3RbZ3RrVHlwZV0gIT09IFwiXCIpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGB0eXBlIG92ZXJyaWRlbiBmcm9tICR7b2JqZWN0W2d0a1R5cGVdfSB0byAke3R5cGV9IG9uICR7b2JqZWN0fWApXG4gICAgfVxuXG4gICAgT2JqZWN0LmFzc2lnbihvYmplY3QsIHsgW2d0a1R5cGVdOiB0eXBlIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIChwcm9wczogYW55KSA9PiBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3RvcjogVCxcbiAgICBwcm9wczogSnN4UHJvcHM8VCwgUGFyYW1ldGVyczxUPlswXT4sXG4pOiBSZXR1cm5UeXBlPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIG5ldyAocHJvcHM6IGFueSkgPT4gR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IFQsXG4gICAgcHJvcHM6IEpzeFByb3BzPFQsIENvbnN0cnVjdG9yUGFyYW1ldGVyczxUPlswXT4sXG4pOiBJbnN0YW5jZVR5cGU8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IGtleW9mICh0eXBlb2YgZW52KVtcImludHJpbnNpY0VsZW1lbnRzXCJdIHwgKG5ldyAocHJvcHM6IGFueSkgPT4gVCkgfCAoKHByb3BzOiBhbnkpID0+IFQpLFxuICAgIGlucHJvcHM6IGFueSxcbiAgICAvLyBrZXkgaXMgYSBzcGVjaWFsIHByb3AgaW4ganN4IHdoaWNoIGlzIHBhc3NlZCBhcyBhIHRoaXJkIGFyZ3VtZW50IGFuZCBub3QgaW4gcHJvcHNcbiAgICBrZXk/OiBzdHJpbmcsXG4pOiBUIHtcbiAgICBjb25zdCB7ICQsICR0eXBlLCAkY29uc3RydWN0b3IsIGNoaWxkcmVuLCAuLi5yZXN0IH0gPSBpbnByb3BzIGFzIENDUHJvcHM8VCwgYW55PlxuICAgIGNvbnN0IHByb3BzID0gcmVzdCBhcyBSZWNvcmQ8c3RyaW5nLCBhbnk+XG5cbiAgICBpZiAoa2V5KSBPYmplY3QuYXNzaWduKHByb3BzLCB7IGtleSB9KVxuXG4gICAgY29uc3QgZGVmZXJQcm9wcyA9IGVudi5pbml0UHJvcHMoY3RvciwgcHJvcHMpID8/IFtdXG4gICAgY29uc3QgZGVmZXJyZWRQcm9wczogUmVjb3JkPHN0cmluZywgdW5rbm93bj4gPSB7fVxuXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBkZWxldGUgcHJvcHNba2V5XVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRlZmVyUHJvcHMuaW5jbHVkZXMoa2V5KSkge1xuICAgICAgICAgICAgZGVmZXJyZWRQcm9wc1trZXldID0gcHJvcHNba2V5XVxuICAgICAgICAgICAgZGVsZXRlIHByb3BzW2tleV1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgY3RvciA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBpZiAoY3RvciBpbiBlbnYuaW50cmluc2ljRWxlbWVudHMpIHtcbiAgICAgICAgICAgIGN0b3IgPSBlbnYuaW50cmluc2ljRWxlbWVudHNbY3Rvcl0gYXMgRkM8VD4gfCBDQzxUPlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYHVua25vd24gaW50cmluc2ljIGVsZW1lbnQgXCIke2N0b3J9XCJgKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGlzRnVuY3Rpb25DdG9yKGN0b3IpKSB7XG4gICAgICAgIGNvbnN0IG9iamVjdCA9IGN0b3IoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSlcbiAgICAgICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG4gICAgICAgICQ/LihvYmplY3QpXG4gICAgICAgIHJldHVybiBvYmplY3RcbiAgICB9XG5cbiAgICAvLyBjb2xsZWN0IGNzcyBhbmQgY2xhc3NOYW1lXG4gICAgY29uc3QgeyBjc3MsIGNsYXNzOiBjbGFzc05hbWUgfSA9IHByb3BzXG4gICAgZGVsZXRlIHByb3BzLmNzc1xuICAgIGRlbGV0ZSBwcm9wcy5jbGFzc1xuXG4gICAgY29uc3Qgc2lnbmFsczogQXJyYXk8W3N0cmluZywgKC4uLnByb3BzOiB1bmtub3duW10pID0+IHVua25vd25dPiA9IFtdXG4gICAgY29uc3QgYmluZGluZ3M6IEFycmF5PFtzdHJpbmcsIEFjY2Vzc29yPHVua25vd24+XT4gPSBbXVxuXG4gICAgLy8gY29sbGVjdCBzaWduYWxzIGFuZCBiaW5kaW5nc1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAoa2V5LnN0YXJ0c1dpdGgoXCJvblwiKSkge1xuICAgICAgICAgICAgc2lnbmFscy5wdXNoKFtrZXksIHZhbHVlIGFzICgpID0+IHVua25vd25dKVxuICAgICAgICAgICAgZGVsZXRlIHByb3BzW2tleV1cbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgYmluZGluZ3MucHVzaChba2V5LCB2YWx1ZV0pXG4gICAgICAgICAgICBwcm9wc1trZXldID0gdmFsdWUuZ2V0KClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGNvbnN0cnVjdFxuICAgIGNvbnN0IG9iamVjdCA9ICRjb25zdHJ1Y3RvciA/ICRjb25zdHJ1Y3Rvcihwcm9wcykgOiBuZXcgKGN0b3IgYXMgQ0M8VD4pKHByb3BzKVxuICAgIGlmICgkY29uc3RydWN0b3IpIE9iamVjdC5hc3NpZ24ob2JqZWN0LCBwcm9wcylcbiAgICBpZiAoJHR5cGUpIHNldFR5cGUob2JqZWN0LCAkdHlwZSlcblxuICAgIGlmIChjc3MpIGVudi5zZXRDc3Mob2JqZWN0LCBjc3MpXG4gICAgaWYgKGNsYXNzTmFtZSkgZW52LnNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKVxuXG4gICAgLy8gYWRkIGNoaWxkcmVuXG4gICAgZm9yIChsZXQgY2hpbGQgb2YgQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pIHtcbiAgICAgICAgaWYgKGNoaWxkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oRXJyb3IoXCJUcnlpbmcgdG8gYWRkIGJvb2xlYW4gdmFsdWUgb2YgYHRydWVgIGFzIGEgY2hpbGQuXCIpKVxuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkKSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZCkge1xuICAgICAgICAgICAgICAgIGFwcGVuZChvYmplY3QsIGNoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICBpZiAoIShjaGlsZCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgIGNoaWxkID0gZW52LnRleHROb2RlKGNoaWxkKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXBwZW5kKG9iamVjdCwgY2hpbGQpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBoYW5kbGUgc2lnbmFsc1xuICAgIGNvbnN0IGRpc3Bvc2VIYW5kbGVycyA9IHNpZ25hbHMubWFwKChbc2lnLCBoYW5kbGVyXSkgPT4ge1xuICAgICAgICBjb25zdCBpZCA9IG9iamVjdC5jb25uZWN0KHNpZ25hbE5hbWUoc2lnKSwgaGFuZGxlcilcbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH0pXG5cbiAgICAvLyBkZWZlcnJlZCBwcm9wc1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGRlZmVycmVkUHJvcHMpKSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBiaW5kaW5ncy5wdXNoKFtrZXksIHZhbHVlXSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob2JqZWN0LCB7IFtrZXldOiB2YWx1ZSB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gaGFuZGxlIGJpbmRpbmdzXG4gICAgY29uc3QgZGlzcG9zZUJpbmRpbmdzID0gYmluZGluZ3MubWFwKChbcHJvcCwgYmluZGluZ10pID0+IHtcbiAgICAgICAgY29uc3QgZGlzcG9zZSA9IGJpbmRpbmcuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgIHNldChvYmplY3QsIHByb3AsIGJpbmRpbmcuZ2V0KCkpXG4gICAgICAgIH0pXG4gICAgICAgIHNldChvYmplY3QsIHByb3AsIGJpbmRpbmcuZ2V0KCkpXG4gICAgICAgIHJldHVybiBkaXNwb3NlXG4gICAgfSlcblxuICAgIC8vIGNsZWFudXBcbiAgICBpZiAoZGlzcG9zZUJpbmRpbmdzLmxlbmd0aCA+IDAgfHwgZGlzcG9zZUhhbmRsZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgICAgIGRpc3Bvc2VIYW5kbGVycy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgIGRpc3Bvc2VCaW5kaW5ncy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAkPy4ob2JqZWN0KVxuICAgIHJldHVybiBvYmplY3Rcbn1cblxuLy8gVE9ETzogbWFrZSB1c2Ugb2YganN4c1xuZXhwb3J0IGNvbnN0IGpzeHMgPSBqc3hcblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbmFtZXNwYWNlXG4gICAgbmFtZXNwYWNlIEpTWCB7XG4gICAgICAgIHR5cGUgRWxlbWVudFR5cGUgPSBrZXlvZiBJbnRyaW5zaWNFbGVtZW50cyB8IEZDIHwgQ0NcbiAgICAgICAgdHlwZSBFbGVtZW50ID0gR09iamVjdC5PYmplY3RcbiAgICAgICAgdHlwZSBFbGVtZW50Q2xhc3MgPSBHT2JqZWN0Lk9iamVjdFxuXG4gICAgICAgIHR5cGUgTGlicmFyeU1hbmFnZWRBdHRyaWJ1dGVzPEMsIFByb3BzPiA9IEpzeFByb3BzPEMsIFByb3BzPiAmIHtcbiAgICAgICAgICAgIC8vIEZJWE1FOiB3aHkgZG9lcyBhbiBpbnRyaW5zaWMgZWxlbWVudCBhbHdheXMgcmVzb2x2ZSBhcyBGQz9cbiAgICAgICAgICAgIC8vIF9fdHlwZT86IEMgZXh0ZW5kcyBDQyA/IFwiQ0NcIiA6IEMgZXh0ZW5kcyBGQyA/IFwiRkNcIiA6IG5ldmVyXG4gICAgICAgIH1cblxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LW9iamVjdC10eXBlXG4gICAgICAgIGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyB7XG4gICAgICAgICAgICAvLyBjYzogQ0NQcm9wczxHdGsuQm94LCBHdGsuQm94LkNvbnN0cnVjdG9yUHJvcHMsIEd0ay5Cb3guU2lnbmFsU2lnbmF0dXJlcz5cbiAgICAgICAgICAgIC8vIGZjOiBGQ1Byb3BzPEd0ay5XaWRnZXQsIEZuUHJvcHM+XG4gICAgICAgIH1cblxuICAgICAgICBpbnRlcmZhY2UgRWxlbWVudENoaWxkcmVuQXR0cmlidXRlIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktb2JqZWN0LXR5cGVcbiAgICAgICAgICAgIGNoaWxkcmVuOiB7fVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG5pbnRlcmZhY2UgRnJhZ21lbnRTaWduYWxzPFQ+IGV4dGVuZHMgR09iamVjdC5PYmplY3QuU2lnbmFsU2lnbmF0dXJlcyB7XG4gICAgYXBwZW5kOiAoY2hpbGQ6IFQpID0+IHZvaWRcbiAgICByZW1vdmU6IChjaGlsZDogVCkgPT4gdm9pZFxufVxuXG5leHBvcnQgY2xhc3MgRnJhZ21lbnQ8VCA9IGFueT4gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgZGVjbGFyZSAkc2lnbmFsczogRnJhZ21lbnRTaWduYWxzPFQ+XG5cbiAgICBzdGF0aWMgW0dPYmplY3Quc2lnbmFsc10gPSB7XG4gICAgICAgIGFwcGVuZDogeyBwYXJhbV90eXBlczogW0dPYmplY3QuVFlQRV9PQkpFQ1RdIH0sXG4gICAgICAgIHJlbW92ZTogeyBwYXJhbV90eXBlczogW0dPYmplY3QuVFlQRV9PQkpFQ1RdIH0sXG4gICAgfVxuXG4gICAgc3RhdGljIFtHT2JqZWN0LnByb3BlcnRpZXNdID0ge1xuICAgICAgICBjaGlsZHJlbjogR09iamVjdC5QYXJhbVNwZWMuanNvYmplY3QoXCJjaGlsZHJlblwiLCBcIlwiLCBcIlwiLCBHT2JqZWN0LlBhcmFtRmxhZ3MuUkVBREFCTEUpLFxuICAgIH1cblxuICAgIHN0YXRpYyB7XG4gICAgICAgIEdPYmplY3QucmVnaXN0ZXJDbGFzcyh0aGlzKVxuICAgIH1cblxuICAgICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICAgICAgeWllbGQqIHRoaXMuX2NoaWxkcmVuXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBfY2hpbGRyZW46IEFycmF5PFQ+XG5cbiAgICBhcHBlbmQoY2hpbGQ6IFQpOiB2b2lkIHtcbiAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBuZXN0aW5nIEZyYWdtZW50cyBhcmUgbm90IHlldCBzdXBwb3J0ZWRgKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fY2hpbGRyZW4ucHVzaChjaGlsZClcbiAgICAgICAgdGhpcy5lbWl0KFwiYXBwZW5kXCIsIGNoaWxkKVxuICAgICAgICB0aGlzLm5vdGlmeShcImNoaWxkcmVuXCIpXG4gICAgfVxuXG4gICAgcmVtb3ZlKGNoaWxkOiBUKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fY2hpbGRyZW4uZmluZEluZGV4KChpKSA9PiBpID09PSBjaGlsZClcbiAgICAgICAgdGhpcy5fY2hpbGRyZW4uc3BsaWNlKGluZGV4LCAxKVxuXG4gICAgICAgIHRoaXMuZW1pdChcInJlbW92ZVwiLCBjaGlsZClcbiAgICAgICAgdGhpcy5ub3RpZnkoXCJjaGlsZHJlblwiKVxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHsgY2hpbGRyZW4gPSBbXSB9OiBQYXJ0aWFsPHsgY2hpbGRyZW46IEFycmF5PFQ+IHwgVCB9PiA9IHt9KSB7XG4gICAgICAgIHN1cGVyKClcbiAgICAgICAgdGhpcy5fY2hpbGRyZW4gPSBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXVxuICAgIH1cblxuICAgIGNvbm5lY3Q8UyBleHRlbmRzIGtleW9mIEZyYWdtZW50U2lnbmFsczxUPj4oXG4gICAgICAgIHNpZ25hbDogUyxcbiAgICAgICAgY2FsbGJhY2s6IEdPYmplY3QuU2lnbmFsQ2FsbGJhY2s8dGhpcywgRnJhZ21lbnRTaWduYWxzPFQ+W1NdPixcbiAgICApOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKVxuICAgIH1cbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvXCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWJcIlxuaW1wb3J0IHsgdHlwZSBQYXNjYWxpZnksIGNhbWVsaWZ5LCBrZWJhYmlmeSB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB0eXBlIHsgRGVlcEluZmVyLCBSZWN1cnNpdmVJbmZlciB9IGZyb20gXCIuLi92YXJpYW50LmpzXCJcblxudHlwZSBTdWJzY3JpYmVDYWxsYmFjayA9ICgpID0+IHZvaWRcbnR5cGUgRGlzcG9zZUZ1bmN0aW9uID0gKCkgPT4gdm9pZFxudHlwZSBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjazogU3Vic2NyaWJlQ2FsbGJhY2spID0+IERpc3Bvc2VGdW5jdGlvblxuXG5leHBvcnQgdHlwZSBBY2Nlc3NlZDxUPiA9IFQgZXh0ZW5kcyBBY2Nlc3NvcjxpbmZlciBWPiA/IFYgOiBuZXZlclxuXG5jb25zdCBlbXB0eSA9IFN5bWJvbChcImVtcHR5IGNvbXB1dGVkIHZhbHVlXCIpXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWRlY2xhcmF0aW9uLW1lcmdpbmdcbmV4cG9ydCBjbGFzcyBBY2Nlc3NvcjxUID0gdW5rbm93bj4gZXh0ZW5kcyBGdW5jdGlvbiB7XG4gICAgc3RhdGljICRndHlwZSA9IEdPYmplY3QuVFlQRV9KU09CSkVDVCBhcyB1bmtub3duIGFzIEdPYmplY3QuR1R5cGU8QWNjZXNzb3I+XG5cbiAgICAjZ2V0OiAoKSA9PiBUXG4gICAgI3N1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb25cblxuICAgIGNvbnN0cnVjdG9yKGdldDogKCkgPT4gVCwgc3Vic2NyaWJlPzogU3Vic2NyaWJlRnVuY3Rpb24pIHtcbiAgICAgICAgc3VwZXIoXCJyZXR1cm4gYXJndW1lbnRzLmNhbGxlZS5fY2FsbC5hcHBseShhcmd1bWVudHMuY2FsbGVlLCBhcmd1bWVudHMpXCIpXG4gICAgICAgIHRoaXMuI3N1YnNjcmliZSA9IHN1YnNjcmliZSA/PyAoKCkgPT4gKCkgPT4gdm9pZCAwKVxuICAgICAgICB0aGlzLiNnZXQgPSBnZXRcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdWJzY3JpYmUgZm9yIHZhbHVlIGNoYW5nZXMuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBydW4gd2hlbiB0aGUgY3VycmVudCB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqIEByZXR1cm5zIFVuc3Vic2NyaWJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIHN1YnNjcmliZShjYWxsYmFjazogU3Vic2NyaWJlQ2FsbGJhY2spOiBEaXNwb3NlRnVuY3Rpb24ge1xuICAgICAgICByZXR1cm4gdGhpcy4jc3Vic2NyaWJlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIFRoZSBjdXJyZW50IHZhbHVlLlxuICAgICAqL1xuICAgIGdldCgpOiBUIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI2dldCgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGBBY2Nlc3NvcmAgdGhhdCBhcHBsaWVzIGEgdHJhbnNmb3JtYXRpb24gb24gaXRzIHZhbHVlLlxuICAgICAqIEBwYXJhbSB0cmFuc2Zvcm0gVGhlIHRyYW5zZm9ybWF0aW9uIHRvIGFwcGx5LiBTaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIGFzPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiB0cmFuc2Zvcm0odGhpcy4jZ2V0KCkpLCB0aGlzLiNzdWJzY3JpYmUpXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9jYWxsPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+IHtcbiAgICAgICAgbGV0IHZhbHVlOiB0eXBlb2YgZW1wdHkgfCBSID0gZW1wdHlcbiAgICAgICAgbGV0IHVuc3ViOiBEaXNwb3NlRnVuY3Rpb25cblxuICAgICAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgICAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHVuc3ViID0gdGhpcy5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHRyYW5zZm9ybSh0aGlzLmdldCgpKVxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBlbXB0eVxuICAgICAgICAgICAgICAgICAgICB1bnN1YigpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZ2V0ID0gKCk6IFIgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlICE9PSBlbXB0eSA/IHZhbHVlIDogdHJhbnNmb3JtKHRoaXMuZ2V0KCkpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxuICAgIH1cblxuICAgIHRvU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBgQWNjZXNzb3I8JHt0aGlzLmdldCgpfT5gXG4gICAgfVxuXG4gICAgW1N5bWJvbC50b1ByaW1pdGl2ZV0oKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkFjY2Vzc29yIGltcGxpY2l0bHkgY29udmVydGVkIHRvIGEgcHJpbWl0aXZlIHZhbHVlLlwiKVxuICAgICAgICByZXR1cm4gdGhpcy50b1N0cmluZygpXG4gICAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFjY2Vzc29yPFQ+IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBjb21wdXRlZCBgQWNjZXNzb3JgIHRoYXQgY2FjaGVzIGl0cyB0cmFuc2Zvcm1lZCB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi5cbiAgICAgKiBzZWUge0BsaW5rIGNyZWF0ZUNvbXB1dGVkfSBhbmQge0BsaW5rIGNyZWF0ZUNvbXB1dGVkUHJvZHVjZXJ9XG4gICAgICovXG4gICAgPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+XG59XG5cbmV4cG9ydCB0eXBlIFNldHRlcjxUPiA9IHtcbiAgICAodmFsdWU6IFQpOiB2b2lkXG4gICAgKHZhbHVlOiAocHJldjogVCkgPT4gVCk6IHZvaWRcbn1cblxuZXhwb3J0IHR5cGUgU3RhdGU8VD4gPSBbQWNjZXNzb3I8VD4sIFNldHRlcjxUPl1cblxuLyoqXG4gKiBDcmVhdGUgYSB3cml0YWJsZSBzaWduYWwuXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGludGlhbCB2YWx1ZSBvZiB0aGUgc2lnbmFsXG4gKiBAcmV0dXJucyBBbiBgQWNjZXNzb3JgIGFuZCBhIHNldHRlciBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RhdGU8VD4oaW5pdDogVCk6IFN0YXRlPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG4gICAgICAgIHJldHVybiAoKSA9PiBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgY29uc3Qgc2V0ID0gKG5ld1ZhbHVlOiB1bmtub3duKSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlOiBUID0gdHlwZW9mIG5ld1ZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBuZXdWYWx1ZShjdXJyZW50VmFsdWUpIDogbmV3VmFsdWVcbiAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAvLyBydW5uaW5nIGNhbGxiYWNrcyBtaWdodCBtdXRhdGUgc3Vic2NyaWJlcnNcbiAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFtuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpLCBzZXQgYXMgU2V0dGVyPFQ+XVxufVxuXG5mdW5jdGlvbiBjcmVhdGVDb21wdXRlZFByb2R1Y2VyPFQ+KGZuOiAodHJhY2s6IDxWPihzaWduYWw6IEFjY2Vzc29yPFY+KSA9PiBWKSA9PiBUKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCB2YWx1ZTogdHlwZW9mIGVtcHR5IHwgVCA9IGVtcHR5XG4gICAgbGV0IHByZXZEZXBzID0gbmV3IE1hcDxBY2Nlc3NvciwgRGlzcG9zZUZ1bmN0aW9uPigpXG5cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcbiAgICBjb25zdCBjYWNoZSA9IG5ldyBNYXA8QWNjZXNzb3IsIHVua25vd24+KClcblxuICAgIGNvbnN0IGVmZmVjdCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZGVwcyA9IG5ldyBTZXQ8QWNjZXNzb3I+KClcbiAgICAgICAgY29uc3QgbmV3VmFsdWUgPSBmbigodikgPT4ge1xuICAgICAgICAgICAgZGVwcy5hZGQodilcbiAgICAgICAgICAgIHJldHVybiAoY2FjaGUuZ2V0KHYpIGFzIGFueSkgfHwgdi5nZXQoKVxuICAgICAgICB9KVxuXG4gICAgICAgIGNvbnN0IGRpZENoYW5nZSA9IHZhbHVlICE9PSBuZXdWYWx1ZVxuICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlXG5cbiAgICAgICAgY29uc3QgbmV3RGVwcyA9IG5ldyBNYXA8QWNjZXNzb3IsIERpc3Bvc2VGdW5jdGlvbj4oKVxuXG4gICAgICAgIGZvciAoY29uc3QgW2RlcCwgdW5zdWJdIG9mIHByZXZEZXBzKSB7XG4gICAgICAgICAgICBpZiAoIWRlcHMuaGFzKGRlcCkpIHtcbiAgICAgICAgICAgICAgICB1bnN1YigpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld0RlcHMuc2V0KGRlcCwgdW5zdWIpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGNvbnN0IGRlcCBvZiBkZXBzKSB7XG4gICAgICAgICAgICBpZiAoIW5ld0RlcHMuaGFzKGRlcCkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gZGVwLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZS5nZXQoZGVwKSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlLnNldChkZXAsIHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgZWZmZWN0KClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgbmV3RGVwcy5zZXQoZGVwLCBkaXNwb3NlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHJldkRlcHMgPSBuZXdEZXBzXG4gICAgICAgIGlmIChkaWRDaGFuZ2UpIHtcbiAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZWZmZWN0KClcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IGVtcHR5XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBbLCB1bnN1Yl0gb2YgcHJldkRlcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgdW5zdWIoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBUID0+IHtcbiAgICAgICAgcmV0dXJuIHZhbHVlICE9PSBlbXB0eSA/IHZhbHVlIDogZm4oKHYpID0+IHYuZ2V0KCkpXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWRBcmdzPFxuICAgIGNvbnN0IERlcHMgZXh0ZW5kcyBBcnJheTxBY2Nlc3Nvcjxhbnk+PixcbiAgICBBcmdzIGV4dGVuZHMgeyBbSyBpbiBrZXlvZiBEZXBzXTogQWNjZXNzZWQ8RGVwc1tLXT4gfSxcbiAgICBWID0gQXJncyxcbj4oZGVwczogRGVwcywgdHJhbnNmb3JtPzogKC4uLmFyZ3M6IEFyZ3MpID0+IFYpOiBBY2Nlc3NvcjxWPiB7XG4gICAgbGV0IGRpc3Bvc2U6IEFycmF5PERpc3Bvc2VGdW5jdGlvbj5cbiAgICBsZXQgdmFsdWU6IHR5cGVvZiBlbXB0eSB8IFYgPSBlbXB0eVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3QgY2FjaGUgPSBuZXcgQXJyYXk8dW5rbm93bj4oZGVwcy5sZW5ndGgpXG5cbiAgICBjb25zdCBjb21wdXRlID0gKCk6IFYgPT4ge1xuICAgICAgICBjb25zdCBhcmdzID0gZGVwcy5tYXAoKGRlcCwgaSkgPT4ge1xuICAgICAgICAgICAgaWYgKCFjYWNoZVtpXSkge1xuICAgICAgICAgICAgICAgIGNhY2hlW2ldID0gZGVwLmdldCgpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBjYWNoZVtpXVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oLi4uKGFyZ3MgYXMgQXJncykpIDogKGFyZ3MgYXMgVilcbiAgICB9XG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gZGVwcy5tYXAoKGRlcCwgaSkgPT5cbiAgICAgICAgICAgICAgICBkZXAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSBkZXAuZ2V0KClcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhY2hlW2ldICE9PSBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KClcblxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSBjb21wdXRlKClcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IGVtcHR5XG4gICAgICAgICAgICAgICAgZGlzcG9zZS5tYXAoKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubGVuZ3RoID0gMFxuICAgICAgICAgICAgICAgIGNhY2hlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBWID0+IHtcbiAgICAgICAgcmV0dXJuIHZhbHVlICE9PSBlbXB0eSA/IHZhbHVlIDogY29tcHV0ZSgpXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCBmcm9tIGEgcHJvZHVjZXIgZnVuY3Rpb24gdGhhdCB0cmFja3MgaXRzIGRlcGVuZGVuY2llcy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBsZXQgYTogQWNjZXNzb3I8bnVtYmVyPlxuICogbGV0IGI6IEFjY2Vzc29yPG51bWJlcj5cbiAqIGNvbnN0IGM6IEFjY2Vzc29yPG51bWJlcj4gPSBjcmVhdGVDb21wdXRlZCgoZ2V0KSA9PiBnZXQoYSkgKyBnZXQoYikpXG4gKiBgYGBcbiAqXG4gKiBAZXhwZXJpbWVudGFsXG4gKiBAcGFyYW0gcHJvZHVjZXIgVGhlIHByb2R1Y2VyIGZ1bmN0aW9uIHdoaWNoIGxldCdzIHlvdSB0cmFjayBkZXBlbmRlbmNpZXNcbiAqIEByZXR1cm5zIFRoZSBjb21wdXRlZCBgQWNjZXNzb3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQ8VD4oXG4gICAgcHJvZHVjZXI6ICh0cmFjazogPFY+KHNpZ25hbDogQWNjZXNzb3I8Vj4pID0+IFYpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIHdoaWNoIGlzIGNvbXB1dGVkIGZyb20gYSBsaXN0IG9mIGdpdmVuIGBBY2Nlc3NvcmBzLlxuICpcbiAqIGBgYHRzIEV4YW1wbGVcbiAqIGxldCBhOiBBY2Nlc3NvcjxudW1iZXI+XG4gKiBsZXQgYjogQWNjZXNzb3I8c3RyaW5nPlxuICogY29uc3QgYzogQWNjZXNzb3I8W251bWJlciwgc3RyaW5nXT4gPSBjcmVhdGVDb21wdXRlZChbYSwgYl0pXG4gKiBjb25zdCBkOiBBY2Nlc3NvcjxzdHJpbmc+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdLCAoYTogbnVtYmVyLCBiOiBzdHJpbmcpID0+IGAke2F9ICR7Yn1gKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGRlcHMgTGlzdCBvZiBgQWNjZXNzb3JzYC5cbiAqIEBwYXJhbSB0cmFuc2Zvcm0gQW4gb3B0aW9uYWwgdHJhbnNmb3JtIGZ1bmN0aW9uLlxuICogQHJldHVybnMgVGhlIGNvbXB1dGVkIGBBY2Nlc3NvcmAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wdXRlZDxcbiAgICBjb25zdCBEZXBzIGV4dGVuZHMgQXJyYXk8QWNjZXNzb3I8YW55Pj4sXG4gICAgQXJncyBleHRlbmRzIHsgW0sgaW4ga2V5b2YgRGVwc106IEFjY2Vzc2VkPERlcHNbS10+IH0sXG4gICAgVCA9IEFyZ3MsXG4+KGRlcHM6IERlcHMsIHRyYW5zZm9ybT86ICguLi5hcmdzOiBBcmdzKSA9PiBUKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkKFxuICAgIC4uLmFyZ3M6XG4gICAgICAgIHwgW3Byb2R1Y2VyOiAodHJhY2s6IDxWPihzaWduYWw6IEFjY2Vzc29yPFY+KSA9PiBWKSA9PiB1bmtub3duXVxuICAgICAgICB8IFtkZXBzOiBBcnJheTxBY2Nlc3Nvcj4sIHRyYW5zZm9ybT86ICguLi5hcmdzOiB1bmtub3duW10pID0+IHVua25vd25dXG4pIHtcbiAgICBjb25zdCBbZGVwc09yUHJvZHVjZXIsIHRyYW5zZm9ybV0gPSBhcmdzXG4gICAgaWYgKHR5cGVvZiBkZXBzT3JQcm9kdWNlciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVDb21wdXRlZFByb2R1Y2VyKGRlcHNPclByb2R1Y2VyKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVDb21wdXRlZEFyZ3MoZGVwc09yUHJvZHVjZXIsIHRyYW5zZm9ybSlcbiAgICB9XG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgb24gYSBgR09iamVjdC5PYmplY3RgJ3MgYHByb3BlcnR5YC5cbiAqXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR09iamVjdC5PYmplY3RgIHRvIGNyZWF0ZSB0aGUgYEFjY2Vzc29yYCBvbi5cbiAqIEBwYXJhbSBwcm9wZXJ0eSBPbmUgb2YgaXRzIHJlZ2lzdGVyZWQgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQIGV4dGVuZHMga2V5b2YgVD4oXG4gICAgb2JqZWN0OiBULFxuICAgIHByb3BlcnR5OiBFeHRyYWN0PFAsIHN0cmluZz4sXG4pOiBBY2Nlc3NvcjxUW1BdPlxuXG4vLyBUT0RPOiBzdXBwb3J0IG5lc3RlZCBiaW5kaW5nc1xuLy8gZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8XG4vLyAgICAgVCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuLy8gICAgIFAxIGV4dGVuZHMga2V5b2YgVCxcbi8vICAgICBQMiBleHRlbmRzIGtleW9mIE5vbk51bGxhYmxlPFRbUDFdPixcbi8vID4oXG4vLyAgICAgb2JqZWN0OiBULFxuLy8gICAgIHByb3BlcnR5MTogRXh0cmFjdDxQMSwgc3RyaW5nPixcbi8vICAgICBwcm9wZXJ0eTI6IEV4dHJhY3Q8UDIsIHN0cmluZz4sXG4vLyApOiBBY2Nlc3NvcjxOb25OdWxsYWJsZTxUW1AxXT5bUDJdPlxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdpby5TZXR0aW5nc2AncyBga2V5YC5cbiAqIFZhbHVlcyBhcmUgcmVjdXJzaXZlbHkgdW5wYWNrZWQuXG4gKlxuICogQGRlcHJlY2F0ZWQgcHJlZmVyIHVzaW5nIHtAbGluayBjcmVhdGVTZXR0aW5nc30uXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR2lvLlNldHRpbmdzYCB0byBjcmVhdGUgdGhlIGBBY2Nlc3NvcmAgb24uXG4gKiBAcGFyYW0ga2V5IFRoZSBzZXR0aW5ncyBrZXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VD4oc2V0dGluZ3M6IEdpby5TZXR0aW5ncywga2V5OiBzdHJpbmcpOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUPihvYmplY3Q6IEdPYmplY3QuT2JqZWN0IHwgR2lvLlNldHRpbmdzLCBrZXk6IHN0cmluZyk6IEFjY2Vzc29yPFQ+IHtcbiAgICBjb25zdCBwcm9wID0ga2ViYWJpZnkoa2V5KSBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNvbnN0IHNpZyA9IG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncyA/IFwiY2hhbmdlZFwiIDogXCJub3RpZnlcIlxuICAgICAgICBjb25zdCBpZCA9IG9iamVjdC5jb25uZWN0KGAke3NpZ306OiR7cHJvcH1gLCAoKSA9PiBjYWxsYmFjaygpKVxuICAgICAgICByZXR1cm4gKCkgPT4gb2JqZWN0LmRpc2Nvbm5lY3QoaWQpXG4gICAgfVxuXG4gICAgY29uc3QgZ2V0ID0gKCk6IFQgPT4ge1xuICAgICAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgR2lvLlNldHRpbmdzKSB7XG4gICAgICAgICAgICByZXR1cm4gb2JqZWN0LmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpIGFzIFRcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChvYmplY3QgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkge1xuICAgICAgICAgICAgY29uc3QgZ2V0dGVyID0gYGdldF8ke3Byb3AucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAgYXMga2V5b2YgdHlwZW9mIG9iamVjdFxuXG4gICAgICAgICAgICBpZiAoZ2V0dGVyIGluIG9iamVjdCAmJiB0eXBlb2Ygb2JqZWN0W2dldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiAob2JqZWN0W2dldHRlcl0gYXMgKCkgPT4gdW5rbm93bikoKSBhcyBUXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm9wIGluIG9iamVjdCkgcmV0dXJuIG9iamVjdFtwcm9wXSBhcyBUXG4gICAgICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkgcmV0dXJuIG9iamVjdFtrZXkgYXMga2V5b2YgdHlwZW9mIG9iamVjdF0gYXMgVFxuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBnZXQgcHJvcGVydHkgXCIke2tleX1cIiBvbiBcIiR7b2JqZWN0fVwiYClcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxufVxuXG50eXBlIENvbm5lY3Rpb25IYW5kbGVyPFxuICAgIE8gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTIGV4dGVuZHMga2V5b2YgT1tcIiRzaWduYWxzXCJdLFxuICAgIFQsXG4+ID0gT1tcIiRzaWduYWxzXCJdW1NdIGV4dGVuZHMgKC4uLmFyZ3M6IGFueVtdKSA9PiBpbmZlciBSXG4gICAgPyB2b2lkIGV4dGVuZHMgUlxuICAgICAgICA/ICguLi5hcmdzOiBbLi4uUGFyYW1ldGVyczxPW1wiJHNpZ25hbHNcIl1bU10+LCBjdXJyZW50VmFsdWU6IFRdKSA9PiBUXG4gICAgICAgIDogbmV2ZXJcbiAgICA6IG5ldmVyXG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgd2hpY2ggc2V0cyB1cCBhIGxpc3Qgb2YgYEdPYmplY3QuT2JqZWN0YCBzaWduYWwgY29ubmVjdGlvbnMuXG4gKlxuICogYGBgdHMgRXhhbXBsZVxuICogY29uc3QgdmFsdWU6IEFjY2Vzc29yPHN0cmluZz4gPSBjcmVhdGVDb25uZWN0aW9uKFxuICogICBcImluaXRpYWwgdmFsdWVcIixcbiAqICAgW29iajEsIFwic2lnLW5hbWVcIiwgKC4uLmFyZ3MpID0+IFwic3RyXCJdLFxuICogICBbb2JqMiwgXCJzaWctbmFtZVwiLCAoLi4uYXJncykgPT4gXCJzdHJcIl1cbiAqIClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0gc2lnbmFscyBBIGxpc3Qgb2YgYEdPYmplY3QuT2JqZWN0YCwgc2lnbmFsIG5hbWUgYW5kIGNhbGxiYWNrIHBhaXJzIHRvIGNvbm5lY3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0aW9uPFxuICAgIFQsXG4gICAgTzEgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMSBleHRlbmRzIGtleW9mIE8xW1wiJHNpZ25hbHNcIl0sXG4gICAgTzIgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMiBleHRlbmRzIGtleW9mIE8yW1wiJHNpZ25hbHNcIl0sXG4gICAgTzMgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMyBleHRlbmRzIGtleW9mIE8zW1wiJHNpZ25hbHNcIl0sXG4gICAgTzQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNCBleHRlbmRzIGtleW9mIE80W1wiJHNpZ25hbHNcIl0sXG4gICAgTzUgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNSBleHRlbmRzIGtleW9mIE81W1wiJHNpZ25hbHNcIl0sXG4gICAgTzYgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNiBleHRlbmRzIGtleW9mIE82W1wiJHNpZ25hbHNcIl0sXG4gICAgTzcgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNyBleHRlbmRzIGtleW9mIE83W1wiJHNpZ25hbHNcIl0sXG4gICAgTzggZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTOCBleHRlbmRzIGtleW9mIE84W1wiJHNpZ25hbHNcIl0sXG4gICAgTzkgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTOSBleHRlbmRzIGtleW9mIE85W1wiJHNpZ25hbHNcIl0sXG4+KFxuICAgIGluaXQ6IFQsXG4gICAgaDE6IFtPMSwgUzEsIENvbm5lY3Rpb25IYW5kbGVyPE8xLCBTMSwgVD5dLFxuICAgIGgyPzogW08yLCBTMiwgQ29ubmVjdGlvbkhhbmRsZXI8TzIsIFMyLCBUPl0sXG4gICAgaDM/OiBbTzMsIFMzLCBDb25uZWN0aW9uSGFuZGxlcjxPMywgUzMsIFQ+XSxcbiAgICBoND86IFtPNCwgUzQsIENvbm5lY3Rpb25IYW5kbGVyPE80LCBTNCwgVD5dLFxuICAgIGg1PzogW081LCBTNSwgQ29ubmVjdGlvbkhhbmRsZXI8TzUsIFM1LCBUPl0sXG4gICAgaDY/OiBbTzYsIFM2LCBDb25uZWN0aW9uSGFuZGxlcjxPNiwgUzYsIFQ+XSxcbiAgICBoNz86IFtPNywgUzcsIENvbm5lY3Rpb25IYW5kbGVyPE83LCBTNywgVD5dLFxuICAgIGg4PzogW084LCBTOCwgQ29ubmVjdGlvbkhhbmRsZXI8TzgsIFM4LCBUPl0sXG4gICAgaDk/OiBbTzksIFM5LCBDb25uZWN0aW9uSGFuZGxlcjxPOSwgUzksIFQ+XSxcbikge1xuICAgIGxldCB2YWx1ZSA9IGluaXRcbiAgICBsZXQgZGlzcG9zZTogQXJyYXk8RGlzcG9zZUZ1bmN0aW9uPlxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IHNpZ25hbHMgPSBbaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgaDcsIGg4LCBoOV0uZmlsdGVyKChoKSA9PiBoICE9PSB1bmRlZmluZWQpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gc2lnbmFscy5tYXAoKFtvYmplY3QsIHNpZ25hbCwgY2FsbGJhY2tdKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWQgPSBHT2JqZWN0Lk9iamVjdC5wcm90b3R5cGUuY29ubmVjdC5jYWxsKFxuICAgICAgICAgICAgICAgICAgICBvYmplY3QsXG4gICAgICAgICAgICAgICAgICAgIHNpZ25hbCBhcyBzdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgIChfLCAuLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGNhbGxiYWNrKC4uLmFyZ3MsIHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApXG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gR09iamVjdC5PYmplY3QucHJvdG90eXBlLmRpc2Nvbm5lY3QuY2FsbChvYmplY3QsIGlkKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlLm1hcCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgZGlzcG9zZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IHZhbHVlLCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgc2lnbmFsIGZyb20gYSBwcm92aWVyIGZ1bmN0aW9uLlxuICogVGhlIHByb3ZpZGVyIGlzIGNhbGxlZCB3aGVuIHRoZSBmaXJzdCBzdWJzY3JpYmVyIGFwcGVhcnMgYW5kIHRoZSByZXR1cm5lZCBkaXNwb3NlXG4gKiBmdW5jdGlvbiBmcm9tIHRoZSBwcm92aWRlciB3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBudW1iZXIgb2Ygc3Vic2NyaWJlcnMgZHJvcCB0byB6ZXJvLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHZhbHVlID0gY3JlYXRlRXh0ZXJuYWwoMCwgKHNldCkgPT4ge1xuICogICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHNldCgodikgPT4gdiArIDEpKVxuICogICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbClcbiAqIH0pXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHByb2R1Y2VyIFRoZSBwcm9kdWNlciBmdW5jdGlvbiB3aGljaCBzaG91bGQgcmV0dXJuIGEgY2xlYW51cCBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXh0ZXJuYWw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBwcm9kdWNlcjogKHNldDogU2V0dGVyPFQ+KSA9PiBEaXNwb3NlRnVuY3Rpb24sXG4pOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBsZXQgZGlzcG9zZTogRGlzcG9zZUZ1bmN0aW9uXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gcHJvZHVjZXIoKHY6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZTogVCA9IHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KGN1cnJlbnRWYWx1ZSkgOiB2XG4gICAgICAgICAgICAgICAgaWYgKG5ld1ZhbHVlICE9PSBjdXJyZW50VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG5cbi8qKiBAZXhwZXJpbWVudGFsICovXG50eXBlIFNldHRpbmdzPFQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+PiA9IHtcbiAgICBbSyBpbiBrZXlvZiBUIGFzIFVuY2FwaXRhbGl6ZTxQYXNjYWxpZnk8Sz4+XTogQWNjZXNzb3I8UmVjdXJzaXZlSW5mZXI8VFtLXT4+XG59ICYge1xuICAgIFtLIGluIGtleW9mIFQgYXMgYHNldCR7UGFzY2FsaWZ5PEs+fWBdOiBTZXR0ZXI8RGVlcEluZmVyPFRbS10+PlxufVxuXG4vKipcbiAqIEBleHBlcmltZW50YWxcbiAqXG4gKiBXcmFwIGEge0BsaW5rIEdpby5TZXR0aW5nc30gaW50byBhIGNvbGxlY3Rpb24gb2Ygc2V0dGVycyBhbmQgYWNjZXNzb3JzLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHMgPSBjcmVhdGVTZXR0aW5ncyhzZXR0aW5ncywge1xuICogICBcImNvbXBsZXgta2V5XCI6IFwiYXtzYXtzc319XCIsXG4gKiAgIFwic2ltcGxlLWtleVwiOiBcInNcIixcbiAqIH0pXG4gKlxuICogcy5jb21wbGV4S2V5LnN1YnNjcmliZSgoKSA9PiB7XG4gKiAgIHByaW50KHMuY29tcGxleEtleS5nZXQoKSlcbiAqIH0pXG4gKlxuICogcy5zZXRDb21wbGV4S2V5KChwcmV2KSA9PiAoe1xuICogICAuLi5wcmV2LFxuICogICBrZXk6IHsgbmVzdGVkOiBcIlwiIH0sXG4gKiB9KSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2V0dGluZ3M8Y29uc3QgVCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHN0cmluZz4+KFxuICAgIHNldHRpbmdzOiBHaW8uU2V0dGluZ3MsXG4gICAga2V5czogVCxcbik6IFNldHRpbmdzPFQ+IHtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKFxuICAgICAgICBPYmplY3QuZW50cmllcyhrZXlzKS5mbGF0TWFwKChba2V5LCB0eXBlXSkgPT4gW1xuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIGNhbWVsaWZ5KGtleSksXG4gICAgICAgICAgICAgICAgbmV3IEFjY2Vzc29yKFxuICAgICAgICAgICAgICAgICAgICAoKSA9PiBzZXR0aW5ncy5nZXRfdmFsdWUoa2V5KS5yZWN1cnNpdmVVbnBhY2soKSxcbiAgICAgICAgICAgICAgICAgICAgKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpZCA9IHNldHRpbmdzLmNvbm5lY3QoYGNoYW5nZWQ6OiR7a2V5fWAsIGNhbGxiYWNrKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgpID0+IHNldHRpbmdzLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgYHNldCR7a2V5WzBdLnRvVXBwZXJDYXNlKCkgKyBjYW1lbGlmeShrZXkpLnNsaWNlKDEpfWAsXG4gICAgICAgICAgICAgICAgKHY6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3Muc2V0X3ZhbHVlKFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KHNldHRpbmdzLmdldF92YWx1ZShrZXkpLmRlZXBVbnBhY2soKSkgOiB2LFxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICBdKSxcbiAgICApXG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IHR5cGUgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5cbnR5cGUgR09iaiA9IEdPYmplY3QuT2JqZWN0XG5leHBvcnQgdHlwZSBDQzxUIGV4dGVuZHMgR09iaiA9IEdPYmo+ID0geyBuZXcgKHByb3BzOiBhbnkpOiBUIH1cbmV4cG9ydCB0eXBlIEZDPFQgZXh0ZW5kcyBHT2JqID0gR09iaj4gPSAocHJvcHM6IGFueSkgPT4gVFxuXG50eXBlIENzc1NldHRlciA9IChvYmplY3Q6IEdPYmosIGNzczogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPikgPT4gdm9pZFxuXG5leHBvcnQgZnVuY3Rpb24gY29uZmlndWUoY29uZjogUGFydGlhbDxKc3hFbnY+KSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZW52LCBjb25mKVxufVxuXG50eXBlIEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czogUmVjb3JkPHN0cmluZywgQ0MgfCBGQz5cbiAgICB0ZXh0Tm9kZShub2RlOiBzdHJpbmcgfCBudW1iZXIpOiBHT2JqXG4gICAgYXBwZW5kQ2hpbGQocGFyZW50OiBHT2JqLCBjaGlsZDogR09iaik6IHZvaWRcbiAgICByZW1vdmVDaGlsZChwYXJlbnQ6IEdPYmosIGNoaWxkOiBHT2JqKTogdm9pZFxuICAgIHNldENzczogQ3NzU2V0dGVyXG4gICAgc2V0Q2xhc3M6IENzc1NldHRlclxuICAgIC8vIHN0cmluZ1tdIGNhbiBiZSB1c2UgdG8gZGVsYXkgc2V0dGluZyBwcm9wcyBhZnRlciBjaGlsZHJlblxuICAgIC8vIGUuZyBHdGsuU3RhY2tbXCJ2aXNpYmxlQ2hpbGROYW1lXCJdIGRlcGVuZHMgb24gY2hpbGRyZW5cbiAgICBpbml0UHJvcHMoY3RvcjogdW5rbm93biwgcHJvcHM6IGFueSk6IHZvaWQgfCBzdHJpbmdbXVxuICAgIGRlZmF1bHRDbGVhbnVwKG9iamVjdDogR09iaik6IHZvaWRcbn1cblxuZnVuY3Rpb24gbWlzc2luZ0ltcGwoKTogYW55IHtcbiAgICB0aHJvdyBFcnJvcihcIm1pc3NpbmcgaW1wbFwiKVxufVxuXG5leHBvcnQgY29uc3QgZW52OiBKc3hFbnYgPSB7XG4gICAgaW50cmluc2ljRWxlbWVudHM6IHt9LFxuICAgIHRleHROb2RlOiBtaXNzaW5nSW1wbCxcbiAgICBhcHBlbmRDaGlsZDogbWlzc2luZ0ltcGwsXG4gICAgcmVtb3ZlQ2hpbGQ6IG1pc3NpbmdJbXBsLFxuICAgIHNldENzczogbWlzc2luZ0ltcGwsXG4gICAgc2V0Q2xhc3M6IG1pc3NpbmdJbXBsLFxuICAgIGluaXRQcm9wczogKCkgPT4gdm9pZCAwLFxuICAgIGRlZmF1bHRDbGVhbnVwOiAoKSA9PiB2b2lkIDAsXG59XG4iLCAiZXhwb3J0IGNsYXNzIFNjb3BlIHtcbiAgICBzdGF0aWMgY3VycmVudD86IFNjb3BlIHwgbnVsbFxuXG4gICAgcGFyZW50PzogU2NvcGUgfCBudWxsXG4gICAgY29udGV4dHMgPSBuZXcgTWFwPENvbnRleHQsIHVua25vd24+KClcblxuICAgIHByaXZhdGUgY2xlYW51cHMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcbiAgICBwcml2YXRlIG1vdW50cyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRlZCA9IGZhbHNlXG5cbiAgICBjb25zdHJ1Y3RvcihwYXJlbnQ/OiBTY29wZSB8IG51bGwpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnRcbiAgICB9XG5cbiAgICBvbkNsZWFudXAoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwcz8uYWRkKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIG9uTW91bnQoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgaWYgKHRoaXMucGFyZW50ICYmICF0aGlzLnBhcmVudC5tb3VudGVkKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmVudC5vbk1vdW50KGNhbGxiYWNrKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tb3VudHMuYWRkKGNhbGxiYWNrKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcnVuPFQ+KGZuOiAoKSA9PiBUKSB7XG4gICAgICAgIGNvbnN0IHByZXYgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIFNjb3BlLmN1cnJlbnQgPSB0aGlzXG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBmbigpXG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLm1vdW50cy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmNsZWFyKClcbiAgICAgICAgICAgIHRoaXMubW91bnRlZCA9IHRydWVcbiAgICAgICAgICAgIFNjb3BlLmN1cnJlbnQgPSBwcmV2XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLmNsZWFudXBzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB0aGlzLmNsZWFudXBzLmNsZWFyKClcbiAgICAgICAgdGhpcy5jb250ZXh0cy5jbGVhcigpXG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmVudFxuICAgIH1cbn1cblxuZXhwb3J0IHR5cGUgQ29udGV4dDxUID0gYW55PiA9IHtcbiAgICB1c2UoKTogVFxuICAgIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUlxuICAgIChwcm9wczogeyB2YWx1ZTogVDsgY2hpbGRyZW46ICgpID0+IEpTWC5FbGVtZW50IH0pOiBKU1guRWxlbWVudFxufVxuXG4vKipcbiAqIEV4YW1wbGUgVXNhZ2U6XG4gKiBgYGB0c3hcbiAqIGNvbnN0IE15Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQoXCJmYWxsYmFjay12YWx1ZVwiKVxuICpcbiAqIGZ1bmN0aW9uIENvbnN1bWVyQ29tcG9uZW50KCkge1xuICogICBjb25zdCB2YWx1ZSA9IE15Q29udGV4dC51c2UoKVxuICpcbiAqICAgcmV0dXJuIDxHdGsuTGFiZWwgbGFiZWw9e3ZhbHVlfSAvPlxuICogfVxuICpcbiAqIGZ1bmN0aW9uIFByb3ZpZGVyQ29tcG9uZW50KCkge1xuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuQm94PlxuICogICAgICAgPE15Q29udGV4dCB2YWx1ZT1cIm15LXZhbHVlXCI+XG4gKiAgICAgICAgIHsoKSA9PiA8Q29uc3VtZXJDb21wb25lbnQgLz59XG4gKiAgICAgICA8L015Q29udGV4dD5cbiAqICAgICA8L0d0ay5Cb3g+XG4gKiAgIClcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29udGV4dDxUPihkZWZhdWx0VmFsdWU6IFQpOiBDb250ZXh0PFQ+IHtcbiAgICBsZXQgY3R4OiBDb250ZXh0PFQ+XG5cbiAgICBmdW5jdGlvbiBwcm92aWRlPFI+KHZhbHVlOiBULCBmbjogKCkgPT4gUik6IFIge1xuICAgICAgICBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAgICAgICAgc2NvcGUuY29udGV4dHMuc2V0KGN0eCwgdmFsdWUpXG4gICAgICAgIHJldHVybiBzY29wZS5ydW4oZm4pXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXNlKCk6IFQge1xuICAgICAgICBsZXQgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIHdoaWxlIChzY29wZSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBzY29wZS5jb250ZXh0cy5nZXQoY3R4KVxuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHJldHVybiB2YWx1ZSBhcyBUXG4gICAgICAgICAgICBzY29wZSA9IHNjb3BlLnBhcmVudFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWVcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb250ZXh0KHsgdmFsdWUsIGNoaWxkcmVuIH06IHsgdmFsdWU6IFQ7IGNoaWxkcmVuOiAoKSA9PiBKU1guRWxlbWVudCB9KSB7XG4gICAgICAgIHJldHVybiBwcm92aWRlKHZhbHVlLCBjaGlsZHJlbilcbiAgICB9XG5cbiAgICByZXR1cm4gKGN0eCA9IE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgICAgICBwcm92aWRlLFxuICAgICAgICB1c2UsXG4gICAgfSkpXG59XG5cbi8qKlxuICogR2V0cyB0aGUgc2NvcGUgdGhhdCBvd25zIHRoZSBjdXJyZW50bHkgcnVubmluZyBjb2RlLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY29uc3Qgc2NvcGUgPSBnZXRTY29wZSgpXG4gKiBzZXRUaW1lb3V0KCgpID0+IHtcbiAqICAgLy8gVGhpcyBjYWxsYmFjayBnZXRzIHJ1biB3aXRob3V0IGFuIG93bmVyIHNjb3BlLlxuICogICAvLyBSZXN0b3JlIG93bmVyIHZpYSBzY29wZS5ydW46XG4gKiAgIHNjb3BlLnJ1bigoKSA9PiB7XG4gKiAgICAgY29uc3QgZm9vID0gRm9vQ29udGV4dC51c2UoKVxuICogICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gKiAgICAgICBwcmludChcInNvbWUgY2xlYW51cFwiKVxuICogICAgIH0pXG4gKiAgIH0pXG4gKiB9LCAxMDAwKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTY29wZSgpOiBTY29wZSB7XG4gICAgY29uc3Qgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgaWYgKCFzY29wZSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcImNhbm5vdCBnZXQgc2NvcGU6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNjb3BlXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2xlYW51cCBjYWxsYmFjayB0byB0aGUgY3VycmVudCB7QGxpbmsgU2NvcGV9LlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25DbGVhbnVwKGNsZWFudXA6ICgpID0+IHZvaWQpIHtcbiAgICBpZiAoIVNjb3BlLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihFcnJvcihcIm91dCBvZiB0cmFja2luZyBjb250ZXh0OiB3aWxsIG5vdCBiZSBhYmxlIHRvIGNsZWFudXBcIikpXG4gICAgfVxuXG4gICAgU2NvcGUuY3VycmVudD8ub25DbGVhbnVwKGNsZWFudXApXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2FsbGJhY2sgdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnRseSBydW5uaW5nIHtAbGluayBTY29wZX0gcmV0dXJucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uTW91bnQoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwiY2Fubm90IGF0dGFjaCBvbk1vdW50OiBvdXQgb2YgdHJhY2tpbmcgY29udGV4dFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbk1vdW50KGNsZWFudXApXG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJvb3Qge0BsaW5rIFNjb3BlfSB0aGF0IHdoZW4gZGlzcG9zZWQgd2lsbCByZW1vdmVcbiAqIGFueSBjaGlsZCBzaWduYWwgaGFuZGxlciBvciBzdGF0ZSBzdWJzY3JpYmVyLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c3hcbiAqIGNyZWF0ZVJvb3QoKGRpc3Bvc2UpID0+IHtcbiAqICAgbGV0IHJvb3Q6IEd0ay5XaW5kb3dcbiAqXG4gKiAgIGNvbnN0IFtzdGF0ZV0gPSBjcmVhdGVTdGF0ZShcInZhbHVlXCIpXG4gKlxuICogICBjb25zdCByZW1vdmUgPSAoKSA9PiB7XG4gKiAgICAgcm9vdC5kZXN0cm95KClcbiAqICAgICBkaXNwb3NlKClcbiAqICAgfVxuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8R3RrLldpbmRvdyAkPXsoc2VsZikgPT4gKHJvb3QgPSBzZWxmKX0+XG4gKiAgICAgICA8R3RrLkJveD5cbiAqICAgICAgICAgPEd0ay5MYWJlbCBsYWJlbD17c3RhdGV9IC8+XG4gKiAgICAgICAgIDxHdGsuQnV0dG9uICRjbGlja2VkPXtyZW1vdmV9IC8+XG4gKiAgICAgICA8L0d0ay5Cb3g+XG4gKiAgICAgPC9HdGsuV2luZG93PlxuICogICApXG4gKiB9KVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSb290PFQ+KGZuOiAoZGlzcG9zZTogKCkgPT4gdm9pZCkgPT4gVCkge1xuICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKG51bGwpXG4gICAgcmV0dXJuIHNjb3BlLnJ1bigoKSA9PiBmbigoKSA9PiBzY29wZS5kaXNwb3NlKCkpKVxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgc2V0IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuaW1wb3J0IHsgYXBwZW5kLCBzZXRUeXBlLCBzaWduYWxOYW1lLCB0eXBlIENDUHJvcHMgfSBmcm9tIFwiLi9qc3guanNcIlxuXG50eXBlIFRoaXNQcm9wczxTZWxmIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+ID0gUGFydGlhbDxcbiAgICBPbWl0PENDUHJvcHM8U2VsZiwgeyBbSyBpbiBrZXlvZiBTZWxmXTogU2VsZltLXSB9PiwgXCIkXCIgfCBcIiRjb25zdHJ1Y3RvclwiPlxuPiAmIHtcbiAgICB0aGlzOiBTZWxmXG59XG5cbi8qKiBAZXhwZXJpbWVudGFsICovXG5leHBvcnQgZnVuY3Rpb24gVGhpczxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KHtcbiAgICB0aGlzOiBzZWxmLFxuICAgIGNoaWxkcmVuLFxuICAgICR0eXBlLFxuICAgIC4uLnByb3BzXG59OiBUaGlzUHJvcHM8VD4pIHtcbiAgICBjb25zdCBjbGVhbnVwID0gbmV3IEFycmF5PCgpID0+IHZvaWQ+KClcblxuICAgIGlmICgkdHlwZSkgc2V0VHlwZShzZWxmLCAkdHlwZSlcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAoa2V5ID09PSBcImNzc1wiKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUuZ2V0KCkpXG4gICAgICAgICAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSBcImNsYXNzXCIpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgICAgIGNsZWFudXAucHVzaCh2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChrZXkuc3RhcnRzV2l0aChcIm9uXCIpKSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHNlbGYuY29ubmVjdChzaWduYWxOYW1lKGtleSksIHZhbHVlKVxuICAgICAgICAgICAgY2xlYW51cC5wdXNoKCgpID0+IHNlbGYuZGlzY29ubmVjdChpZCkpXG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IHZhbHVlLnN1YnNjcmliZSgoKSA9PiBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSkpXG4gICAgICAgICAgICBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSlcbiAgICAgICAgICAgIGNsZWFudXAucHVzaChkaXNwb3NlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0KHNlbGYsIGtleSwgdmFsdWUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGxldCBjaGlsZCBvZiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXSkge1xuICAgICAgICBpZiAoY2hpbGQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihFcnJvcihcIlRyeWluZyB0byBhZGQgYm9vbGVhbiB2YWx1ZSBvZiBgdHJ1ZWAgYXMgYSBjaGlsZC5cIikpXG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgYXBwZW5kKHNlbGYsIGNoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICBpZiAoIShjaGlsZCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgIGNoaWxkID0gZW52LnRleHROb2RlKGNoaWxkKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXBwZW5kKHNlbGYsIGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNsZWFudXAubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4gY2xlYW51cC5mb3JFYWNoKChjYikgPT4gY2IoKSkpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNlbGZcbn1cbiIsICJpbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdkayBmcm9tIFwiZ2k6Ly9HZGs/dmVyc2lvbj00LjBcIlxuZXhwb3J0IHsgQXN0YWwsIEd0aywgR2RrIH1cbiIsICJpbXBvcnQgR3JhcGhlbmUgZnJvbSAnZ2k6Ly9HcmFwaGVuZSdcblxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tICdhZ3MnXG5pbXBvcnQgR09iamVjdCBmcm9tICdhZ3MvZ29iamVjdCdcbmltcG9ydCB7IEFzdGFsLCBHZGssIEd0ayB9IGZyb20gJ2Fncy9ndGs0J1xuaW1wb3J0IGFwcCBmcm9tICdhZ3MvZ3RrNC9hcHAnXG5pbXBvcnQgeyBGQ1Byb3BzIH0gZnJvbSAnZ25pbSdcblxuaW1wb3J0IHsgY3JlYXRlQ29tcHV0ZWRBcnJheSwgdG9BY2Nlc3NvciB9IGZyb20gJ0BsaWJzL2duaW0tZXh0ZW5zaW9ucydcblxuaW1wb3J0IHNjc3MgZnJvbSAnLi9zdHlsZS5zY3NzJ1xuXG5leHBvcnQgdHlwZSBXaW5kb3dGdWxsc2NyZWVuUHJvcHMgPSBGQ1Byb3BzPFxuICBBc3RhbC5XaW5kb3csXG4gIHtcbiAgICBjaGlsZHJlbjogQXJyYXk8R09iamVjdC5PYmplY3Q+IHwgR09iamVjdC5PYmplY3RcbiAgICBuYW1lOiBzdHJpbmdcbiAgICBjc3NDbGFzc2VzPzogc3RyaW5nW10gfCBBY2Nlc3NvcjxzdHJpbmdbXT5cbiAgICBsYXllcj86IEFzdGFsLkxheWVyXG4gIH1cbj5cblxuYXBwLmFwcGx5X2NzcyhzY3NzKVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBXaW5kb3dGdWxsc2NyZWVuKHsgY2hpbGRyZW4sIG5hbWUsIGNzc0NsYXNzZXMsIGxheWVyIH06IFdpbmRvd0Z1bGxzY3JlZW5Qcm9wcykge1xuICBjb25zdCB7IFRPUCwgTEVGVCwgUklHSFQsIEJPVFRPTSB9ID0gQXN0YWwuV2luZG93QW5jaG9yXG4gIGxldCB3aW5kb3c6IEFzdGFsLldpbmRvd1xuICBsZXQgY29udGVudGJveDogR3RrLkJveFxuXG4gIGZ1bmN0aW9uIGNsb3NlT25QcmVzc0VzY2FwZUtleShfZTogR3RrLkV2ZW50Q29udHJvbGxlcktleSwga2V5dmFsOiBudW1iZXIpIHtcbiAgICBpZiAoa2V5dmFsID09PSBHZGsuS0VZX0VzY2FwZSkge1xuICAgICAgd2luZG93LmhpZGUoKVxuICAgICAgcmV0dXJuXG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY2xvc2VPbkNsaWNrT3V0c2lkZShfZTogR3RrLkdlc3R1cmVDbGljaywgXzogbnVtYmVyLCB4OiBudW1iZXIsIHk6IG51bWJlcikge1xuICAgIGNvbnN0IFssIHJlY3RdID0gY29udGVudGJveC5jb21wdXRlX2JvdW5kcyh3aW5kb3cpXG4gICAgY29uc3QgcG9zaXRpb24gPSBuZXcgR3JhcGhlbmUuUG9pbnQoeyB4LCB5IH0pXG5cbiAgICBpZiAoIXJlY3QuY29udGFpbnNfcG9pbnQocG9zaXRpb24pKSB7XG4gICAgICB3aW5kb3cuaGlkZSgpXG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPEFzdGFsLldpbmRvd1xuICAgICAgbmFtZT17bmFtZX1cbiAgICAgIGFwcGxpY2F0aW9uPXthcHB9XG4gICAgICAkPXtyZWYgPT4gKHdpbmRvdyA9IHJlZil9XG4gICAgICBsYXllcj17bGF5ZXIgfHwgQXN0YWwuTGF5ZXIuT1ZFUkxBWX0gLy8gQXN0YWwuTGF5ZXIuT1ZFUkxBWVxuICAgICAgLy8gZXhjbHVzaXZpdHk9e0FzdGFsLkV4Y2x1c2l2aXR5LkVYQ0xVU0lWRX1cbiAgICAgIGFuY2hvcj17VE9QIHwgTEVGVCB8IFJJR0hUIHwgQk9UVE9NfVxuICAgICAga2V5bW9kZT17QXN0YWwuS2V5bW9kZS5PTl9ERU1BTkR9XG4gICAgICBjc3NDbGFzc2VzPXtjcmVhdGVDb21wdXRlZEFycmF5PHN0cmluZz4oW1xuICAgICAgICB0b0FjY2Vzc29yKGNzc0NsYXNzZXMgfHwgW10pLFxuICAgICAgICB0b0FjY2Vzc29yKFsnV2luZG93RnVsbHNjcmVlbiddKSxcbiAgICAgIF0pfVxuICAgID5cbiAgICAgIDxHdGsuRXZlbnRDb250cm9sbGVyS2V5IG9uS2V5UHJlc3NlZD17Y2xvc2VPblByZXNzRXNjYXBlS2V5fSAvPlxuICAgICAgPEd0ay5HZXN0dXJlQ2xpY2sgb25SZWxlYXNlZD17Y2xvc2VPbkNsaWNrT3V0c2lkZX0gLz5cbiAgICAgIDxHdGsuQm94XG4gICAgICAgICQ9e3JlZiA9PiAoY29udGVudGJveCA9IHJlZil9XG4gICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L0d0ay5Cb3g+XG4gICAgPC9Bc3RhbC5XaW5kb3c+XG4gIClcbn1cbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQ29tcHV0ZWQgfSBmcm9tICdnbmltJ1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWRBcnJheTxUPihkZXBzOiAoQWNjZXNzb3I8VFtdPilbXSk6IEFjY2Vzc29yPFRbXT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcHV0ZWQoZGVwcywgKC4uLmFycmF5cykgPT4ge1xuICAgIGNvbnN0IHJlc3VsdDogVFtdID0gW11cbiAgICBhcnJheXMuZm9yRWFjaCgoYXJyKSA9PiB7XG4gICAgICByZXN1bHQucHVzaCguLi5hcnIpXG4gICAgfSlcbiAgICByZXR1cm4gcmVzdWx0XG4gIH0pXG59XG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tICdnbmltJ1xuXG5leHBvcnQgZnVuY3Rpb24gdG9BY2Nlc3NvcjxUPih2YWx1ZTogVCB8IEFjY2Vzc29yPFQ+KTogQWNjZXNzb3I8VD4ge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3NvciA/IHZhbHVlIDogbmV3IEFjY2Vzc29yKCgpID0+IHZhbHVlKVxufVxuIiwgIndpbmRvdy5XaW5kb3dGdWxsc2NyZWVuIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tZGlhbG9nLWJnLWNvbG9yKTtcbiAgY29sb3I6IEB0aGVtZV9mZ19jb2xvcjtcbn0iLCAiaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IENDUHJvcHMgfSBmcm9tIFwiZ25pbVwiXG5pbXBvcnQgeyBpbnRyaW5zaWNFbGVtZW50cyB9IGZyb20gXCJnbmltL2d0azQvanN4LXJ1bnRpbWVcIlxuXG50eXBlIFByb3BzPFQgZXh0ZW5kcyBHdGsuV2lkZ2V0LCBQcm9wcz4gPSBDQ1Byb3BzPFQsIFBhcnRpYWw8UHJvcHM+PlxuXG5PYmplY3QuYXNzaWduKGludHJpbnNpY0VsZW1lbnRzLCB7XG4gICAgYm94OiBHdGsuQm94LFxuICAgIGJ1dHRvbjogR3RrLkJ1dHRvbixcbiAgICBjZW50ZXJib3g6IEd0ay5DZW50ZXJCb3gsXG4gICAgLy8gY2lyY3VsYXJwcm9ncmVzczogQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcyxcbiAgICBkcmF3aW5nYXJlYTogR3RrLkRyYXdpbmdBcmVhLFxuICAgIGVudHJ5OiBHdGsuRW50cnksXG4gICAgaW1hZ2U6IEd0ay5JbWFnZSxcbiAgICBsYWJlbDogR3RrLkxhYmVsLFxuICAgIGxldmVsYmFyOiBHdGsuTGV2ZWxCYXIsXG4gICAgbWVudWJ1dHRvbjogR3RrLk1lbnVCdXR0b24sXG4gICAgb3ZlcmxheTogR3RrLk92ZXJsYXksXG4gICAgcG9wb3ZlcjogR3RrLlBvcG92ZXIsXG4gICAgcmV2ZWFsZXI6IEd0ay5SZXZlYWxlcixcbiAgICBzY3JvbGxlZHdpbmRvdzogR3RrLlNjcm9sbGVkV2luZG93LFxuICAgIHNsaWRlcjogQXN0YWwuU2xpZGVyLFxuICAgIHN0YWNrOiBHdGsuU3RhY2ssXG4gICAgc3dpdGNoOiBHdGsuU3dpdGNoLFxuICAgIHRvZ2dsZWJ1dHRvbjogR3RrLlRvZ2dsZUJ1dHRvbixcbiAgICB3aW5kb3c6IEFzdGFsLldpbmRvdyxcbn0pXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIGJveDogUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgYnV0dG9uOiBQcm9wczxHdGsuQnV0dG9uLCBHdGsuQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBjZW50ZXJib3g6IFByb3BzPEd0ay5DZW50ZXJCb3gsIEd0ay5DZW50ZXJCb3guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IFByb3BzPEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsIEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGRyYXdpbmdhcmVhOiBQcm9wczxHdGsuRHJhd2luZ0FyZWEsIEd0ay5EcmF3aW5nQXJlYS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZW50cnk6IFByb3BzPEd0ay5FbnRyeSwgR3RrLkVudHJ5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBpbWFnZTogUHJvcHM8R3RrLkltYWdlLCBHdGsuSW1hZ2UuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGxhYmVsOiBQcm9wczxHdGsuTGFiZWwsIEd0ay5MYWJlbC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGV2ZWxiYXI6IFByb3BzPEd0ay5MZXZlbEJhciwgR3RrLkxldmVsQmFyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBtZW51YnV0dG9uOiBQcm9wczxHdGsuTWVudUJ1dHRvbiwgR3RrLk1lbnVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG92ZXJsYXk6IFByb3BzPEd0ay5PdmVybGF5LCBHdGsuT3ZlcmxheS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgcG9wb3ZlcjogUHJvcHM8R3RrLlBvcG92ZXIsIEd0ay5Qb3BvdmVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICByZXZlYWxlcjogUHJvcHM8R3RrLlJldmVhbGVyLCBHdGsuUmV2ZWFsZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHNjcm9sbGVkd2luZG93OiBQcm9wczxHdGsuU2Nyb2xsZWRXaW5kb3csIEd0ay5TY3JvbGxlZFdpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2xpZGVyOiBQcm9wczxBc3RhbC5TbGlkZXIsIEFzdGFsLlNsaWRlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc3RhY2s6IFByb3BzPEd0ay5TdGFjaywgR3RrLlN0YWNrLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzd2l0Y2g6IFByb3BzPEd0ay5Td2l0Y2gsIEd0ay5Td2l0Y2guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHRvZ2dsZWJ1dHRvbjogUHJvcHM8R3RrLlRvZ2dsZUJ1dHRvbiwgR3RrLlRvZ2dsZUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgd2luZG93OiBQcm9wczxBc3RhbC5XaW5kb3csIEFzdGFsLldpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgKiBmcm9tIFwiZ25pbS9ndGs0L2pzeC1ydW50aW1lXCJcbiIsICJpbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgeyBjb25maWd1ZSB9IGZyb20gXCIuLi9qc3gvZW52LmpzXCJcbmltcG9ydCB7IGdldFR5cGUsIG9uQ2xlYW51cCwgQWNjZXNzb3IsIEZyYWdtZW50IH0gZnJvbSBcIi4uL2luZGV4LmpzXCJcblxuaW1wb3J0IHR5cGUgQWR3IGZyb20gXCJnaTovL0Fkd1wiXG5jb25zdCBhZHcgPSBhd2FpdCBpbXBvcnQoXCJnaTovL0Fkd1wiKS50aGVuKChtKSA9PiBtLmRlZmF1bHQpLmNhdGNoKCgpID0+IG51bGwpXG5cbmNvbnN0IGR1bW15QnVpbGRlciA9IG5ldyBHdGsuQnVpbGRlcigpXG5cbmNvbnN0IHsgaW50cmluc2ljRWxlbWVudHMgfSA9IGNvbmZpZ3VlKHtcbiAgICBpbml0UHJvcHMoY3Rvcikge1xuICAgICAgICBpZiAoY3RvciA9PT0gR3RrLlN0YWNrKSB7XG4gICAgICAgICAgICBjb25zdCBrZXlzOiBBcnJheTxFeHRyYWN0PGtleW9mIEd0ay5TdGFjaywgc3RyaW5nPj4gPSBbXG4gICAgICAgICAgICAgICAgXCJ2aXNpYmxlQ2hpbGROYW1lXCIsXG4gICAgICAgICAgICAgICAgXCJ2aXNpYmxlX2NoaWxkX25hbWVcIixcbiAgICAgICAgICAgIF1cbiAgICAgICAgICAgIHJldHVybiBrZXlzXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFkdyAmJiBjdG9yID09PSBhZHcuVG9nZ2xlR3JvdXApIHtcbiAgICAgICAgICAgIGNvbnN0IGtleXM6IEFycmF5PEV4dHJhY3Q8a2V5b2YgQWR3LlRvZ2dsZUdyb3VwLCBzdHJpbmc+PiA9IFtcbiAgICAgICAgICAgICAgICBcImFjdGl2ZVwiLFxuICAgICAgICAgICAgICAgIFwiYWN0aXZlTmFtZVwiLFxuICAgICAgICAgICAgICAgIFwiYWN0aXZlX25hbWVcIixcbiAgICAgICAgICAgIF1cbiAgICAgICAgICAgIHJldHVybiBrZXlzXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHNldENzcyhvYmplY3QsIGNzcykge1xuICAgICAgICBpZiAoIShvYmplY3QgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUud2FybihFcnJvcihgY2Fubm90IHNldCBjc3Mgb24gJHtvYmplY3R9YCkpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjdHggPSBvYmplY3QuZ2V0X3N0eWxlX2NvbnRleHQoKVxuICAgICAgICBsZXQgcHJvdmlkZXI6IEd0ay5Dc3NQcm92aWRlclxuXG4gICAgICAgIGNvbnN0IHNldHRlciA9IChjc3M6IHN0cmluZykgPT4ge1xuICAgICAgICAgICAgaWYgKCFjc3MuaW5jbHVkZXMoXCJ7XCIpIHx8ICFjc3MuaW5jbHVkZXMoXCJ9XCIpKSB7XG4gICAgICAgICAgICAgICAgY3NzID0gYCogeyAke2Nzc30gfWBcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb3ZpZGVyKSBjdHgucmVtb3ZlX3Byb3ZpZGVyKHByb3ZpZGVyKVxuXG4gICAgICAgICAgICBwcm92aWRlciA9IG5ldyBHdGsuQ3NzUHJvdmlkZXIoKVxuICAgICAgICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3N0cmluZyhjc3MpXG4gICAgICAgICAgICBjdHguYWRkX3Byb3ZpZGVyKHByb3ZpZGVyLCBHdGsuU1RZTEVfUFJPVklERVJfUFJJT1JJVFlfVVNFUilcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjc3MgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgc2V0dGVyKGNzcy5nZXQoKSlcbiAgICAgICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBjc3Muc3Vic2NyaWJlKCgpID0+IHNldHRlcihjc3MuZ2V0KCkpKVxuICAgICAgICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXR0ZXIoY3NzKVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIHNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKSB7XG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNsYXNzTmFtZSBvbiAke29iamVjdH1gKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjbGFzc05hbWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgb2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKVxuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGNsYXNzTmFtZS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgKCkgPT4gKG9iamVjdC5jc3NDbGFzc2VzID0gY2xhc3NOYW1lLmdldCgpLnNwbGl0KC9cXHMrLykpLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvYmplY3Quc2V0X2Nzc19jbGFzc2VzKGNsYXNzTmFtZS5zcGxpdCgvXFxzKy8pKVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIHRleHROb2RlKHRleHQpIHtcbiAgICAgICAgcmV0dXJuIEd0ay5MYWJlbC5uZXcodGV4dC50b1N0cmluZygpKVxuICAgIH0sXG5cbiAgICAvLyBgc2V0X2NoaWxkYCBhbmQgZXNwZWNpYWxseSBgcmVtb3ZlYCBtaWdodCBiZSB3YXkgdG9vIGdlbmVyaWMgYW5kIHRoZXJlIG1pZ2h0XG4gICAgLy8gYmUgY2FzZXMgd2hlcmUgaXQgZG9lcyBub3QgYWN0dWFsbHkgZG8gd2hhdCB3ZSB3YW50IGl0IHRvIGRvXG4gICAgLy9cbiAgICAvLyBpZiB0aGVyZSBpcyBhIHVzZWNhc2UgZm9yIGVpdGhlciBvZiB0aGVzZSB0d28gdGhhdCBkb2VzIHNvbWV0aGluZyBlbHNlIHRoYW5cbiAgICAvLyB3ZSBleHBlY3QgaXQgdG8gZG8gaGVyZSBpbiBhIEpTWCBjb250ZXh0IHdlIGhhdmUgdG8gY2hlY2sgZm9yIGtub3duIGluc3RhbmNlc1xuICAgIHJlbW92ZUNoaWxkKHBhcmVudCwgY2hpbGQpIHtcbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQgJiYgY2hpbGQgaW5zdGFuY2VvZiBHdGsuRXZlbnRDb250cm9sbGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnJlbW92ZV9jb250cm9sbGVyKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFwic2V0X2NoaWxkXCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQuc2V0X2NoaWxkID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfY2hpbGQobnVsbClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcInJlbW92ZVwiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnJlbW92ZSA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQucmVtb3ZlKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaGlsZH0gZnJvbSAke3BhcmVudH1gKVxuICAgIH0sXG4gICAgYXBwZW5kQ2hpbGQocGFyZW50LCBjaGlsZCkge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5BZGp1c3RtZW50ICYmXG4gICAgICAgICAgICBcInNldF9hZGp1c3RtZW50XCIgaW4gcGFyZW50ICYmXG4gICAgICAgICAgICB0eXBlb2YgcGFyZW50LnNldF9hZGp1c3RtZW50ID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9hZGp1c3RtZW50KGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0ICYmXG4gICAgICAgICAgICBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuU3RhY2sgJiZcbiAgICAgICAgICAgIGNoaWxkLm5hbWUgIT09IFwiXCIgJiZcbiAgICAgICAgICAgIGNoaWxkLm5hbWUgIT09IG51bGwgJiZcbiAgICAgICAgICAgIGdldFR5cGUoY2hpbGQpID09PSBcIm5hbWVkXCJcbiAgICAgICAgKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LmFkZF9uYW1lZChjaGlsZCwgY2hpbGQubmFtZSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5Qb3BvdmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5NZW51QnV0dG9uKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9wb3BvdmVyKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudU1vZGVsICYmXG4gICAgICAgICAgICAocGFyZW50IGluc3RhbmNlb2YgR3RrLk1lbnVCdXR0b24gfHwgcGFyZW50IGluc3RhbmNlb2YgR3RrLlBvcG92ZXJNZW51KVxuICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuc2V0X21lbnVfbW9kZWwoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudUl0ZW0gJiYgcGFyZW50IGluc3RhbmNlb2YgR2lvLk1lbnUpIHtcbiAgICAgICAgICAgIC8vIFRPRE86XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2luZG93ICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5BcHBsaWNhdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5hZGRfd2luZG93KGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLlRleHRCdWZmZXIgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLlRleHRWaWV3KSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9idWZmZXIoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgR3RrLkJ1aWxkYWJsZSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC52ZnVuY19hZGRfY2hpbGQoZHVtbXlCdWlsZGVyLCBjaGlsZCwgZ2V0VHlwZShjaGlsZCkpXG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGFkZCAke2NoaWxkfSB0byAke3BhcmVudH1gKVxuICAgIH0sXG59KVxuXG5leHBvcnQgeyBGcmFnbWVudCwgaW50cmluc2ljRWxlbWVudHMgfVxuZXhwb3J0IHsganN4LCBqc3hzIH0gZnJvbSBcIi4uL2pzeC9qc3guanNcIlxuIiwgIi5Db21tYW5kUGFsZXR0ZUNvbnRlbnQge1xuICBjb2xvcjogQHRoZW1lX2ZnX2NvbG9yO1xuICBiYWNrZ3JvdW5kOiBAdGhlbWVfYmdfY29sb3I7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYm9yZGVyOiAycHggc29saWQgQGJvcmRlcnM7XG4gIHBhZGRpbmc6IDZweDtcbn0iLCAiaW1wb3J0IHsgR3RrIH0gZnJvbSAnYWdzL2d0azQnXG5pbXBvcnQgYXBwIGZyb20gJ2Fncy9ndGs0L2FwcCdcblxuaW1wb3J0IFdpbmRvd0Z1bGxzY3JlZW4gZnJvbSAnQGNvbXBvbmVudHMvV2luZG93RnVsbHNjcmVlbidcblxuaW1wb3J0IHNjc3MgZnJvbSAnLi9zdHlsZS5zY3NzJ1xuXG5hcHAuYXBwbHlfY3NzKHNjc3MpXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvbW1hbmRQYWxldHRlKCkge1xuICByZXR1cm4gKFxuICAgIDxXaW5kb3dGdWxsc2NyZWVuXG4gICAgICBuYW1lPVwiY29tbWFuZC1wYWxldHRlXCJcbiAgICA+XG4gICAgICA8R3RrLkJveFxuICAgICAgICBuYW1lPVwiY29tbWFuZC1wYWxldHRlX19jb250ZW50XCJcbiAgICAgICAgY3NzQ2xhc3Nlcz17WydDb21tYW5kUGFsZXR0ZUNvbnRlbnQnXX1cbiAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICB3aWR0aFJlcXVlc3Q9ezYwMH1cbiAgICAgICAgaGVpZ2h0UmVxdWVzdD17NTUwfVxuICAgICAgPlxuICAgICAgICA8bGFiZWwgdmV4cGFuZD17ZmFsc2V9IGhleHBhbmQ9e2ZhbHNlfSBoYWxpZ249e0d0ay5BbGlnbi5TVEFSVH0gbGFiZWw9XCJzc3NzXCIgLz5cbiAgICAgIDwvR3RrLkJveD5cbiAgICA8L1dpbmRvd0Z1bGxzY3JlZW4+XG4gIClcbn1cbiIsICIvLyBpbXBvcnQgR0xpYiBmcm9tICdnaTovL0dMaWInXG5cbmltcG9ydCB7IEd0ayB9IGZyb20gJ2Fncy9ndGs0J1xuaW1wb3J0IGFwcCBmcm9tICdhZ3MvZ3RrNC9hcHAnXG5cbmltcG9ydCBDb21tYW5kUGFsZXR0ZSBmcm9tICcuL3ZpZXdzL0NvbW1hbmRQYWxldHRlJ1xuLy8gaW1wb3J0IHN0eWxlIGZyb20gJy4vc3R5bGUuc2NzcydcblxubGV0IGFwcGxhdW5jaGVyOiBHdGsuV2luZG93XG5cbmFwcC5zdGFydCh7XG4gIC8qKlxuICAgKiBodHRwczovL2F5bHVyLmdpdGh1Yi5pby9hZ3MvZ3VpZGUvYXBwLWNsaS5odG1sI2luc3RhbmNlLWlkZW50aWZpZXJcbiAgICpcbiAgICogVXNlIGluIGNsaTpcbiAgICogYWdzIHJlcXVlc3Qgc2hvdyBhcHBsaWNhdGlvbnMgLWkgY29tbWFuZC1wYWxldHRlXG4gICAqL1xuICBpbnN0YW5jZU5hbWU6ICdjb21tYW5kLXBhbGV0dGUnLFxuICAvLyBjc3M6IHN0eWxlLFxuICAvLyBndGtUaGVtZTogJ0Fkd2FpdGEnLFxuICByZXF1ZXN0SGFuZGxlcihhcmd2OiBzdHJpbmdbXSwgcmVzcG9uc2U6IChyZXNwb25zZTogc3RyaW5nKSA9PiB2b2lkKSB7XG4gICAgY29uc3QgW1xuICAgICAgY21kLCBhcmcsIC4uLnJlc3RcbiAgICBdID0gYXJndlxuICAgIGNvbnNvbGUubG9nKCdcXG5jb21tYW5kLXBhbGV0dGU6JylcbiAgICBjb25zb2xlLmxvZyhjbWQpXG4gICAgY29uc29sZS5sb2coYXJnKVxuICAgIGNvbnNvbGUubG9nKHJlc3QpXG4gICAgaWYgKGNtZCA9PT0gJ3Nob3cnKSB7XG4gICAgICBhcHBsYXVuY2hlci5wcmVzZW50KClcbiAgICAgIHJldHVybiByZXNwb25zZSgnY29tbWFuZC1wYWxldHRlOiB2aXNpYmxlJylcbiAgICB9XG4gICAgZWxzZSBpZiAoY21kID09PSAnaGlkZScpIHtcbiAgICAgIGFwcGxhdW5jaGVyLmhpZGUoKVxuICAgICAgcmV0dXJuIHJlc3BvbnNlKCdjb21tYW5kLXBhbGV0dGU6IGhpZGRlbicpXG4gICAgfVxuICAgIHJlc3BvbnNlKCd1bmtub3duIGNvbW1hbmQnKVxuICB9LFxuICBtYWluKCkge1xuICAgIGFwcGxhdW5jaGVyID0gQ29tbWFuZFBhbGV0dGUoKSBhcyBHdGsuV2luZG93XG4gIH0sXG59KVxuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNQSxTQUFTLFNBQVMsS0FBYTtBQUMzQixTQUFPLElBQ0YsUUFBUSxtQkFBbUIsT0FBTyxFQUNsQyxXQUFXLEtBQUssR0FBRyxFQUNuQixZQUFZO0FBQ3JCO0FBRUEsZUFBZSxTQUFZLEtBQThCQSxRQUF1QjtBQUM1RSxTQUFPLElBQUks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QUM7QUFBQTtBQUFBLE1BQ0MsTUFBSztBQUFBLE1BRUw7QUFBQSxRQUFDQyxLQUFJO0FBQUEsUUFBSjtBQUFBLFVBQ0MsTUFBSztBQUFBLFVBQ0wsWUFBWSxDQUFDLHVCQUF1QjtBQUFBLFVBQ3BDLFFBQVFBLEtBQUksTUFBTTtBQUFBLFVBQ2xCLFFBQVFBLEtBQUksTUFBTTtBQUFBLFVBQ2xCLGFBQWFBLEtBQUksWUFBWTtBQUFBLFVBQzdCLGNBQWM7QUFBQSxVQUNkLGVBQWU7QUFBQSxVQUVmLDhCQUFDLFdBQU0sU0FBUyxPQUFPLFNBQVMsT0FBTyxRQUFRQSxLQUFJLE1BQU0sT0FBTyxPQUFNLFFBQU87QUFBQTtBQUFBLE1BQy9FO0FBQUE7QUFBQSxFQUNGO0FBRUo7OztBQ25CQSxJQUFJO0FBRUosWUFBSSxNQUFNO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFPUixjQUFjO0FBQUE7QUFBQTtBQUFBLEVBR2QsZUFBZSxNQUFnQixVQUFzQztBQUNuRSxVQUFNO0FBQUEsTUFDSjtBQUFBLE1BQUs7QUFBQSxNQUFLLEdBQUc7QUFBQSxJQUNmLElBQUk7QUFDSixZQUFRLElBQUksb0JBQW9CO0FBQ2hDLFlBQVEsSUFBSSxHQUFHO0FBQ2YsWUFBUSxJQUFJLEdBQUc7QUFDZixZQUFRLElBQUksSUFBSTtBQUNoQixRQUFJLFFBQVEsUUFBUTtBQUNsQixrQkFBWSxRQUFRO0FBQ3BCLGFBQU8sU0FBUywwQkFBMEI7QUFBQSxJQUM1QyxXQUNTLFFBQVEsUUFBUTtBQUN2QixrQkFBWSxLQUFLO0FBQ2pCLGFBQU8sU0FBUyx5QkFBeUI7QUFBQSxJQUMzQztBQUNBLGFBQVMsaUJBQWlCO0FBQUEsRUFDNUI7QUFBQSxFQUNBLE9BQU87QUFDTCxrQkFBYyxlQUFlO0FBQUEsRUFDL0I7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogWyJwYXRjaCIsICJzbmFrZWlmeSIsICJzbmFrZWlmeSIsICJnZXR0ZXIiLCAic2V0dGVyIiwgInNldCIsICJzaWduYWxOYW1lIiwgInNpZ25hbCIsICJHTGliIiwgIkdpbyIsICJHTGliIiwgIkdPYmplY3QiLCAiR0xpYiIsICJHT2JqZWN0IiwgInNpZ25hbCIsICJ2YWx1ZSIsICJzZXQiLCAibmFtZSIsICJhcmdzIiwgIl9hIiwgImFwcCIsICJHT2JqZWN0IiwgIkdPYmplY3QiLCAiX2EiLCAic2lnbmFsIiwgIkdPYmplY3QiLCAiR2lvIiwgIkdMaWIiLCAiR09iamVjdCIsICJ2YWx1ZSIsICJuZXdWYWx1ZSIsICJHT2JqZWN0IiwgImtleSIsICJvYmplY3QiLCAiR09iamVjdCIsICJHTGliIiwgIl9jdXJzb3JUaGVtZV9kZWMiLCAiX2ljb25UaGVtZV9kZWMiLCAiX2d0a1RoZW1lX2RlYyIsICJfYSIsICJfaW5pdCIsICJHaW8iLCAiXyIsICJzaWduYWwiLCAiR3RrIiwgIkdkayIsICJHdGsiLCAiQXN0YWwiLCAiR3RrIiwgIkdpbyIsICJHdGsiLCAic2V0dGVyIiwgImNzcyIsICJHaW8iLCAiR3RrIiwgIkFzdGFsIiwgIkdkayIsICJHdGsiLCAic3R5bGVfZGVmYXVsdCIsICJzdHlsZV9kZWZhdWx0IiwgIkd0ayJdCn0K

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@
