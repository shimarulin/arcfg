#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/dmFyIF-ags.js"

/bin/cat <<EOF | /bin/base64 --decode > $file
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __knownSymbol = (name, symbol) => (symbol = Symbol[name]) ? symbol : Symbol.for("Symbol." + name);
var __typeError = (msg) => {
  throw TypeError(msg);
};
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __decoratorStart = (base) => [, , , __create(base?.[__knownSymbol("metadata")] ?? null)];
var __decoratorStrings = ["class", "method", "getter", "setter", "accessor", "field", "value", "get", "set"];
var __expectFn = (fn) => fn !== void 0 && typeof fn !== "function" ? __typeError("Function expected") : fn;
var __decoratorContext = (kind, name, done, metadata, fns) => ({ kind: __decoratorStrings[kind], name, metadata, addInitializer: (fn) => done._ ? __typeError("Already initialized") : fns.push(__expectFn(fn || null)) });
var __decoratorMetadata = (array, target) => __defNormalProp(target, __knownSymbol("metadata"), array[3]);
var __runInitializers = (array, flags, self, value) => {
  for (var i = 0, fns = array[flags >> 1], n = fns && fns.length; i < n; i++) flags & 1 ? fns[i].call(self) : value = fns[i].call(self, value);
  return value;
};
var __decorateElement = (array, flags, name, decorators, target, extra) => {
  var fn, it, done, ctx, access, k = flags & 7, s = !!(flags & 8), p = !!(flags & 16);
  var j = k > 3 ? array.length + 1 : k ? s ? 1 : 2 : 0, key = __decoratorStrings[k + 5];
  var initializers = k > 3 && (array[j - 1] = []), extraInitializers = array[j] || (array[j] = []);
  var desc = k && (!p && !s && (target = target.prototype), k < 5 && (k > 3 || !p) && __getOwnPropDesc(k < 4 ? target : { get [name]() {
    return __privateGet(this, extra);
  }, set [name](x) {
    return __privateSet(this, extra, x);
  } }, name));
  k ? p && k < 4 && __name(extra, (k > 2 ? "set " : k > 1 ? "get " : "") + name) : __name(target, name);
  for (var i = decorators.length - 1; i >= 0; i--) {
    ctx = __decoratorContext(k, name, done = {}, array[3], extraInitializers);
    if (k) {
      ctx.static = s, ctx.private = p, access = ctx.access = { has: p ? (x) => __privateIn(target, x) : (x) => name in x };
      if (k ^ 3) access.get = p ? (x) => (k ^ 1 ? __privateGet : __privateMethod)(x, target, k ^ 4 ? extra : desc.get) : (x) => x[name];
      if (k > 2) access.set = p ? (x, y) => __privateSet(x, target, y, k ^ 4 ? extra : desc.set) : (x, y) => x[name] = y;
    }
    it = (0, decorators[i])(k ? k < 4 ? p ? extra : desc[key] : k > 4 ? void 0 : { get: desc.get, set: desc.set } : target, ctx), done._ = 1;
    if (k ^ 4 || it === void 0) __expectFn(it) && (k > 4 ? initializers.unshift(it) : k ? p ? extra = it : desc[key] = it : target = it);
    else if (typeof it !== "object" || it === null) __typeError("Object expected");
    else __expectFn(fn = it.get) && (desc.get = fn), __expectFn(fn = it.set) && (desc.set = fn), __expectFn(fn = it.init) && initializers.unshift(fn);
  }
  return k || __decoratorMetadata(array, target), desc && __defProp(target, name, desc), p ? k ^ 4 ? extra : desc : target;
};
var __accessCheck = (obj, member, msg) => member.has(obj) || __typeError("Cannot " + msg);
var __privateIn = (member, obj) => Object(obj) !== obj ? __typeError('Cannot use the "in" operator on this value') : member.has(obj);
var __privateGet = (obj, member, getter2) => (__accessCheck(obj, member, "read from private field"), getter2 ? getter2.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value) => member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter2) => (__accessCheck(obj, member, "write to private field"), setter2 ? setter2.call(obj, value) : member.set(obj, value), value);
var __privateMethod = (obj, member, method) => (__accessCheck(obj, member, "access private method"), method);

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
import GObject3 from "gi://GObject";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
import GObject from "gi://GObject";
var _a, _b;
var Fragment = class _Fragment extends GObject.Object {
  static {
    this[_b] = {
      append: { param_types: [GObject.TYPE_OBJECT] },
      remove: { param_types: [GObject.TYPE_OBJECT] }
    };
  }
  static {
    this[_a] = {
      children: GObject.ParamSpec.jsobject("children", "", "", GObject.ParamFlags.READABLE)
    };
  }
  static {
    GObject.registerClass(this);
  }
  *[(_b = GObject.signals, _a = GObject.properties, Symbol.iterator)]() {
    yield* this._children;
  }
  append(child) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    this._children.push(child);
    this.emit("append", child);
    this.notify("children");
  }
  remove(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("remove", child);
    this.notify("children");
  }
  constructor({ children = [] } = {}) {
    super();
    this._children = Array.isArray(children) ? children : [children];
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
};

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
import GObject2 from "gi://GObject";
import Gio from "gi://Gio";
import GLib from "gi://GLib";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function xml({ name, attributes, children }) {
  let builder = `<${name}`;
  const attrs = Object.entries(attributes ?? []);
  if (attrs.length > 0) {
    for (const [key, value] of attrs) {
      builder += ` ${key}="${value}"`;
    }
  }
  if (children && children.length > 0) {
    builder += ">";
    for (const node of children) {
      builder += xml(node);
    }
    builder += `</${name}>`;
  } else {
    builder += " />";
  }
  return builder;
}
function set(obj, prop, value) {
  const key = snakeify(prop);
  const getter2 = `get_${key}`;
  const setter2 = `set_${key}`;
  let current;
  if (getter2 in obj && typeof obj[getter2] === "function") {
    current = obj[getter2]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter2 in obj && typeof obj[setter2] === "function") {
      ;
      obj[setter2](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
var empty = Symbol("empty computed value");
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject2.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    let value = empty;
    let unsub;
    const subscribers = /* @__PURE__ */ new Set();
    const subscribe = (callback) => {
      if (subscribers.size === 0) {
        unsub = this.subscribe(() => {
          const newValue = transform(this.get());
          if (value !== newValue) {
            value = newValue;
            Array.from(subscribers).forEach((cb) => cb());
          }
        });
      }
      subscribers.add(callback);
      return () => {
        subscribers.delete(callback);
        if (subscribers.size === 0) {
          value = empty;
          unsub();
        }
      };
    };
    const get = () => {
      return value !== empty ? value : transform(this.get());
    };
    return new _Accessor(get, subscribe);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio.Settings) {
      return object.get_value(key).recursiveUnpack();
    }
    if (object instanceof GObject2.Object) {
      const getter2 = `get_${prop.replaceAll("-", "_")}`;
      if (getter2 in object && typeof object[getter2] === "function") {
        return object[getter2]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
    }
    throw Error(`cannot get property "${key}" on "${object}"`);
  };
  return new Accessor(get, subscribe);
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  textNode: missingImpl,
  appendChild: missingImpl,
  removeChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
var appendChild = Symbol("JSX add child method");
var removeChild = Symbol("JSX add remove method");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject3.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function signalName(key) {
  const [sig, detail] = kebabify(key.slice(2)).split(":");
  if (sig.startsWith("notify-")) {
    return `notify::${sig.slice(7)}`;
  }
  return detail ? `${sig}::${detail}` : sig;
}
function remove(parent, child) {
  if (parent instanceof Fragment) {
    parent.remove(child);
    return;
  }
  if (removeChild in parent && typeof parent[removeChild] === "function") {
    parent[removeChild](child);
    return;
  }
  env.removeChild(parent, child);
}
function append(parent, child) {
  if (parent instanceof Fragment) {
    parent.append(child);
    return;
  }
  if (child instanceof Fragment) {
    for (const ch of child) {
      append(parent, ch);
    }
    const appendHandler = child.connect("append", (_, ch) => {
      if (!(ch instanceof GObject3.Object)) {
        return console.error(TypeError(`cannot add ${ch} to ${parent}`));
      }
      append(parent, ch);
    });
    const removeHandler = child.connect("remove", (_, ch) => {
      if (!(ch instanceof GObject3.Object)) {
        return console.error(TypeError(`cannot remove ${ch} from ${parent}`));
      }
      remove(parent, ch);
    });
    onCleanup(() => {
      child.disconnect(appendHandler);
      child.disconnect(removeHandler);
    });
    return;
  }
  if (appendChild in parent && typeof parent[appendChild] === "function") {
    parent[appendChild](child, getType(child));
    return;
  }
  env.appendChild(parent, child);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  const deferProps = env.initProps(ctor, props) ?? [];
  const deferredProps = {};
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) {
      delete props[key2];
    }
    if (deferProps.includes(key2)) {
      deferredProps[key2] = props[key2];
      delete props[key2];
    }
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2, value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (let child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn(Error("Trying to add boolean value of `true` as a child."));
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        append(object, ch);
      }
    } else if (child) {
      if (!(child instanceof GObject3.Object)) {
        child = env.textNode(child);
      }
      append(object, child);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const id = object.connect(signalName(sig), handler);
    return () => object.disconnect(id);
  });
  for (const [key2, value] of Object.entries(deferredProps)) {
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
    } else {
      Object.assign(object, { [key2]: value });
    }
  }
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    scope.dispose();
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.remove(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if ([...fragment].some((ch) => ch === child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.append(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.append(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/This.ts
import GObject4 from "gi://GObject";
function This({
  this: self,
  children,
  $type,
  ...props
}) {
  const cleanup = new Array();
  if ($type) setType(self, $type);
  for (const [key, value] of Object.entries(props)) {
    if (key === "css") {
      if (value instanceof Accessor) {
        env.setCss(self, value.get());
        cleanup.push(value.subscribe(() => env.setCss(self, value.get())));
      } else if (typeof value === "string") {
        env.setCss(self, value);
      }
    } else if (key === "class") {
      if (value instanceof Accessor) {
        env.setClass(self, value.get());
        cleanup.push(value.subscribe(() => env.setClass(self, value.get())));
      } else if (typeof value === "string") {
        env.setClass(self, value);
      }
    } else if (key.startsWith("on")) {
      const id = self.connect(signalName(key), value);
      cleanup.push(() => self.disconnect(id));
    } else if (value instanceof Accessor) {
      const dispose = value.subscribe(() => set(self, key, value.get()));
      set(self, key, value.get());
      cleanup.push(dispose);
    } else {
      set(self, key, value);
    }
  }
  for (let child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn(Error("Trying to add boolean value of `true` as a child."));
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        append(self, ch);
      }
    } else if (child) {
      if (!(child instanceof GObject4.Object)) {
        child = env.textNode(child);
      }
      append(self, child);
    }
  }
  if (cleanup.length > 0) {
    onCleanup(() => cleanup.forEach((cb) => cb()));
  }
  return self;
}

// ../../../../../usr/share/ags/js/lib/overrides.ts
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod, patch2) {
  return mod.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify2(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland, Monitor, Workspace }) => {
  patch(Hyprland.prototype, "binds");
  patch(Hyprland.prototype, "monitors");
  patch(Hyprland.prototype, "workspaces");
  patch(Hyprland.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp, Audio, Video }) => {
  patch(Wp.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gobject.ts
import GObject5 from "gi://GObject";
import GLib2 from "gi://GLib";
var priv = Symbol("gobject private");
var { defineProperty, fromEntries, entries } = Object;
var { Object: GObj, registerClass } = GObject5;
var SignalFlags = GObject5.SignalFlags;
var AccumulatorType = GObject5.AccumulatorType;
var ParamSpec = GObject5.ParamSpec;
var ParamFlags = GObject5.ParamFlags;
function assertField(ctx) {
  if (ctx.private) throw Error("private fields are not supported");
  if (ctx.static) throw Error("static fields are not supported");
  if (typeof ctx.name !== "string") {
    throw Error("only strings can be gobject property keys");
  }
  return ctx.name;
}
function getter(typeDeclaration) {
  return function(get, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.READABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.READABLE, type: typeDeclaration };
    }
    return get;
  };
}
function setter(typeDeclaration) {
  return function(set2, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.WRITABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.WRITABLE, type: typeDeclaration };
    }
    return set2;
  };
}
function signal(...args) {
  return function(method, ctx) {
    if (ctx.private) throw Error("private fields are not supported");
    if (ctx.static) throw Error("static fields are not supported");
    if (typeof ctx.name !== "string") {
      throw Error("only strings can be gobject signals");
    }
    const signalName2 = kebabify(ctx.name);
    const meta = ctx.metadata;
    const signals = meta.signals ??= {};
    if (Array.isArray(args[0])) {
      const [params, returnType, options] = args;
      signals[signalName2] = {
        method,
        default: options?.default ?? true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i),
        ...returnType && {
          return_type: "$gtype" in returnType ? returnType.$gtype : returnType
        },
        ...options?.flags && {
          flags: options.flags
        },
        ...typeof options?.accumulator === "number" && {
          accumulator: options.accumulator
        }
      };
    } else {
      const params = args;
      signals[signalName2] = {
        method,
        default: true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i)
      };
    }
    return function(...params) {
      return this.emit(signalName2, ...params);
    };
  };
}
var MAXINT = 2 ** 31 - 1;
var MININT = -(2 ** 31);
var MAXUINT = 2 ** 32 - 1;
var MAXFLOAT = 34028235e31;
var MINFLOAT = -34028235e31;
var MININT64 = Number.MIN_SAFE_INTEGER;
var MAXINT64 = Number.MAX_SAFE_INTEGER;
function pspecFromGType(type, name, flags) {
  switch (type) {
    case GObject5.TYPE_BOOLEAN:
      return ParamSpec.boolean(name, "", "", flags, false);
    case GObject5.TYPE_STRING:
      return ParamSpec.string(name, "", "", flags, "");
    case GObject5.TYPE_INT:
      return ParamSpec.int(name, "", "", flags, MININT, MAXINT, 0);
    case GObject5.TYPE_UINT:
      return ParamSpec.uint(name, "", "", flags, 0, MAXUINT, 0);
    case GObject5.TYPE_INT64:
      return ParamSpec.int64(name, "", "", flags, MININT64, MAXINT64, 0);
    case GObject5.TYPE_UINT64:
      return ParamSpec.uint64(name, "", "", flags, 0, Number.MAX_SAFE_INTEGER, 0);
    case GObject5.TYPE_FLOAT:
      return ParamSpec.float(name, "", "", flags, MINFLOAT, MAXFLOAT, 0);
    case GObject5.TYPE_DOUBLE:
      return ParamSpec.double(name, "", "", flags, Number.MIN_VALUE, Number.MIN_VALUE, 0);
    case GObject5.TYPE_JSOBJECT:
      return ParamSpec.jsobject(name, "", "", flags);
    case GObject5.TYPE_VARIANT:
      return ParamSpec.object(name, "", "", flags, GLib2.Variant);
    case GObject5.TYPE_ENUM:
    case GObject5.TYPE_INTERFACE:
    case GObject5.TYPE_BOXED:
    case GObject5.TYPE_POINTER:
    case GObject5.TYPE_PARAM:
    case GObject5.type_from_name("GType"):
      throw Error(`cannot guess ParamSpec from GType "${type}"`);
    case GObject5.TYPE_OBJECT:
    default:
      return ParamSpec.object(name, "", "", flags, type);
  }
}
function pspec(name, flags, declaration) {
  if (declaration instanceof ParamSpec) return declaration;
  if (declaration === Object || declaration === Function || declaration === Array) {
    return ParamSpec.jsobject(name, "", "", flags);
  }
  if (declaration === String) {
    return ParamSpec.string(name, "", "", flags, "");
  }
  if (declaration === Number) {
    return ParamSpec.double(name, "", "", flags, -Number.MAX_VALUE, Number.MAX_VALUE, 0);
  }
  if (declaration === Boolean) {
    return ParamSpec.boolean(name, "", "", flags, false);
  }
  if ("$gtype" in declaration) {
    return pspecFromGType(declaration.$gtype, name, flags);
  }
  if (typeof declaration === "function") {
    return declaration(name, flags);
  }
  throw Error("invalid PropertyTypeDeclaration");
}
function register(options = {}) {
  return function(cls, ctx) {
    const t = options.Template;
    if (typeof t === "string" && !t.startsWith("resource://") && !t.startsWith("file://")) {
      options.Template = new TextEncoder().encode(t);
    }
    const meta = ctx.metadata;
    const props = fromEntries(
      entries(meta.properties ?? {}).map(([fieldName, { flags, type }]) => {
        const key = kebabify(fieldName);
        const spec = pspec(key, flags, type);
        return [key, spec];
      })
    );
    const signals = fromEntries(
      entries(meta.signals ?? {}).map(([signalName2, { default: def, method, ...signal2 }]) => {
        if (def) {
          defineProperty(cls.prototype, `on_${signalName2.replaceAll("-", "_")}`, {
            enumerable: false,
            configurable: false,
            value: method
          });
        }
        return [signalName2, signal2];
      })
    );
    delete meta.properties;
    delete meta.signals;
    registerClass({ ...options, Properties: props, Signals: signals }, cls);
  };
}
Function.$gtype = Object.$gtype;
Array.$gtype = Object.$gtype;
Date.$gtype = Object.$gtype;
Map.$gtype = Object.$gtype;
Set.$gtype = Object.$gtype;

// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
import GLib4 from "gi://GLib?version=2.0";
import Gtk from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";
import Gio3 from "gi://Gio?version=2.0";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/dbus.ts
import Gio2 from "gi://Gio";
import GLib3 from "gi://GLib";
import GObject6 from "gi://GObject";
var DEFAULT_TIMEOUT = 1e4;
var Variant = GLib3.Variant;
var info = Symbol("dbus interface info");
var internals = Symbol("dbus interface internals");
var remoteMethod = Symbol("proxy remoteMethod");
var remoteMethodAsync = Symbol("proxy remoteMethodAsync");
var remotePropertySet = Symbol("proxy remotePropertySet");
var _a2;
var Service = class extends GObject6.Object {
  constructor() {
    super();
    this[_a2] = {
      priv: {},
      onStop: /* @__PURE__ */ new Set()
    };
    const service = this.constructor;
    if (!service[info]) throw Error("missing interface info");
    this.#info = service[info];
  }
  static {
    GObject6.registerClass(this);
  }
  #info;
  notify(propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (prop && this[internals].dbusObject) {
      this[internals].dbusObject.emit_property_changed(
        propertyName,
        new GLib3.Variant(prop.signature, this[propertyName])
      );
    }
    super.notify(prop ? kebabify(propertyName) : propertyName);
  }
  emit(name, ...params) {
    const signal2 = this.#info.lookup_signal(name);
    if (signal2 && this[internals].dbusObject) {
      const signature = `(${signal2.args.map((a) => a.signature).join("")})`;
      this[internals].dbusObject.emit_signal(name, new GLib3.Variant(signature, params));
    }
    return super.emit(signal2 ? kebabify(name) : name, ...params);
  }
  // server
  #handlePropertyGet(_, propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no exported property: "${propertyName}"`);
    }
    const value = this[propertyName];
    if (typeof value !== "undefined") {
      return new GLib3.Variant(prop.signature, value);
    } else {
      return null;
    }
  }
  // server
  #handlePropertySet(_, propertyName, value) {
    const newValue = value.deepUnpack();
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no property: "${propertyName}"`);
    }
    if (this[propertyName] !== newValue) {
      this[propertyName] = value.deepUnpack();
    }
  }
  // server
  #returnError(error, invocation) {
    console.error(error);
    if (error instanceof GLib3.Error) {
      return invocation.return_gerror(error);
    }
    if (error instanceof Error) {
      return invocation.return_dbus_error(
        error.name.includes(".") ? error.name : `gjs.JSError.${error.name}`,
        error.message
      );
    }
    invocation.return_dbus_error("gjs.DBusService.UnknownError", `${error}`);
  }
  // server
  #returnValue(value, methodName, invocation) {
    if (value === null || value === void 0) {
      return invocation.return_value(new GLib3.Variant("()", []));
    }
    const args = this.#info.lookup_method(methodName)?.out_args ?? [];
    const signature = `(${args.map((arg) => arg.signature).join("")})`;
    if (!Array.isArray(value)) throw Error("value has to be a tuple");
    invocation.return_value(new GLib3.Variant(signature, value));
  }
  // server
  #handleMethodCall(_, methodName, parameters, invocation) {
    try {
      const value = this[methodName](
        ...parameters.deepUnpack()
      );
      if (value instanceof GLib3.Variant) {
        invocation.return_value(value);
      } else if (value instanceof Promise) {
        value.then((value2) => this.#returnValue(value2, methodName, invocation)).catch((error) => this.#returnError(error, invocation));
      } else {
        this.#returnValue(value, methodName, invocation);
      }
    } catch (error) {
      this.#returnError(error, invocation);
    }
  }
  // server
  async serve({
    busType = Gio2.BusType.SESSION,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio2.BusNameOwnerFlags.NONE,
    timeout = DEFAULT_TIMEOUT
  } = {}) {
    const impl = new Gio2.DBusExportedObject(
      // @ts-expect-error missing constructor type
      { g_interface_info: this.#info }
    );
    impl.connect("handle-method-call", this.#handleMethodCall.bind(this));
    impl.connect("handle-property-get", this.#handlePropertyGet.bind(this));
    impl.connect("handle-property-set", this.#handlePropertySet.bind(this));
    this.#info.cache_build();
    return new Promise((resolve, reject) => {
      let source = timeout > 0 ? setTimeout(() => {
        reject(Error(`serve timed out`));
        source = null;
      }, timeout) : null;
      const clear = () => {
        if (source) {
          clearTimeout(source);
          source = null;
        }
      };
      const busId = Gio2.bus_own_name(
        busType,
        name,
        flags,
        (conn) => {
          try {
            impl.export(conn, objectPath);
            this[internals].dbusObject = impl;
            this[internals].onStop.add(() => {
              Gio2.bus_unown_name(busId);
              impl.unexport();
              this.#info.cache_release();
              delete this[internals].dbusObject;
            });
            resolve(this);
          } catch (error) {
            reject(error);
          }
        },
        clear,
        clear
      );
    });
  }
  // proxy
  #handlePropertiesChanged(_, changed, invalidated) {
    const set2 = /* @__PURE__ */ new Set([...Object.keys(changed.deepUnpack()), ...invalidated]);
    for (const prop of set2.values()) {
      this.notify(prop);
    }
  }
  // proxy
  #handleSignal(_, _sender, signal2, parameters) {
    this.emit(kebabify(signal2), ...parameters.deepUnpack());
  }
  // proxy
  #remoteMethodParams(methodName, args) {
    const { proxy } = this[internals];
    if (!proxy) throw Error("invalid remoteMethod invocation: not a proxy");
    const method = this.#info.lookup_method(methodName);
    if (!method) throw Error("method not found");
    const signature = `(${method.in_args.map((a) => a.signature).join("")})`;
    return [
      methodName,
      new GLib3.Variant(signature, args),
      Gio2.DBusCallFlags.NONE,
      DEFAULT_TIMEOUT,
      null
    ];
  }
  // proxy
  [(info, _a2 = internals, remoteMethod)](methodName, args) {
    const params = this.#remoteMethodParams(methodName, args);
    return this[internals].proxy.call_sync(...params);
  }
  // proxy
  [remoteMethodAsync](methodName, args) {
    return new Promise((resolve, reject) => {
      try {
        const params = this.#remoteMethodParams(methodName, args);
        this[internals].proxy.call(...params, (_, res) => {
          try {
            resolve(this[internals].proxy.call_finish(res));
          } catch (error) {
            reject(error);
          }
        });
      } catch (error) {
        reject(error);
      }
    });
  }
  // proxy
  [remotePropertySet](name, value) {
    const proxy = this[internals].proxy;
    const prop = this.#info.lookup_property(name);
    const variant = new GLib3.Variant(prop.signature, value);
    proxy.set_cached_property(name, variant);
    proxy.call(
      "org.freedesktop.DBus.Properties.Set",
      new GLib3.Variant("(ssv)", [proxy.gInterfaceName, name, variant]),
      Gio2.DBusCallFlags.NONE,
      -1,
      null,
      (_, res) => {
        try {
          proxy.call_finish(res);
        } catch (e) {
          console.error(e);
        }
      }
    );
  }
  // proxy
  async proxy({
    bus = Gio2.DBus.session,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio2.DBusProxyFlags.NONE,
    timeout = DEFAULT_TIMEOUT
  } = {}) {
    const proxy = new Gio2.DBusProxy({
      gConnection: bus,
      gInterfaceName: this.#info.name,
      gInterfaceInfo: this.#info,
      gName: name,
      gFlags: flags,
      gObjectPath: objectPath
    });
    return new Promise((resolve, reject) => {
      const cancallable = new Gio2.Cancellable();
      let source = timeout > 0 ? setTimeout(() => {
        reject(Error(`proxy timed out`));
        source = null;
        cancallable.cancel();
      }, timeout) : null;
      proxy.init_async(GLib3.PRIORITY_DEFAULT, cancallable, (_, res) => {
        try {
          if (source) {
            clearTimeout(source);
            source = null;
          }
          proxy.init_finish(res);
          this[internals].proxy = proxy;
          const ids = [
            proxy.connect("g-signal", this.#handleSignal.bind(this)),
            proxy.connect(
              "g-properties-changed",
              this.#handlePropertiesChanged.bind(this)
            )
          ];
          this[internals].onStop.add(() => {
            ids.forEach((id) => proxy.disconnect(id));
            delete this[internals].proxy;
          });
          resolve(this);
        } catch (error) {
          reject(error);
        }
      });
    });
  }
  stop() {
    const { onStop } = this[internals];
    for (const cb of onStop.values()) {
      onStop.delete(cb);
      cb();
    }
  }
};
function iface(name, options) {
  return function(cls, ctx) {
    const meta = ctx.metadata;
    if (!meta) throw Error(`${cls.name} is not an interface`);
    const { dbusMethods = {}, dbusSignals = {}, dbusProperties = {} } = meta;
    const infoXml = xml({
      name: "node",
      children: [
        {
          name: "interface",
          attributes: { name },
          children: [
            ...Object.entries(dbusMethods).map(([name2, args]) => ({
              name: "method",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.entries(dbusSignals).map(([name2, args]) => ({
              name: "signal",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.values(dbusProperties).map(({ name: name2, type, read, write }) => ({
              name: "property",
              attributes: {
                ...name2 && { name: name2 },
                type,
                access: (read ? "read" : "") + (write ? "write" : "")
              }
            }))
          ]
        }
      ]
    });
    Object.assign(cls, { [info]: Gio2.DBusInterfaceInfo.new_for_xml(infoXml) });
    register(options)(cls, ctx);
  };
}
function installMethod(args, method, ctx) {
  const name = ctx.name;
  const meta = ctx.metadata;
  const methods = meta.dbusMethods ??= {};
  if (typeof name !== "string") {
    throw Error("only string named methods are allowed");
  }
  const [inArgs, outArgs = []] = Array.isArray(args[0]) ? args : [args];
  methods[name] = [
    ...inArgs.map((arg) => ({
      direction: "in",
      ...typeof arg === "string" ? { type: arg } : arg
    })),
    ...outArgs.map((arg) => ({
      direction: "out",
      ...typeof arg === "string" ? { type: arg } : arg
    }))
  ];
  return name;
}
function methodAsync(...args) {
  return function(method, ctx) {
    const name = installMethod(args, method, ctx);
    return async function(...args2) {
      if (this[internals].proxy) {
        const value = await this[remoteMethodAsync](name, args2);
        return value.deepUnpack();
      } else {
        return method.apply(this, args2);
      }
    };
  };
}

// ../../../../../usr/share/ags/js/lib/app/dbus.ts
var _Request_dec, _Quit_dec, _ToggleWindow_dec, _Inspector_dec, _a3, _AppDBus_decorators, _init;
_AppDBus_decorators = [iface("io.Astal.Application")];
var _AppDBus = class _AppDBus extends (_a3 = Service, _Inspector_dec = [methodAsync()], _ToggleWindow_dec = [methodAsync("s")], _Quit_dec = [methodAsync()], _Request_dec = [methodAsync(["as"], ["s"])], _a3) {
  constructor(impl) {
    super();
    __runInitializers(_init, 5, this);
    this.impl = void 0;
    this.impl = impl;
  }
  async Inspector() {
    return Promise.resolve(this.impl.insector());
  }
  async ToggleWindow(name) {
    return Promise.resolve(this.impl.toggleWindow(name));
  }
  async Quit() {
    return Promise.resolve(this.impl.quit());
  }
  async Request(argv) {
    return this.impl.request(argv).then((res) => [res]);
  }
  static proxy(instanceName) {
    const app2 = new _AppDBus({
      insector() {
      },
      toggleWindow() {
      },
      quit() {
      },
      request: () => Promise.reject()
    });
    return app2.proxy({
      name: "io.Astal." + instanceName
    });
  }
};
_init = __decoratorStart(_a3);
__decorateElement(_init, 1, "Inspector", _Inspector_dec, _AppDBus);
__decorateElement(_init, 1, "ToggleWindow", _ToggleWindow_dec, _AppDBus);
__decorateElement(_init, 1, "Quit", _Quit_dec, _AppDBus);
__decorateElement(_init, 1, "Request", _Request_dec, _AppDBus);
_AppDBus = __decorateElement(_init, 0, "AppDBus", _AppDBus_decorators, _AppDBus);
__runInitializers(_init, 1, _AppDBus);
var AppDBus = _AppDBus;

// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";
Gtk.init();
GLib4.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw }) => Adw.init()).catch(() => void 0);
var _request_dec, _cursorTheme_dec, _cursorTheme_dec2, _iconTheme_dec, _iconTheme_dec2, _gtkTheme_dec, _gtkTheme_dec2, _windows_dec, _monitors_dec, _windowToggled_dec, _a4, _App_decorators, _instanceName, _main, _requestHandlers, _dbusService, _cssProviders, _App_instances, settings_get, display_get, _init2;
_App_decorators = [register()];
var App = class extends (_a4 = Gtk.Application, _windowToggled_dec = [signal(Gtk.Window)], _monitors_dec = [getter(Array)], _windows_dec = [getter(Array)], _gtkTheme_dec2 = [setter(String)], _gtkTheme_dec = [getter(String)], _iconTheme_dec2 = [setter(String)], _iconTheme_dec = [getter(String)], _cursorTheme_dec2 = [setter(String)], _cursorTheme_dec = [getter(String)], _request_dec = [signal(Array, Function)], _a4) {
  constructor() {
    super({ flags: Gio3.ApplicationFlags.HANDLES_COMMAND_LINE });
    __runInitializers(_init2, 5, this);
    __privateAdd(this, _App_instances);
    __privateAdd(this, _instanceName, "ags");
    __privateAdd(this, _main);
    __privateAdd(this, _requestHandlers, 0);
    __privateAdd(this, _dbusService);
    __privateAdd(this, _cssProviders, new Array());
    __privateSet(this, _dbusService, new AppDBus({
      toggleWindow: this.toggle_window.bind(this),
      quit: this.quit.bind(this),
      request: (argv) => new Promise((resolve) => this.request(argv, resolve)),
      insector: () => {
        Gtk.Window.set_interactive_debugging(true);
      }
    }));
    __privateGet(this, _App_instances, display_get).get_monitors().connect("items-changed", () => {
      this.notify("monitors");
    });
    this.connect("window-added", (_, window) => {
      const id1 = window.connect("notify::visible", () => this.windowToggled(window));
      const id2 = this.connect("window-removed", (_2, removed) => {
        if (removed == window) {
          window.disconnect(id1);
          this.disconnect(id2);
        }
      });
    });
    __privateGet(this, _App_instances, settings_get).connect("notify", (_, { name }) => {
      switch (name) {
        case "gtk-theme-name":
          this.notify("gtk-theme");
          break;
        case "gtk-icon-theme-name":
          this.notify("icon-theme");
          break;
        case "gtk-cursor-theme-name":
          this.notify("cursor-theme");
          break;
        default:
          break;
      }
    });
  }
  get instanceName() {
    return __privateGet(this, _instanceName);
  }
  /**
   * Get all monitors from {@link Gdk.Display}.
   */
  get_monitors() {
    const mons = __privateGet(this, _App_instances, display_get).get_monitors();
    const list = new Array();
    let monitor = null;
    let i = 0;
    while ((monitor = mons.get_item(i++)) !== null) {
      list.push(monitor);
    }
    return list;
  }
  windowToggled(window) {
    void window;
  }
  get monitors() {
    return this.get_monitors();
  }
  get windows() {
    return this.get_windows();
  }
  set gtkTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkThemeName = name;
  }
  get gtkTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkThemeName;
  }
  set iconTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkIconThemeName = name;
  }
  get iconTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkIconThemeName;
  }
  set cursorTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkCursorThemeName = name;
  }
  get cursorTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkCursorThemeName;
  }
  /**
   * Get a window by its {@link Gtk.Widget.prototype.name} that has been added to this app
   * using {@link Gtk.Application.prototype.add_window}.
   */
  get_window(name) {
    return this.windows.find((w) => w.name === name);
  }
  /**
   * Toggle the visibility of a window by its {@link Gtk.Widget.prototype.name}
   * that has been added to this app using {@link Gtk.Application.prototype.add_window}.
   */
  toggle_window(name) {
    const win = this.get_window(name);
    if (!win) throw Error(`no window registered with name "${name}"`);
    win.visible = !win.visible;
  }
  /**
   * Reset previously set css providers with {@link App.prototype.apply_css}.
   */
  reset_css() {
    for (const provider of __privateGet(this, _cssProviders)) {
      Gtk.StyleContext.remove_provider_for_display(__privateGet(this, _App_instances, display_get), provider);
    }
  }
  /**
   * Add a new {@link Gtk.CssProvider}.
   * @param style Css string or a path to a css file.
   */
  apply_css(style, reset = false) {
    const provider = new Gtk.CssProvider();
    provider.connect("parsing-error", (_, section, error) => {
      const name = section.get_file()?.get_basename() ?? "";
      const line = section.get_start_location().lines + 1;
      const chars = section.get_start_location().line_chars + 1;
      console.error(`CSS Error ${name}:${line}:${chars} ${error.message}`);
    });
    if (reset) this.reset_css();
    if (GLib4.file_test(style, GLib4.FileTest.EXISTS)) {
      provider.load_from_path(style);
    } else if (style.startsWith("resource://")) {
      provider.load_from_resource(style.replace("resource://", ""));
    } else {
      provider.load_from_string(style);
    }
    Gtk.StyleContext.add_provider_for_display(
      __privateGet(this, _App_instances, display_get),
      provider,
      Gtk.STYLE_PROVIDER_PRIORITY_USER
    );
    __privateGet(this, _cssProviders).push(provider);
  }
  /**
   * Shortcut for {@link Gtk.IconTheme.prototype.add_search_path}.
   */
  add_icons(path) {
    Gtk.IconTheme.get_for_display(__privateGet(this, _App_instances, display_get)).add_search_path(path);
  }
  /**
   * Quit and exit the application.
   */
  quit(code = 0) {
    __privateGet(this, _dbusService).stop();
    super.quit();
    exit(code);
  }
  request(args, response) {
    if (__privateGet(this, _requestHandlers) === 0) {
      response(`instance "${this.instanceName}" has no request handler implemented`);
    }
    void args;
  }
  vfunc_command_line(cmd) {
    if (cmd.isRemote) {
      this.request(cmd.get_arguments(), (str) => {
        cmd.print_literal(str + "\n");
        cmd.done();
      });
    } else {
      this.hold();
      __privateGet(this, _dbusService).serve({
        name: this.applicationId
      });
      createRoot((dispose) => {
        var _a5;
        this.connect("shutdown", dispose);
        (_a5 = __privateGet(this, _main)) == null ? void 0 : _a5.call(this, ...programArgs);
      });
    }
    return 0;
  }
  start(config) {
    const { main, requestHandler, instanceName, css, icons, ...cfg } = config;
    __privateSet(this, _main, main);
    Object.assign(this, cfg);
    if (requestHandler) {
      this.connect("request", (_, args, response) => requestHandler(args, response));
    }
    if (instanceName) __privateSet(this, _instanceName, instanceName);
    if (css) this.apply_css(css, false);
    if (icons) app.add_icons(icons);
    this.applicationId = "io.Astal." + this.instanceName;
    setConsoleLogDomain(this.instanceName);
    this.runAsync(programArgs);
  }
  connect(signal2, callback) {
    if (signal2 === "request") __privateSet(this, _requestHandlers, __privateGet(this, _requestHandlers) + 1);
    return super.connect(signal2, callback);
  }
};
_init2 = __decoratorStart(_a4);
_instanceName = new WeakMap();
_main = new WeakMap();
_requestHandlers = new WeakMap();
_dbusService = new WeakMap();
_cssProviders = new WeakMap();
_App_instances = new WeakSet();
settings_get = function() {
  const settings = Gtk.Settings.get_default();
  if (!settings) throw Error("could not get settings");
  return settings;
};
display_get = function() {
  const display = Gdk.Display.get_default();
  if (!display) throw Error("could not get display");
  return display;
};
__decorateElement(_init2, 1, "windowToggled", _windowToggled_dec, App);
__decorateElement(_init2, 2, "monitors", _monitors_dec, App);
__decorateElement(_init2, 2, "windows", _windows_dec, App);
__decorateElement(_init2, 3, "gtkTheme", _gtkTheme_dec2, App);
__decorateElement(_init2, 2, "gtkTheme", _gtkTheme_dec, App);
__decorateElement(_init2, 3, "iconTheme", _iconTheme_dec2, App);
__decorateElement(_init2, 2, "iconTheme", _iconTheme_dec, App);
__decorateElement(_init2, 3, "cursorTheme", _cursorTheme_dec2, App);
__decorateElement(_init2, 2, "cursorTheme", _cursorTheme_dec, App);
__decorateElement(_init2, 1, "request", _request_dec, App);
App = __decorateElement(_init2, 0, "App", _App_decorators, App);
__runInitializers(_init2, 1, App);
var app = new App();
var app_default = app;

// ../../../../../usr/share/ags/js/lib/gtk4/index.ts
import Astal from "gi://Astal?version=4.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Gdk2 from "gi://Gdk?version=4.0";

// ../../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
import Gtk4 from "gi://Gtk?version=4.0";
import Astal2 from "gi://Astal?version=4.0";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Gio4 from "gi://Gio?version=2.0";
var adw = await import("gi://Adw").then((m) => m.default).catch(() => null);
var dummyBuilder = new Gtk3.Builder();
var { intrinsicElements } = configue({
  initProps(ctor) {
    if (ctor === Gtk3.Stack) {
      const keys = [
        "visibleChildName",
        "visible_child_name"
      ];
      return keys;
    }
    if (adw && ctor === adw.ToggleGroup) {
      const keys = [
        "active",
        "activeName",
        "active_name"
      ];
      return keys;
    }
  },
  setCss(object, css) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter2 = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk3.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk3.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter2(css.get());
      const dispose = css.subscribe(() => setter2(css.get()));
      onCleanup(dispose);
    } else {
      setter2(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  textNode(text) {
    return Gtk3.Label.new(text.toString());
  },
  // `set_child` and especially `remove` might be way too generic and there might
  // be cases where it does not actually do what we want it to do
  //
  // if there is a usecase for either of these two that does something else than
  // we expect it to do here in a JSX context we have to check for known instances
  removeChild(parent, child) {
    if (parent instanceof Gtk3.Widget && child instanceof Gtk3.EventController) {
      return parent.remove_controller(child);
    }
    if ("set_child" in parent && typeof parent.set_child == "function") {
      return parent.set_child(null);
    }
    if ("remove" in parent && typeof parent.remove == "function") {
      return parent.remove(child);
    }
    throw Error(`cannot remove ${child} from ${parent}`);
  },
  appendChild(parent, child) {
    if (child instanceof Gtk3.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
      return parent.set_adjustment(child);
    }
    if (child instanceof Gtk3.Widget && parent instanceof Gtk3.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
      return parent.add_named(child, child.name);
    }
    if (child instanceof Gtk3.Popover && parent instanceof Gtk3.MenuButton) {
      return parent.set_popover(child);
    }
    if (child instanceof Gio4.MenuModel && (parent instanceof Gtk3.MenuButton || parent instanceof Gtk3.PopoverMenu)) {
      return parent.set_menu_model(child);
    }
    if (child instanceof Gio4.MenuItem && parent instanceof Gio4.Menu) {
    }
    if (child instanceof Gtk3.Window && parent instanceof Gtk3.Application) {
      return parent.add_window(child);
    }
    if (child instanceof Gtk3.TextBuffer && parent instanceof Gtk3.TextView) {
      return parent.set_buffer(child);
    }
    if (parent instanceof Gtk3.Buildable) {
      return parent.vfunc_add_child(dummyBuilder, child, getType(child));
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk4.Box,
  button: Gtk4.Button,
  centerbox: Gtk4.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk4.DrawingArea,
  entry: Gtk4.Entry,
  image: Gtk4.Image,
  label: Gtk4.Label,
  levelbar: Gtk4.LevelBar,
  menubutton: Gtk4.MenuButton,
  overlay: Gtk4.Overlay,
  popover: Gtk4.Popover,
  revealer: Gtk4.Revealer,
  scrolledwindow: Gtk4.ScrolledWindow,
  slider: Astal2.Slider,
  stack: Gtk4.Stack,
  switch: Gtk4.Switch,
  togglebutton: Gtk4.ToggleButton,
  window: Astal2.Window
});

// ns/apps/kotami-status-bar/components/StatusBar.tsx
function StatusBar() {
  return /* @__PURE__ */ jsxs("centerbox", { children: [
    /* @__PURE__ */ jsx("box", { $type: "start", children: /* @__PURE__ */ jsx("label", { label: "menu" }) }),
    /* @__PURE__ */ jsx("box", { $type: "end", children: /* @__PURE__ */ jsx("label", { label: "clock" }) })
  ] });
}

// ns/apps/kotami-status-bar/components/StatusBarWindow.tsx
function StatusBarWindow({ gdkmonitor }) {
  let win;
  const { TOP, LEFT, RIGHT } = Astal.WindowAnchor;
  onCleanup(() => {
    win.destroy();
  });
  return /* @__PURE__ */ jsx(
    "window",
    {
      $: (self) => win = self,
      visible: true,
      namespace: "kotami-panel",
      name: `panel-${gdkmonitor.connector}`,
      gdkmonitor,
      exclusivity: Astal.Exclusivity.EXCLUSIVE,
      anchor: TOP | LEFT | RIGHT,
      application: app_default,
      layer: Astal.Layer.TOP,
      children: /* @__PURE__ */ jsx(StatusBar, {})
    }
  );
}

// ns/apps/kotami-status-bar/app.tsx
app_default.start({
  /**
   * https://aylur.github.io/ags/guide/app-cli.html#instance-identifier
   *
   * Use in cli:
   * ags request show quick-settings -i status-bar
   */
  instanceName: "status-bar",
  // css: style,
  // It's usually best to go with the default Adwaita theme
  // and built off of it, instead of allowing the system theme
  // to potentially mess something up when it is changed.
  // Note: `* { all:unset }` in css is not recommended.
  // gtkTheme: "Adwaita",
  requestHandler(argv, response) {
    const [
      cmd,
      arg,
      ...rest
    ] = argv;
    console.log("\nstatus-bar:");
    console.log(cmd);
    console.log(arg);
    console.log(rest);
    if (cmd == "show") {
      return response("ok");
    }
    response("unknown command");
  },
  main() {
    const monitors = createBinding(app_default, "monitors");
    return /* @__PURE__ */ jsx(For, { each: monitors, children: (monitor) => /* @__PURE__ */ jsx(This, { this: app_default, children: /* @__PURE__ */ jsx(StatusBarWindow, { gdkmonitor: monitor }) }) });
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9qc3gudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9GcmFnbWVudC50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3N0YXRlLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC91dGlsLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvZW52LnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvc2NvcGUudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9Gb3IudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9UaGlzLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL292ZXJyaWRlcy50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ29iamVjdC50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2FwcC50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZGJ1cy50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9hcHAvZGJ1cy50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2luZGV4LnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvanN4LXJ1bnRpbWUudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2d0azQvanN4LXJ1bnRpbWUudHMiLCAibnMvYXBwcy9rb3RhbWktc3RhdHVzLWJhci9jb21wb25lbnRzL1N0YXR1c0Jhci50c3giLCAibnMvYXBwcy9rb3RhbWktc3RhdHVzLWJhci9jb21wb25lbnRzL1N0YXR1c0JhcldpbmRvdy50c3giLCAibnMvYXBwcy9rb3RhbWktc3RhdHVzLWJhci9hcHAudHN4Il0sCiAgInNvdXJjZXNDb250ZW50IjogWyJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyB0eXBlIENDLCB0eXBlIEZDLCBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsga2ViYWJpZnksIHR5cGUgUGFzY2FsaWZ5LCBzZXQgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgeyBvbkNsZWFudXAgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbi8qKlxuICogUmVwcmVzZW50cyBhbGwgb2YgdGhlIHRoaW5ncyB0aGF0IGNhbiBiZSBwYXNzZWQgYXMgYSBjaGlsZCB0byBjbGFzcyBjb21wb25lbnRzLlxuICovXG5leHBvcnQgdHlwZSBOb2RlID1cbiAgICB8IEFycmF5PEdPYmplY3QuT2JqZWN0PlxuICAgIHwgR09iamVjdC5PYmplY3RcbiAgICB8IG51bWJlclxuICAgIHwgc3RyaW5nXG4gICAgfCBib29sZWFuXG4gICAgfCBudWxsXG4gICAgfCB1bmRlZmluZWRcblxuZXhwb3J0IGNvbnN0IGd0a1R5cGUgPSBTeW1ib2woXCJndGsgYnVpbGRlciB0eXBlXCIpXG5cbi8qKlxuICogU3BlY2lhbCBzeW1ib2wgd2hpY2ggbGV0cyB5b3UgaW1wbGVtZW50IGhvdyB3aWRnZXRzIGFyZSBhcHBlbmRlZCBpbiBKU1guXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gKiAgIFthcHBlbmRDaGlsZF0oY2hpbGQ6IEdPYmplY3QuT2JqZWN0LCB0eXBlOiBzdHJpbmcgfCBudWxsKSB7XG4gKiAgICAgLy8gaW1wbGVtZW50XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgYXBwZW5kQ2hpbGQgPSBTeW1ib2woXCJKU1ggYWRkIGNoaWxkIG1ldGhvZFwiKVxuXG4vKipcbiAqIFNwZWNpYWwgc3ltYm9sIHdoaWNoIGxldHMgeW91IGltcGxlbWVudCBob3cgd2lkZ2V0cyBhcmUgcmVtb3ZlZCBpbiBKU1guXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gKiAgIFtyZW1vdmVDaGlsZF0oY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gKiAgICAgLy8gaW1wbGVtZW50XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgcmVtb3ZlQ2hpbGQgPSBTeW1ib2woXCJKU1ggYWRkIHJlbW92ZSBtZXRob2RcIilcblxuLyoqXG4gKiBHZXQgdGhlIHR5cGUgb2YgdGhlIG9iamVjdCBzcGVjaWZpZWQgdGhyb3VnaCB0aGUgYCR0eXBlYCBwcm9wZXJ0eVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHlwZShvYmplY3Q6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgcmV0dXJuIGd0a1R5cGUgaW4gb2JqZWN0ID8gKG9iamVjdFtndGtUeXBlXSBhcyBzdHJpbmcpIDogbnVsbFxufVxuXG4vKipcbiAqIEZ1bmN0aW9uIENvbXBvbmVudCBQcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCB0eXBlIEZDUHJvcHM8U2VsZiwgUHJvcHM+ID0gUHJvcHMgJiB7XG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIGFzIGEgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG4gICAgLyoqXG4gICAgICogc2V0dXAgZnVuY3Rpb25cbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCBhcyBhIHBhcmFtZXRlcnNcbiAgICAgKi9cbiAgICAkPyhzZWxmOiBTZWxmKTogdm9pZFxufVxuXG4vKipcbiAqIENsYXNzIENvbXBvbmVudCBQcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCB0eXBlIENDUHJvcHM8U2VsZiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQcm9wcz4gPSB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsIGNoaWxkcmVuIGVsZW1lbnRzXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgIGNoaWxkcmVuPzogQXJyYXk8Tm9kZT4gfCBOb2RlXG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuICAgIC8qKlxuICAgICAqIGZ1bmN0aW9uIHRvIHVzZSBhcyBhIGNvbnN0cnVjdG9yLFxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkY29uc3RydWN0b3I/KHByb3BzOiBQYXJ0aWFsPFByb3BzPik6IFNlbGZcbiAgICAvKipcbiAgICAgKiBzZXR1cCBmdW5jdGlvbixcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJD8oc2VsZjogU2VsZik6IHZvaWRcbiAgICAvKipcbiAgICAgKiBDU1MgY2xhc3MgbmFtZXNcbiAgICAgKi9cbiAgICBjbGFzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbiAgICAvKipcbiAgICAgKiBpbmxpbmUgQ1NTXG4gICAgICovXG4gICAgY3NzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBQcm9wc106IEFjY2Vzc29yPE5vbk51bGxhYmxlPFByb3BzW0tdPj4gfCBQcm9wc1tLXVxufSAmIHtcbiAgICBbUyBpbiBrZXlvZiBTZWxmW1wiJHNpZ25hbHNcIl0gYXMgUyBleHRlbmRzIGBub3RpZnk6OiR7aW5mZXIgUH1gXG4gICAgICAgID8gYG9uTm90aWZ5JHtQYXNjYWxpZnk8UD59YFxuICAgICAgICA6IFMgZXh0ZW5kcyBgJHtpbmZlciBFfTo6JHtpbmZlciBEfWBcbiAgICAgICAgICA/IGBvbiR7UGFzY2FsaWZ5PGAke0V9OiR7RH1gPn1gXG4gICAgICAgICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgICAgICA/IGBvbiR7UGFzY2FsaWZ5PFM+fWBcbiAgICAgICAgICAgIDogbmV2ZXJdPzogR09iamVjdC5TaWduYWxDYWxsYmFjazxTZWxmLCBTZWxmW1wiJHNpZ25hbHNcIl1bU10+XG59XG5cbi8vIHByZXR0aWVyLWlnbm9yZVxudHlwZSBKc3hQcm9wczxDLCBQcm9wcz4gPVxuICAgIEMgZXh0ZW5kcyB0eXBlb2YgRnJhZ21lbnQgPyAoUHJvcHMgJiB7fSlcbiAgICAvLyBpbnRyaW5zaWNFbGVtZW50cyBhbHdheXMgcmVzb2x2ZSBhcyBGQ1xuICAgIC8vIHNvIHdlIGNhbid0IG5hcnJvdyBpdCBkb3duLCBhbmQgaW4gc29tZSBjYXNlc1xuICAgIC8vIHRoZSBzZXR1cCBmdW5jdGlvbiBpcyB0eXBlZCBhcyBhIHVuaW9uIG9mIE9iamVjdCBhbmQgYWN0dWFsIHR5cGVcbiAgICAvLyBhcyBhIGZpeCB1c2VycyBjYW4gYW5kIHNob3VsZCB1c2UgRkNQcm9wc1xuICAgIDogQyBleHRlbmRzIEZDID8gUHJvcHMgJiBPbWl0PEZDUHJvcHM8UmV0dXJuVHlwZTxDPiwgUHJvcHM+LCBcIiRcIj5cbiAgICA6IEMgZXh0ZW5kcyBDQyA/IENDUHJvcHM8SW5zdGFuY2VUeXBlPEM+LCBQcm9wcz5cbiAgICA6IG5ldmVyXG5cbmZ1bmN0aW9uIGlzR09iamVjdEN0b3IoY3RvcjogYW55KTogY3RvciBpcyBDQyB7XG4gICAgcmV0dXJuIGN0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3Rcbn1cblxuZnVuY3Rpb24gaXNGdW5jdGlvbkN0b3IoY3RvcjogYW55KTogY3RvciBpcyBGQyB7XG4gICAgcmV0dXJuIHR5cGVvZiBjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgIWlzR09iamVjdEN0b3IoY3Rvcilcbn1cblxuLy8gb25Ob3RpZnlQcm9wTmFtZSAtPiBub3RpZnk6OnByb3AtbmFtZVxuLy8gb25QYXNjYWxOYW1lOmRldGFpbE5hbWUgLT4gcGFzY2FsLW5hbWU6OmRldGFpbC1uYW1lXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsTmFtZShrZXk6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgY29uc3QgW3NpZywgZGV0YWlsXSA9IGtlYmFiaWZ5KGtleS5zbGljZSgyKSkuc3BsaXQoXCI6XCIpXG5cbiAgICBpZiAoc2lnLnN0YXJ0c1dpdGgoXCJub3RpZnktXCIpKSB7XG4gICAgICAgIHJldHVybiBgbm90aWZ5Ojoke3NpZy5zbGljZSg3KX1gXG4gICAgfVxuXG4gICAgcmV0dXJuIGRldGFpbCA/IGAke3NpZ306OiR7ZGV0YWlsfWAgOiBzaWdcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZShwYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBjaGlsZDogR09iamVjdC5PYmplY3QpIHtcbiAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgcGFyZW50LnJlbW92ZShjaGlsZClcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHJlbW92ZUNoaWxkIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50W3JlbW92ZUNoaWxkXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHBhcmVudFtyZW1vdmVDaGlsZF0oY2hpbGQpXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGVudi5yZW1vdmVDaGlsZChwYXJlbnQsIGNoaWxkKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwZW5kKHBhcmVudDogR09iamVjdC5PYmplY3QsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICBwYXJlbnQuYXBwZW5kKGNoaWxkKVxuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICBhcHBlbmQocGFyZW50LCBjaClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGFwcGVuZEhhbmRsZXIgPSBjaGlsZC5jb25uZWN0KFwiYXBwZW5kXCIsIChfLCBjaCkgPT4ge1xuICAgICAgICAgICAgaWYgKCEoY2ggaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCBhZGQgJHtjaH0gdG8gJHtwYXJlbnR9YCkpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhcHBlbmQocGFyZW50LCBjaClcbiAgICAgICAgfSlcblxuICAgICAgICBjb25zdCByZW1vdmVIYW5kbGVyID0gY2hpbGQuY29ubmVjdChcInJlbW92ZVwiLCAoXywgY2gpID0+IHtcbiAgICAgICAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoVHlwZUVycm9yKGBjYW5ub3QgcmVtb3ZlICR7Y2h9IGZyb20gJHtwYXJlbnR9YCkpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZW1vdmUocGFyZW50LCBjaClcbiAgICAgICAgfSlcblxuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgY2hpbGQuZGlzY29ubmVjdChhcHBlbmRIYW5kbGVyKVxuICAgICAgICAgICAgY2hpbGQuZGlzY29ubmVjdChyZW1vdmVIYW5kbGVyKVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmIChhcHBlbmRDaGlsZCBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudFthcHBlbmRDaGlsZF0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBwYXJlbnRbYXBwZW5kQ2hpbGRdKGNoaWxkLCBnZXRUeXBlKGNoaWxkKSlcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZW52LmFwcGVuZENoaWxkKHBhcmVudCwgY2hpbGQpXG59XG5cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRUeXBlKG9iamVjdDogb2JqZWN0LCB0eXBlOiBzdHJpbmcpIHtcbiAgICBpZiAoZ3RrVHlwZSBpbiBvYmplY3QgJiYgb2JqZWN0W2d0a1R5cGVdICE9PSBcIlwiKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihgdHlwZSBvdmVycmlkZW4gZnJvbSAke29iamVjdFtndGtUeXBlXX0gdG8gJHt0eXBlfSBvbiAke29iamVjdH1gKVxuICAgIH1cblxuICAgIE9iamVjdC5hc3NpZ24ob2JqZWN0LCB7IFtndGtUeXBlXTogdHlwZSB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyAocHJvcHM6IGFueSkgPT4gR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IFQsXG4gICAgcHJvcHM6IEpzeFByb3BzPFQsIFBhcmFtZXRlcnM8VD5bMF0+LFxuKTogUmV0dXJuVHlwZTxUPlxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyBuZXcgKHByb3BzOiBhbnkpID0+IEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBULFxuICAgIHByb3BzOiBKc3hQcm9wczxULCBDb25zdHJ1Y3RvclBhcmFtZXRlcnM8VD5bMF0+LFxuKTogSW5zdGFuY2VUeXBlPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBrZXlvZiAodHlwZW9mIGVudilbXCJpbnRyaW5zaWNFbGVtZW50c1wiXSB8IChuZXcgKHByb3BzOiBhbnkpID0+IFQpIHwgKChwcm9wczogYW55KSA9PiBUKSxcbiAgICBpbnByb3BzOiBhbnksXG4gICAgLy8ga2V5IGlzIGEgc3BlY2lhbCBwcm9wIGluIGpzeCB3aGljaCBpcyBwYXNzZWQgYXMgYSB0aGlyZCBhcmd1bWVudCBhbmQgbm90IGluIHByb3BzXG4gICAga2V5Pzogc3RyaW5nLFxuKTogVCB7XG4gICAgY29uc3QgeyAkLCAkdHlwZSwgJGNvbnN0cnVjdG9yLCBjaGlsZHJlbiwgLi4ucmVzdCB9ID0gaW5wcm9wcyBhcyBDQ1Byb3BzPFQsIGFueT5cbiAgICBjb25zdCBwcm9wcyA9IHJlc3QgYXMgUmVjb3JkPHN0cmluZywgYW55PlxuXG4gICAgaWYgKGtleSkgT2JqZWN0LmFzc2lnbihwcm9wcywgeyBrZXkgfSlcblxuICAgIGNvbnN0IGRlZmVyUHJvcHMgPSBlbnYuaW5pdFByb3BzKGN0b3IsIHByb3BzKSA/PyBbXVxuICAgIGNvbnN0IGRlZmVycmVkUHJvcHM6IFJlY29yZDxzdHJpbmcsIHVua25vd24+ID0ge31cblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZGVsZXRlIHByb3BzW2tleV1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkZWZlclByb3BzLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgICAgIGRlZmVycmVkUHJvcHNba2V5XSA9IHByb3BzW2tleV1cbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGN0b3IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKGN0b3IgaW4gZW52LmludHJpbnNpY0VsZW1lbnRzKSB7XG4gICAgICAgICAgICBjdG9yID0gZW52LmludHJpbnNpY0VsZW1lbnRzW2N0b3JdIGFzIEZDPFQ+IHwgQ0M8VD5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGB1bmtub3duIGludHJpbnNpYyBlbGVtZW50IFwiJHtjdG9yfVwiYClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uQ3RvcihjdG9yKSkge1xuICAgICAgICBjb25zdCBvYmplY3QgPSBjdG9yKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pXG4gICAgICAgIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKVxuICAgICAgICAkPy4ob2JqZWN0KVxuICAgICAgICByZXR1cm4gb2JqZWN0XG4gICAgfVxuXG4gICAgLy8gY29sbGVjdCBjc3MgYW5kIGNsYXNzTmFtZVxuICAgIGNvbnN0IHsgY3NzLCBjbGFzczogY2xhc3NOYW1lIH0gPSBwcm9wc1xuICAgIGRlbGV0ZSBwcm9wcy5jc3NcbiAgICBkZWxldGUgcHJvcHMuY2xhc3NcblxuICAgIGNvbnN0IHNpZ25hbHM6IEFycmF5PFtzdHJpbmcsICguLi5wcm9wczogdW5rbm93bltdKSA9PiB1bmtub3duXT4gPSBbXVxuICAgIGNvbnN0IGJpbmRpbmdzOiBBcnJheTxbc3RyaW5nLCBBY2Nlc3Nvcjx1bmtub3duPl0+ID0gW11cblxuICAgIC8vIGNvbGxlY3Qgc2lnbmFscyBhbmQgYmluZGluZ3NcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcbiAgICAgICAgICAgIHNpZ25hbHMucHVzaChba2V5LCB2YWx1ZSBhcyAoKSA9PiB1bmtub3duXSlcbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGJpbmRpbmdzLnB1c2goW2tleSwgdmFsdWVdKVxuICAgICAgICAgICAgcHJvcHNba2V5XSA9IHZhbHVlLmdldCgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb25zdHJ1Y3RcbiAgICBjb25zdCBvYmplY3QgPSAkY29uc3RydWN0b3IgPyAkY29uc3RydWN0b3IocHJvcHMpIDogbmV3IChjdG9yIGFzIENDPFQ+KShwcm9wcylcbiAgICBpZiAoJGNvbnN0cnVjdG9yKSBPYmplY3QuYXNzaWduKG9iamVjdCwgcHJvcHMpXG4gICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG5cbiAgICBpZiAoY3NzKSBlbnYuc2V0Q3NzKG9iamVjdCwgY3NzKVxuICAgIGlmIChjbGFzc05hbWUpIGVudi5zZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSlcblxuICAgIC8vIGFkZCBjaGlsZHJlblxuICAgIGZvciAobGV0IGNoaWxkIG9mIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dKSB7XG4gICAgICAgIGlmIChjaGlsZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKEVycm9yKFwiVHJ5aW5nIHRvIGFkZCBib29sZWFuIHZhbHVlIG9mIGB0cnVlYCBhcyBhIGNoaWxkLlwiKSlcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZCkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQpIHtcbiAgICAgICAgICAgICAgICBhcHBlbmQob2JqZWN0LCBjaClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChjaGlsZCkge1xuICAgICAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICBjaGlsZCA9IGVudi50ZXh0Tm9kZShjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFwcGVuZChvYmplY3QsIGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gaGFuZGxlIHNpZ25hbHNcbiAgICBjb25zdCBkaXNwb3NlSGFuZGxlcnMgPSBzaWduYWxzLm1hcCgoW3NpZywgaGFuZGxlcl0pID0+IHtcbiAgICAgICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChzaWduYWxOYW1lKHNpZyksIGhhbmRsZXIpXG4gICAgICAgIHJldHVybiAoKSA9PiBvYmplY3QuZGlzY29ubmVjdChpZClcbiAgICB9KVxuXG4gICAgLy8gZGVmZXJyZWQgcHJvcHNcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhkZWZlcnJlZFByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgYmluZGluZ3MucHVzaChba2V5LCB2YWx1ZV0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKG9iamVjdCwgeyBba2V5XTogdmFsdWUgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGhhbmRsZSBiaW5kaW5nc1xuICAgIGNvbnN0IGRpc3Bvc2VCaW5kaW5ncyA9IGJpbmRpbmdzLm1hcCgoW3Byb3AsIGJpbmRpbmddKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBiaW5kaW5nLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgICAgICB9KVxuICAgICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgICAgICByZXR1cm4gZGlzcG9zZVxuICAgIH0pXG5cbiAgICAvLyBjbGVhbnVwXG4gICAgaWYgKGRpc3Bvc2VCaW5kaW5ncy5sZW5ndGggPiAwIHx8IGRpc3Bvc2VIYW5kbGVycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICBkaXNwb3NlSGFuZGxlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICBkaXNwb3NlQmluZGluZ3MuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgJD8uKG9iamVjdClcbiAgICByZXR1cm4gb2JqZWN0XG59XG5cbi8vIFRPRE86IG1ha2UgdXNlIG9mIGpzeHNcbmV4cG9ydCBjb25zdCBqc3hzID0ganN4XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZVxuICAgIG5hbWVzcGFjZSBKU1gge1xuICAgICAgICB0eXBlIEVsZW1lbnRUeXBlID0ga2V5b2YgSW50cmluc2ljRWxlbWVudHMgfCBGQyB8IENDXG4gICAgICAgIHR5cGUgRWxlbWVudCA9IEdPYmplY3QuT2JqZWN0XG4gICAgICAgIHR5cGUgRWxlbWVudENsYXNzID0gR09iamVjdC5PYmplY3RcblxuICAgICAgICB0eXBlIExpYnJhcnlNYW5hZ2VkQXR0cmlidXRlczxDLCBQcm9wcz4gPSBKc3hQcm9wczxDLCBQcm9wcz4gJiB7XG4gICAgICAgICAgICAvLyBGSVhNRTogd2h5IGRvZXMgYW4gaW50cmluc2ljIGVsZW1lbnQgYWx3YXlzIHJlc29sdmUgYXMgRkM/XG4gICAgICAgICAgICAvLyBfX3R5cGU/OiBDIGV4dGVuZHMgQ0MgPyBcIkNDXCIgOiBDIGV4dGVuZHMgRkMgPyBcIkZDXCIgOiBuZXZlclxuICAgICAgICB9XG5cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICBpbnRlcmZhY2UgSW50cmluc2ljRWxlbWVudHMge1xuICAgICAgICAgICAgLy8gY2M6IENDUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzLCBHdGsuQm94LlNpZ25hbFNpZ25hdHVyZXM+XG4gICAgICAgICAgICAvLyBmYzogRkNQcm9wczxHdGsuV2lkZ2V0LCBGblByb3BzPlxuICAgICAgICB9XG5cbiAgICAgICAgaW50ZXJmYWNlIEVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LW9iamVjdC10eXBlXG4gICAgICAgICAgICBjaGlsZHJlbjoge31cbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcblxuaW50ZXJmYWNlIEZyYWdtZW50U2lnbmFsczxUPiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LlNpZ25hbFNpZ25hdHVyZXMge1xuICAgIGFwcGVuZDogKGNoaWxkOiBUKSA9PiB2b2lkXG4gICAgcmVtb3ZlOiAoY2hpbGQ6IFQpID0+IHZvaWRcbn1cblxuZXhwb3J0IGNsYXNzIEZyYWdtZW50PFQgPSBhbnk+IGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICAgIGRlY2xhcmUgJHNpZ25hbHM6IEZyYWdtZW50U2lnbmFsczxUPlxuXG4gICAgc3RhdGljIFtHT2JqZWN0LnNpZ25hbHNdID0ge1xuICAgICAgICBhcHBlbmQ6IHsgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNUXSB9LFxuICAgICAgICByZW1vdmU6IHsgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNUXSB9LFxuICAgIH1cblxuICAgIHN0YXRpYyBbR09iamVjdC5wcm9wZXJ0aWVzXSA9IHtcbiAgICAgICAgY2hpbGRyZW46IEdPYmplY3QuUGFyYW1TcGVjLmpzb2JqZWN0KFwiY2hpbGRyZW5cIiwgXCJcIiwgXCJcIiwgR09iamVjdC5QYXJhbUZsYWdzLlJFQURBQkxFKSxcbiAgICB9XG5cbiAgICBzdGF0aWMge1xuICAgICAgICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3ModGhpcylcbiAgICB9XG5cbiAgICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHlpZWxkKiB0aGlzLl9jaGlsZHJlblxuICAgIH1cblxuICAgIHByaXZhdGUgX2NoaWxkcmVuOiBBcnJheTxUPlxuXG4gICAgYXBwZW5kKGNoaWxkOiBUKTogdm9pZCB7XG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgbmVzdGluZyBGcmFnbWVudHMgYXJlIG5vdCB5ZXQgc3VwcG9ydGVkYClcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuLnB1c2goY2hpbGQpXG4gICAgICAgIHRoaXMuZW1pdChcImFwcGVuZFwiLCBjaGlsZClcbiAgICAgICAgdGhpcy5ub3RpZnkoXCJjaGlsZHJlblwiKVxuICAgIH1cblxuICAgIHJlbW92ZShjaGlsZDogVCk6IHZvaWQge1xuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuX2NoaWxkcmVuLmZpbmRJbmRleCgoaSkgPT4gaSA9PT0gY2hpbGQpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuLnNwbGljZShpbmRleCwgMSlcblxuICAgICAgICB0aGlzLmVtaXQoXCJyZW1vdmVcIiwgY2hpbGQpXG4gICAgICAgIHRoaXMubm90aWZ5KFwiY2hpbGRyZW5cIilcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcih7IGNoaWxkcmVuID0gW10gfTogUGFydGlhbDx7IGNoaWxkcmVuOiBBcnJheTxUPiB8IFQgfT4gPSB7fSkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuID0gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl1cbiAgICB9XG5cbiAgICBjb25uZWN0PFMgZXh0ZW5kcyBrZXlvZiBGcmFnbWVudFNpZ25hbHM8VD4+KFxuICAgICAgICBzaWduYWw6IFMsXG4gICAgICAgIGNhbGxiYWNrOiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPHRoaXMsIEZyYWdtZW50U2lnbmFsczxUPltTXT4sXG4gICAgKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaylcbiAgICB9XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpb1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IHR5cGUgUGFzY2FsaWZ5LCBjYW1lbGlmeSwga2ViYWJpZnkgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgdHlwZSB7IERlZXBJbmZlciwgUmVjdXJzaXZlSW5mZXIgfSBmcm9tIFwiLi4vdmFyaWFudC5qc1wiXG5cbnR5cGUgU3Vic2NyaWJlQ2FsbGJhY2sgPSAoKSA9PiB2b2lkXG50eXBlIERpc3Bvc2VGdW5jdGlvbiA9ICgpID0+IHZvaWRcbnR5cGUgU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKSA9PiBEaXNwb3NlRnVuY3Rpb25cblxuZXhwb3J0IHR5cGUgQWNjZXNzZWQ8VD4gPSBUIGV4dGVuZHMgQWNjZXNzb3I8aW5mZXIgVj4gPyBWIDogbmV2ZXJcblxuY29uc3QgZW1wdHkgPSBTeW1ib2woXCJlbXB0eSBjb21wdXRlZCB2YWx1ZVwiKVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1kZWNsYXJhdGlvbi1tZXJnaW5nXG5leHBvcnQgY2xhc3MgQWNjZXNzb3I8VCA9IHVua25vd24+IGV4dGVuZHMgRnVuY3Rpb24ge1xuICAgIHN0YXRpYyAkZ3R5cGUgPSBHT2JqZWN0LlRZUEVfSlNPQkpFQ1QgYXMgdW5rbm93biBhcyBHT2JqZWN0LkdUeXBlPEFjY2Vzc29yPlxuXG4gICAgI2dldDogKCkgPT4gVFxuICAgICNzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uXG5cbiAgICBjb25zdHJ1Y3RvcihnZXQ6ICgpID0+IFQsIHN1YnNjcmliZT86IFN1YnNjcmliZUZ1bmN0aW9uKSB7XG4gICAgICAgIHN1cGVyKFwicmV0dXJuIGFyZ3VtZW50cy5jYWxsZWUuX2NhbGwuYXBwbHkoYXJndW1lbnRzLmNhbGxlZSwgYXJndW1lbnRzKVwiKVxuICAgICAgICB0aGlzLiNzdWJzY3JpYmUgPSBzdWJzY3JpYmUgPz8gKCgpID0+ICgpID0+IHZvaWQgMClcbiAgICAgICAgdGhpcy4jZ2V0ID0gZ2V0XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3Vic2NyaWJlIGZvciB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnQgdmFsdWUgY2hhbmdlcy5cbiAgICAgKiBAcmV0dXJucyBVbnN1YnNjcmliZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBzdWJzY3JpYmUoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKTogRGlzcG9zZUZ1bmN0aW9uIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI3N1YnNjcmliZShjYWxsYmFjaylcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyBUaGUgY3VycmVudCB2YWx1ZS5cbiAgICAgKi9cbiAgICBnZXQoKTogVCB7XG4gICAgICAgIHJldHVybiB0aGlzLiNnZXQoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBgQWNjZXNzb3JgIHRoYXQgYXBwbGllcyBhIHRyYW5zZm9ybWF0aW9uIG9uIGl0cyB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBhczxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPiB7XG4gICAgICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gdHJhbnNmb3JtKHRoaXMuI2dldCgpKSwgdGhpcy4jc3Vic2NyaWJlKVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBfY2FsbDxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPiB7XG4gICAgICAgIGxldCB2YWx1ZTogdHlwZW9mIGVtcHR5IHwgUiA9IGVtcHR5XG4gICAgICAgIGxldCB1bnN1YjogRGlzcG9zZUZ1bmN0aW9uXG5cbiAgICAgICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG5cbiAgICAgICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB1bnN1YiA9IHRoaXMuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSB0cmFuc2Zvcm0odGhpcy5nZXQoKSlcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gZW1wdHlcbiAgICAgICAgICAgICAgICAgICAgdW5zdWIoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGdldCA9ICgpOiBSID0+IHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSAhPT0gZW1wdHkgPyB2YWx1ZSA6IHRyYW5zZm9ybSh0aGlzLmdldCgpKVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbiAgICB9XG5cbiAgICB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gYEFjY2Vzc29yPCR7dGhpcy5nZXQoKX0+YFxuICAgIH1cblxuICAgIFtTeW1ib2wudG9QcmltaXRpdmVdKCkge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJBY2Nlc3NvciBpbXBsaWNpdGx5IGNvbnZlcnRlZCB0byBhIHByaW1pdGl2ZSB2YWx1ZS5cIilcbiAgICAgICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKVxuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBBY2Nlc3NvcjxUPiB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgY29tcHV0ZWQgYEFjY2Vzc29yYCB0aGF0IGNhY2hlcyBpdHMgdHJhbnNmb3JtZWQgdmFsdWUuXG4gICAgICogQHBhcmFtIHRyYW5zZm9ybSBUaGUgdHJhbnNmb3JtYXRpb24gdG8gYXBwbHkuIFNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24uXG4gICAgICogc2VlIHtAbGluayBjcmVhdGVDb21wdXRlZH0gYW5kIHtAbGluayBjcmVhdGVDb21wdXRlZFByb2R1Y2VyfVxuICAgICAqL1xuICAgIDxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPlxufVxuXG5leHBvcnQgdHlwZSBTZXR0ZXI8VD4gPSB7XG4gICAgKHZhbHVlOiBUKTogdm9pZFxuICAgICh2YWx1ZTogKHByZXY6IFQpID0+IFQpOiB2b2lkXG59XG5cbmV4cG9ydCB0eXBlIFN0YXRlPFQ+ID0gW0FjY2Vzc29yPFQ+LCBTZXR0ZXI8VD5dXG5cbi8qKlxuICogQ3JlYXRlIGEgd3JpdGFibGUgc2lnbmFsLlxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbnRpYWwgdmFsdWUgb2YgdGhlIHNpZ25hbFxuICogQHJldHVybnMgQW4gYEFjY2Vzc29yYCBhbmQgYSBzZXR0ZXIgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0YXRlPFQ+KGluaXQ6IFQpOiBTdGF0ZTxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuICAgICAgICByZXR1cm4gKCkgPT4gc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIGNvbnN0IHNldCA9IChuZXdWYWx1ZTogdW5rbm93bikgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZTogVCA9IHR5cGVvZiBuZXdWYWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gbmV3VmFsdWUoY3VycmVudFZhbHVlKSA6IG5ld1ZhbHVlXG4gICAgICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICBjdXJyZW50VmFsdWUgPSB2YWx1ZVxuICAgICAgICAgICAgLy8gcnVubmluZyBjYWxsYmFja3MgbWlnaHQgbXV0YXRlIHN1YnNjcmliZXJzXG4gICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBbbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKSwgc2V0IGFzIFNldHRlcjxUPl1cbn1cblxuZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWRQcm9kdWNlcjxUPihmbjogKHRyYWNrOiA8Vj4oc2lnbmFsOiBBY2Nlc3NvcjxWPikgPT4gVikgPT4gVCk6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgdmFsdWU6IHR5cGVvZiBlbXB0eSB8IFQgPSBlbXB0eVxuICAgIGxldCBwcmV2RGVwcyA9IG5ldyBNYXA8QWNjZXNzb3IsIERpc3Bvc2VGdW5jdGlvbj4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3QgY2FjaGUgPSBuZXcgTWFwPEFjY2Vzc29yLCB1bmtub3duPigpXG5cbiAgICBjb25zdCBlZmZlY3QgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGRlcHMgPSBuZXcgU2V0PEFjY2Vzc29yPigpXG4gICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gZm4oKHYpID0+IHtcbiAgICAgICAgICAgIGRlcHMuYWRkKHYpXG4gICAgICAgICAgICByZXR1cm4gKGNhY2hlLmdldCh2KSBhcyBhbnkpIHx8IHYuZ2V0KClcbiAgICAgICAgfSlcblxuICAgICAgICBjb25zdCBkaWRDaGFuZ2UgPSB2YWx1ZSAhPT0gbmV3VmFsdWVcbiAgICAgICAgdmFsdWUgPSBuZXdWYWx1ZVxuXG4gICAgICAgIGNvbnN0IG5ld0RlcHMgPSBuZXcgTWFwPEFjY2Vzc29yLCBEaXNwb3NlRnVuY3Rpb24+KClcblxuICAgICAgICBmb3IgKGNvbnN0IFtkZXAsIHVuc3ViXSBvZiBwcmV2RGVwcykge1xuICAgICAgICAgICAgaWYgKCFkZXBzLmhhcyhkZXApKSB7XG4gICAgICAgICAgICAgICAgdW5zdWIoKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBuZXdEZXBzLnNldChkZXAsIHVuc3ViKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yIChjb25zdCBkZXAgb2YgZGVwcykge1xuICAgICAgICAgICAgaWYgKCFuZXdEZXBzLmhhcyhkZXApKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGRlcC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgICAgICAgICBpZiAoY2FjaGUuZ2V0KGRlcCkgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWNoZS5zZXQoZGVwLCB2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGVmZmVjdCgpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIG5ld0RlcHMuc2V0KGRlcCwgZGlzcG9zZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByZXZEZXBzID0gbmV3RGVwc1xuICAgICAgICBpZiAoZGlkQ2hhbmdlKSB7XG4gICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGVmZmVjdCgpXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBlbXB0eVxuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgWywgdW5zdWJdIG9mIHByZXZEZXBzKSB7XG4gICAgICAgICAgICAgICAgICAgIHVuc3ViKClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogVCA9PiB7XG4gICAgICAgIHJldHVybiB2YWx1ZSAhPT0gZW1wdHkgPyB2YWx1ZSA6IGZuKCh2KSA9PiB2LmdldCgpKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkQXJnczxcbiAgICBjb25zdCBEZXBzIGV4dGVuZHMgQXJyYXk8QWNjZXNzb3I8YW55Pj4sXG4gICAgQXJncyBleHRlbmRzIHsgW0sgaW4ga2V5b2YgRGVwc106IEFjY2Vzc2VkPERlcHNbS10+IH0sXG4gICAgViA9IEFyZ3MsXG4+KGRlcHM6IERlcHMsIHRyYW5zZm9ybT86ICguLi5hcmdzOiBBcmdzKSA9PiBWKTogQWNjZXNzb3I8Vj4ge1xuICAgIGxldCBkaXNwb3NlOiBBcnJheTxEaXNwb3NlRnVuY3Rpb24+XG4gICAgbGV0IHZhbHVlOiB0eXBlb2YgZW1wdHkgfCBWID0gZW1wdHlcblxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IGNhY2hlID0gbmV3IEFycmF5PHVua25vd24+KGRlcHMubGVuZ3RoKVxuXG4gICAgY29uc3QgY29tcHV0ZSA9ICgpOiBWID0+IHtcbiAgICAgICAgY29uc3QgYXJncyA9IGRlcHMubWFwKChkZXAsIGkpID0+IHtcbiAgICAgICAgICAgIGlmICghY2FjaGVbaV0pIHtcbiAgICAgICAgICAgICAgICBjYWNoZVtpXSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVbaV1cbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gdHJhbnNmb3JtID8gdHJhbnNmb3JtKC4uLihhcmdzIGFzIEFyZ3MpKSA6IChhcmdzIGFzIFYpXG4gICAgfVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IGRlcHMubWFwKChkZXAsIGkpID0+XG4gICAgICAgICAgICAgICAgZGVwLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZVtpXSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlW2ldID0gZGVwLmdldCgpXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gY29tcHV0ZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICApXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBlbXB0eVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubWFwKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgICAgICBjYWNoZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogViA9PiB7XG4gICAgICAgIHJldHVybiB2YWx1ZSAhPT0gZW1wdHkgPyB2YWx1ZSA6IGNvbXB1dGUoKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgZnJvbSBhIHByb2R1Y2VyIGZ1bmN0aW9uIHRoYXQgdHJhY2tzIGl0cyBkZXBlbmRlbmNpZXMuXG4gKlxuICogYGBgdHMgRXhhbXBsZVxuICogbGV0IGE6IEFjY2Vzc29yPG51bWJlcj5cbiAqIGxldCBiOiBBY2Nlc3NvcjxudW1iZXI+XG4gKiBjb25zdCBjOiBBY2Nlc3NvcjxudW1iZXI+ID0gY3JlYXRlQ29tcHV0ZWQoKGdldCkgPT4gZ2V0KGEpICsgZ2V0KGIpKVxuICogYGBgXG4gKlxuICogQGV4cGVyaW1lbnRhbFxuICogQHBhcmFtIHByb2R1Y2VyIFRoZSBwcm9kdWNlciBmdW5jdGlvbiB3aGljaCBsZXQncyB5b3UgdHJhY2sgZGVwZW5kZW5jaWVzXG4gKiBAcmV0dXJucyBUaGUgY29tcHV0ZWQgYEFjY2Vzc29yYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkPFQ+KFxuICAgIHByb2R1Y2VyOiAodHJhY2s6IDxWPihzaWduYWw6IEFjY2Vzc29yPFY+KSA9PiBWKSA9PiBULFxuKTogQWNjZXNzb3I8VD5cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBpcyBjb21wdXRlZCBmcm9tIGEgbGlzdCBvZiBnaXZlbiBgQWNjZXNzb3Jgcy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBsZXQgYTogQWNjZXNzb3I8bnVtYmVyPlxuICogbGV0IGI6IEFjY2Vzc29yPHN0cmluZz5cbiAqIGNvbnN0IGM6IEFjY2Vzc29yPFtudW1iZXIsIHN0cmluZ10+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdKVxuICogY29uc3QgZDogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbXB1dGVkKFthLCBiXSwgKGE6IG51bWJlciwgYjogc3RyaW5nKSA9PiBgJHthfSAke2J9YClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBkZXBzIExpc3Qgb2YgYEFjY2Vzc29yc2AuXG4gKiBAcGFyYW0gdHJhbnNmb3JtIEFuIG9wdGlvbmFsIHRyYW5zZm9ybSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBjb21wdXRlZCBgQWNjZXNzb3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQ8XG4gICAgY29uc3QgRGVwcyBleHRlbmRzIEFycmF5PEFjY2Vzc29yPGFueT4+LFxuICAgIEFyZ3MgZXh0ZW5kcyB7IFtLIGluIGtleW9mIERlcHNdOiBBY2Nlc3NlZDxEZXBzW0tdPiB9LFxuICAgIFQgPSBBcmdzLFxuPihkZXBzOiBEZXBzLCB0cmFuc2Zvcm0/OiAoLi4uYXJnczogQXJncykgPT4gVCk6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wdXRlZChcbiAgICAuLi5hcmdzOlxuICAgICAgICB8IFtwcm9kdWNlcjogKHRyYWNrOiA8Vj4oc2lnbmFsOiBBY2Nlc3NvcjxWPikgPT4gVikgPT4gdW5rbm93bl1cbiAgICAgICAgfCBbZGVwczogQXJyYXk8QWNjZXNzb3I+LCB0cmFuc2Zvcm0/OiAoLi4uYXJnczogdW5rbm93bltdKSA9PiB1bmtub3duXVxuKSB7XG4gICAgY29uc3QgW2RlcHNPclByb2R1Y2VyLCB0cmFuc2Zvcm1dID0gYXJnc1xuICAgIGlmICh0eXBlb2YgZGVwc09yUHJvZHVjZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29tcHV0ZWRQcm9kdWNlcihkZXBzT3JQcm9kdWNlcilcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29tcHV0ZWRBcmdzKGRlcHNPclByb2R1Y2VyLCB0cmFuc2Zvcm0pXG4gICAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdPYmplY3QuT2JqZWN0YCdzIGBwcm9wZXJ0eWAuXG4gKlxuICogQHBhcmFtIG9iamVjdCBUaGUgYEdPYmplY3QuT2JqZWN0YCB0byBjcmVhdGUgdGhlIGBBY2Nlc3NvcmAgb24uXG4gKiBAcGFyYW0gcHJvcGVydHkgT25lIG9mIGl0cyByZWdpc3RlcmVkIHByb3BlcnRpZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCwgUCBleHRlbmRzIGtleW9mIFQ+KFxuICAgIG9iamVjdDogVCxcbiAgICBwcm9wZXJ0eTogRXh0cmFjdDxQLCBzdHJpbmc+LFxuKTogQWNjZXNzb3I8VFtQXT5cblxuLy8gVE9ETzogc3VwcG9ydCBuZXN0ZWQgYmluZGluZ3Ncbi8vIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFxuLy8gICAgIFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbi8vICAgICBQMSBleHRlbmRzIGtleW9mIFQsXG4vLyAgICAgUDIgZXh0ZW5kcyBrZXlvZiBOb25OdWxsYWJsZTxUW1AxXT4sXG4vLyA+KFxuLy8gICAgIG9iamVjdDogVCxcbi8vICAgICBwcm9wZXJ0eTE6IEV4dHJhY3Q8UDEsIHN0cmluZz4sXG4vLyAgICAgcHJvcGVydHkyOiBFeHRyYWN0PFAyLCBzdHJpbmc+LFxuLy8gKTogQWNjZXNzb3I8Tm9uTnVsbGFibGU8VFtQMV0+W1AyXT5cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCBvbiBhIGBHaW8uU2V0dGluZ3NgJ3MgYGtleWAuXG4gKiBWYWx1ZXMgYXJlIHJlY3Vyc2l2ZWx5IHVucGFja2VkLlxuICpcbiAqIEBkZXByZWNhdGVkIHByZWZlciB1c2luZyB7QGxpbmsgY3JlYXRlU2V0dGluZ3N9LlxuICogQHBhcmFtIG9iamVjdCBUaGUgYEdpby5TZXR0aW5nc2AgdG8gY3JlYXRlIHRoZSBgQWNjZXNzb3JgIG9uLlxuICogQHBhcmFtIGtleSBUaGUgc2V0dGluZ3Mga2V5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQ+KHNldHRpbmdzOiBHaW8uU2V0dGluZ3MsIGtleTogc3RyaW5nKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VD4ob2JqZWN0OiBHT2JqZWN0Lk9iamVjdCB8IEdpby5TZXR0aW5ncywga2V5OiBzdHJpbmcpOiBBY2Nlc3NvcjxUPiB7XG4gICAgY29uc3QgcHJvcCA9IGtlYmFiaWZ5KGtleSkgYXMga2V5b2YgdHlwZW9mIG9iamVjdFxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBjb25zdCBzaWcgPSBvYmplY3QgaW5zdGFuY2VvZiBHaW8uU2V0dGluZ3MgPyBcImNoYW5nZWRcIiA6IFwibm90aWZ5XCJcbiAgICAgICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChgJHtzaWd9Ojoke3Byb3B9YCwgKCkgPT4gY2FsbGJhY2soKSlcbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBUID0+IHtcbiAgICAgICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncykge1xuICAgICAgICAgICAgcmV0dXJuIG9iamVjdC5nZXRfdmFsdWUoa2V5KS5yZWN1cnNpdmVVbnBhY2soKSBhcyBUXG4gICAgICAgIH1cblxuICAgICAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpIHtcbiAgICAgICAgICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtwcm9wLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gIGFzIGtleW9mIHR5cGVvZiBvYmplY3RcblxuICAgICAgICAgICAgaWYgKGdldHRlciBpbiBvYmplY3QgJiYgdHlwZW9mIG9iamVjdFtnZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKG9iamVjdFtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKCkgYXMgVFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvcCBpbiBvYmplY3QpIHJldHVybiBvYmplY3RbcHJvcF0gYXMgVFxuICAgICAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHJldHVybiBvYmplY3Rba2V5IGFzIGtleW9mIHR5cGVvZiBvYmplY3RdIGFzIFRcbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgZ2V0IHByb3BlcnR5IFwiJHtrZXl9XCIgb24gXCIke29iamVjdH1cImApXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbn1cblxudHlwZSBDb25uZWN0aW9uSGFuZGxlcjxcbiAgICBPIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUyBleHRlbmRzIGtleW9mIE9bXCIkc2lnbmFsc1wiXSxcbiAgICBULFxuPiA9IE9bXCIkc2lnbmFsc1wiXVtTXSBleHRlbmRzICguLi5hcmdzOiBhbnlbXSkgPT4gaW5mZXIgUlxuICAgID8gdm9pZCBleHRlbmRzIFJcbiAgICAgICAgPyAoLi4uYXJnczogWy4uLlBhcmFtZXRlcnM8T1tcIiRzaWduYWxzXCJdW1NdPiwgY3VycmVudFZhbHVlOiBUXSkgPT4gVFxuICAgICAgICA6IG5ldmVyXG4gICAgOiBuZXZlclxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIHdoaWNoIHNldHMgdXAgYSBsaXN0IG9mIGBHT2JqZWN0Lk9iamVjdGAgc2lnbmFsIGNvbm5lY3Rpb25zLlxuICpcbiAqIGBgYHRzIEV4YW1wbGVcbiAqIGNvbnN0IHZhbHVlOiBBY2Nlc3NvcjxzdHJpbmc+ID0gY3JlYXRlQ29ubmVjdGlvbihcbiAqICAgXCJpbml0aWFsIHZhbHVlXCIsXG4gKiAgIFtvYmoxLCBcInNpZy1uYW1lXCIsICguLi5hcmdzKSA9PiBcInN0clwiXSxcbiAqICAgW29iajIsIFwic2lnLW5hbWVcIiwgKC4uLmFyZ3MpID0+IFwic3RyXCJdXG4gKiApXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHNpZ25hbHMgQSBsaXN0IG9mIGBHT2JqZWN0Lk9iamVjdGAsIHNpZ25hbCBuYW1lIGFuZCBjYWxsYmFjayBwYWlycyB0byBjb25uZWN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29ubmVjdGlvbjxcbiAgICBULFxuICAgIE8xIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzEgZXh0ZW5kcyBrZXlvZiBPMVtcIiRzaWduYWxzXCJdLFxuICAgIE8yIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzIgZXh0ZW5kcyBrZXlvZiBPMltcIiRzaWduYWxzXCJdLFxuICAgIE8zIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzMgZXh0ZW5kcyBrZXlvZiBPM1tcIiRzaWduYWxzXCJdLFxuICAgIE80IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzQgZXh0ZW5kcyBrZXlvZiBPNFtcIiRzaWduYWxzXCJdLFxuICAgIE81IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzUgZXh0ZW5kcyBrZXlvZiBPNVtcIiRzaWduYWxzXCJdLFxuICAgIE82IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzYgZXh0ZW5kcyBrZXlvZiBPNltcIiRzaWduYWxzXCJdLFxuICAgIE83IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzcgZXh0ZW5kcyBrZXlvZiBPN1tcIiRzaWduYWxzXCJdLFxuICAgIE84IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzggZXh0ZW5kcyBrZXlvZiBPOFtcIiRzaWduYWxzXCJdLFxuICAgIE85IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzkgZXh0ZW5kcyBrZXlvZiBPOVtcIiRzaWduYWxzXCJdLFxuPihcbiAgICBpbml0OiBULFxuICAgIGgxOiBbTzEsIFMxLCBDb25uZWN0aW9uSGFuZGxlcjxPMSwgUzEsIFQ+XSxcbiAgICBoMj86IFtPMiwgUzIsIENvbm5lY3Rpb25IYW5kbGVyPE8yLCBTMiwgVD5dLFxuICAgIGgzPzogW08zLCBTMywgQ29ubmVjdGlvbkhhbmRsZXI8TzMsIFMzLCBUPl0sXG4gICAgaDQ/OiBbTzQsIFM0LCBDb25uZWN0aW9uSGFuZGxlcjxPNCwgUzQsIFQ+XSxcbiAgICBoNT86IFtPNSwgUzUsIENvbm5lY3Rpb25IYW5kbGVyPE81LCBTNSwgVD5dLFxuICAgIGg2PzogW082LCBTNiwgQ29ubmVjdGlvbkhhbmRsZXI8TzYsIFM2LCBUPl0sXG4gICAgaDc/OiBbTzcsIFM3LCBDb25uZWN0aW9uSGFuZGxlcjxPNywgUzcsIFQ+XSxcbiAgICBoOD86IFtPOCwgUzgsIENvbm5lY3Rpb25IYW5kbGVyPE84LCBTOCwgVD5dLFxuICAgIGg5PzogW085LCBTOSwgQ29ubmVjdGlvbkhhbmRsZXI8TzksIFM5LCBUPl0sXG4pIHtcbiAgICBsZXQgdmFsdWUgPSBpbml0XG4gICAgbGV0IGRpc3Bvc2U6IEFycmF5PERpc3Bvc2VGdW5jdGlvbj5cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcbiAgICBjb25zdCBzaWduYWxzID0gW2gxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIGg3LCBoOCwgaDldLmZpbHRlcigoaCkgPT4gaCAhPT0gdW5kZWZpbmVkKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IHNpZ25hbHMubWFwKChbb2JqZWN0LCBzaWduYWwsIGNhbGxiYWNrXSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gR09iamVjdC5PYmplY3QucHJvdG90eXBlLmNvbm5lY3QuY2FsbChcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LFxuICAgICAgICAgICAgICAgICAgICBzaWduYWwgYXMgc3RyaW5nLFxuICAgICAgICAgICAgICAgICAgICAoXywgLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSBjYWxsYmFjayguLi5hcmdzLCB2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuICgpID0+IEdPYmplY3QuT2JqZWN0LnByb3RvdHlwZS5kaXNjb25uZWN0LmNhbGwob2JqZWN0LCBpZClcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZS5tYXAoKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubGVuZ3RoID0gMFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiB2YWx1ZSwgc3Vic2NyaWJlKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHNpZ25hbCBmcm9tIGEgcHJvdmllciBmdW5jdGlvbi5cbiAqIFRoZSBwcm92aWRlciBpcyBjYWxsZWQgd2hlbiB0aGUgZmlyc3Qgc3Vic2NyaWJlciBhcHBlYXJzIGFuZCB0aGUgcmV0dXJuZWQgZGlzcG9zZVxuICogZnVuY3Rpb24gZnJvbSB0aGUgcHJvdmlkZXIgd2lsbCBiZSBjYWxsZWQgd2hlbiB0aGUgbnVtYmVyIG9mIHN1YnNjcmliZXJzIGRyb3AgdG8gemVyby5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCB2YWx1ZSA9IGNyZWF0ZUV4dGVybmFsKDAsIChzZXQpID0+IHtcbiAqICAgY29uc3QgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiBzZXQoKHYpID0+IHYgKyAxKSlcbiAqICAgcmV0dXJuICgpID0+IGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpXG4gKiB9KVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSBwcm9kdWNlciBUaGUgcHJvZHVjZXIgZnVuY3Rpb24gd2hpY2ggc2hvdWxkIHJldHVybiBhIGNsZWFudXAgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUV4dGVybmFsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgcHJvZHVjZXI6IChzZXQ6IFNldHRlcjxUPikgPT4gRGlzcG9zZUZ1bmN0aW9uLFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IGRpc3Bvc2U6IERpc3Bvc2VGdW5jdGlvblxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IHByb2R1Y2VyKCh2OiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWU6IFQgPSB0eXBlb2YgdiA9PT0gXCJmdW5jdGlvblwiID8gdihjdXJyZW50VmFsdWUpIDogdlxuICAgICAgICAgICAgICAgIGlmIChuZXdWYWx1ZSAhPT0gY3VycmVudFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZSgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKVxufVxuXG4vKiogQGV4cGVyaW1lbnRhbCAqL1xudHlwZSBTZXR0aW5nczxUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4gPSB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBVbmNhcGl0YWxpemU8UGFzY2FsaWZ5PEs+Pl06IEFjY2Vzc29yPFJlY3Vyc2l2ZUluZmVyPFRbS10+PlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBUIGFzIGBzZXQke1Bhc2NhbGlmeTxLPn1gXTogU2V0dGVyPERlZXBJbmZlcjxUW0tdPj5cbn1cblxuLyoqXG4gKiBAZXhwZXJpbWVudGFsXG4gKlxuICogV3JhcCBhIHtAbGluayBHaW8uU2V0dGluZ3N9IGludG8gYSBjb2xsZWN0aW9uIG9mIHNldHRlcnMgYW5kIGFjY2Vzc29ycy5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCBzID0gY3JlYXRlU2V0dGluZ3Moc2V0dGluZ3MsIHtcbiAqICAgXCJjb21wbGV4LWtleVwiOiBcImF7c2F7c3N9fVwiLFxuICogICBcInNpbXBsZS1rZXlcIjogXCJzXCIsXG4gKiB9KVxuICpcbiAqIHMuY29tcGxleEtleS5zdWJzY3JpYmUoKCkgPT4ge1xuICogICBwcmludChzLmNvbXBsZXhLZXkuZ2V0KCkpXG4gKiB9KVxuICpcbiAqIHMuc2V0Q29tcGxleEtleSgocHJldikgPT4gKHtcbiAqICAgLi4ucHJldixcbiAqICAga2V5OiB7IG5lc3RlZDogXCJcIiB9LFxuICogfSkpXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNldHRpbmdzPGNvbnN0IFQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+PihcbiAgICBzZXR0aW5nczogR2lvLlNldHRpbmdzLFxuICAgIGtleXM6IFQsXG4pOiBTZXR0aW5nczxUPiB7XG4gICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhcbiAgICAgICAgT2JqZWN0LmVudHJpZXMoa2V5cykuZmxhdE1hcCgoW2tleSwgdHlwZV0pID0+IFtcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBjYW1lbGlmeShrZXkpLFxuICAgICAgICAgICAgICAgIG5ldyBBY2Nlc3NvcihcbiAgICAgICAgICAgICAgICAgICAgKCkgPT4gc2V0dGluZ3MuZ2V0X3ZhbHVlKGtleSkucmVjdXJzaXZlVW5wYWNrKCksXG4gICAgICAgICAgICAgICAgICAgIChjYWxsYmFjaykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaWQgPSBzZXR0aW5ncy5jb25uZWN0KGBjaGFuZ2VkOjoke2tleX1gLCBjYWxsYmFjaylcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoKSA9PiBzZXR0aW5ncy5kaXNjb25uZWN0KGlkKVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIGBzZXQke2tleVswXS50b1VwcGVyQ2FzZSgpICsgY2FtZWxpZnkoa2V5KS5zbGljZSgxKX1gLFxuICAgICAgICAgICAgICAgICh2OiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNldHRpbmdzLnNldF92YWx1ZShcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBHTGliLlZhcmlhbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlb2YgdiA9PT0gXCJmdW5jdGlvblwiID8gdihzZXR0aW5ncy5nZXRfdmFsdWUoa2V5KS5kZWVwVW5wYWNrKCkpIDogdixcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgXSksXG4gICAgKVxufVxuIiwgImltcG9ydCB0eXBlIEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5cbmV4cG9ydCBmdW5jdGlvbiBrZWJhYmlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDEtJDJcIilcbiAgICAgICAgLnJlcGxhY2VBbGwoXCJfXCIsIFwiLVwiKVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc25ha2VpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhbWVsaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC9bLV9dKC4pL2csIChfLCBjaGFyKSA9PiBjaGFyLnRvVXBwZXJDYXNlKCkpXG59XG5cbmV4cG9ydCB0eXBlIFBhc2NhbGlmeTxTPiA9IFMgZXh0ZW5kcyBgJHtpbmZlciBIZWFkfSR7XCItXCIgfCBcIl9cIn0ke2luZmVyIFRhaWx9YFxuICAgID8gYCR7Q2FwaXRhbGl6ZTxIZWFkPn0ke1Bhc2NhbGlmeTxUYWlsPn1gXG4gICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICA/IENhcGl0YWxpemU8Uz5cbiAgICAgIDogbmV2ZXJcblxuZXhwb3J0IHR5cGUgWG1sTm9kZSA9IHtcbiAgICBuYW1lOiBzdHJpbmdcbiAgICBhdHRyaWJ1dGVzPzogUmVjb3JkPHN0cmluZywgc3RyaW5nPlxuICAgIGNoaWxkcmVuPzogQXJyYXk8WG1sTm9kZT5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHhtbCh7IG5hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuIH06IFhtbE5vZGUpIHtcbiAgICBsZXQgYnVpbGRlciA9IGA8JHtuYW1lfWBcblxuICAgIGNvbnN0IGF0dHJzID0gT2JqZWN0LmVudHJpZXMoYXR0cmlidXRlcyA/PyBbXSlcblxuICAgIGlmIChhdHRycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGF0dHJzKSB7XG4gICAgICAgICAgICBidWlsZGVyICs9IGAgJHtrZXl9PVwiJHt2YWx1ZX1cImBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgIGJ1aWxkZXIgKz0gXCI+XCJcbiAgICAgICAgZm9yIChjb25zdCBub2RlIG9mIGNoaWxkcmVuKSB7XG4gICAgICAgICAgICBidWlsZGVyICs9IHhtbChub2RlKVxuICAgICAgICB9XG4gICAgICAgIGJ1aWxkZXIgKz0gYDwvJHtuYW1lfT5gXG4gICAgfSBlbHNlIHtcbiAgICAgICAgYnVpbGRlciArPSBcIiAvPlwiXG4gICAgfVxuXG4gICAgcmV0dXJuIGJ1aWxkZXJcbn1cblxuLy8gQmluZGluZ3Mgd29yayBvdmVyIHByb3BlcnRpZXMgaW4ga2ViYWItY2FzZSBiZWNhdXNlIHRoYXRzIHRoZSBjb252ZW50aW9uIG9mIGdvYmplY3Rcbi8vIGhvd2V2ZXIgaW4ganMgaXRzIGVpdGhlciBzbmFrZV9jYXNlIG9yIGNhbWVsQ2FzZVxuLy8gYWxzbyBvbiBEQnVzIGludGVyZmFjZXMgaXRzIFBhc2NhbENhc2UgYnkgY29udmVudGlvblxuLy8gc28gYXMgYSB3b3JrYXJvdW5kIHdlIHVzZSBnZXRfcHJvcGVydHlfbmFtZSBhbmQgb25seSB1c2UgdGhlIHByb3BlcnR5IGZpZWxkIGFzIGEgZmFsbGJhY2tcbmV4cG9ydCBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eUdldHRlcjxUIGV4dGVuZHMgb2JqZWN0PihvYmplY3Q6IFQsIHByb3A6IEV4dHJhY3Q8a2V5b2YgVCwgc3RyaW5nPikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIGBnZXRfJHtrZWJhYmlmeShwcm9wKS5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCwge1xuICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogKCkgPT4gb2JqZWN0W3Byb3BdLFxuICAgIH0pXG59XG5cbi8vIGF0dGVtcHQgc2V0dGluZyBhIHByb3BlcnR5IG9mIEdPYmplY3QuT2JqZWN0XG5leHBvcnQgZnVuY3Rpb24gc2V0KG9iajogR09iamVjdC5PYmplY3QsIHByb3A6IHN0cmluZywgdmFsdWU6IGFueSkge1xuICAgIGNvbnN0IGtleSA9IHNuYWtlaWZ5KHByb3ApXG4gICAgY29uc3QgZ2V0dGVyID0gYGdldF8ke2tleX1gIGFzIGtleW9mIHR5cGVvZiBvYmpcbiAgICBjb25zdCBzZXR0ZXIgPSBgc2V0XyR7a2V5fWAgYXMga2V5b2YgdHlwZW9mIG9ialxuXG4gICAgbGV0IGN1cnJlbnQ6IHVua25vd25cblxuICAgIGlmIChnZXR0ZXIgaW4gb2JqICYmIHR5cGVvZiBvYmpbZ2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGN1cnJlbnQgPSAob2JqW2dldHRlcl0gYXMgKCkgPT4gdW5rbm93bikoKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnJlbnQgPSBvYmpbcHJvcCBhcyBrZXlvZiB0eXBlb2Ygb2JqXVxuICAgIH1cblxuICAgIGlmIChjdXJyZW50ICE9PSB2YWx1ZSkge1xuICAgICAgICBpZiAoc2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW3NldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgOyhvYmpbc2V0dGVyXSBhcyAodjogYW55KSA9PiB2b2lkKSh2YWx1ZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob2JqLCB7IFtwcm9wXTogdmFsdWUgfSlcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgdHlwZSBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcblxudHlwZSBHT2JqID0gR09iamVjdC5PYmplY3RcbmV4cG9ydCB0eXBlIENDPFQgZXh0ZW5kcyBHT2JqID0gR09iaj4gPSB7IG5ldyAocHJvcHM6IGFueSk6IFQgfVxuZXhwb3J0IHR5cGUgRkM8VCBleHRlbmRzIEdPYmogPSBHT2JqPiA9IChwcm9wczogYW55KSA9PiBUXG5cbnR5cGUgQ3NzU2V0dGVyID0gKG9iamVjdDogR09iaiwgY3NzOiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+KSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1ZShjb25mOiBQYXJ0aWFsPEpzeEVudj4pIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihlbnYsIGNvbmYpXG59XG5cbnR5cGUgSnN4RW52ID0ge1xuICAgIGludHJpbnNpY0VsZW1lbnRzOiBSZWNvcmQ8c3RyaW5nLCBDQyB8IEZDPlxuICAgIHRleHROb2RlKG5vZGU6IHN0cmluZyB8IG51bWJlcik6IEdPYmpcbiAgICBhcHBlbmRDaGlsZChwYXJlbnQ6IEdPYmosIGNoaWxkOiBHT2JqKTogdm9pZFxuICAgIHJlbW92ZUNoaWxkKHBhcmVudDogR09iaiwgY2hpbGQ6IEdPYmopOiB2b2lkXG4gICAgc2V0Q3NzOiBDc3NTZXR0ZXJcbiAgICBzZXRDbGFzczogQ3NzU2V0dGVyXG4gICAgLy8gc3RyaW5nW10gY2FuIGJlIHVzZSB0byBkZWxheSBzZXR0aW5nIHByb3BzIGFmdGVyIGNoaWxkcmVuXG4gICAgLy8gZS5nIEd0ay5TdGFja1tcInZpc2libGVDaGlsZE5hbWVcIl0gZGVwZW5kcyBvbiBjaGlsZHJlblxuICAgIGluaXRQcm9wcyhjdG9yOiB1bmtub3duLCBwcm9wczogYW55KTogdm9pZCB8IHN0cmluZ1tdXG4gICAgZGVmYXVsdENsZWFudXAob2JqZWN0OiBHT2JqKTogdm9pZFxufVxuXG5mdW5jdGlvbiBtaXNzaW5nSW1wbCgpOiBhbnkge1xuICAgIHRocm93IEVycm9yKFwibWlzc2luZyBpbXBsXCIpXG59XG5cbmV4cG9ydCBjb25zdCBlbnY6IEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czoge30sXG4gICAgdGV4dE5vZGU6IG1pc3NpbmdJbXBsLFxuICAgIGFwcGVuZENoaWxkOiBtaXNzaW5nSW1wbCxcbiAgICByZW1vdmVDaGlsZDogbWlzc2luZ0ltcGwsXG4gICAgc2V0Q3NzOiBtaXNzaW5nSW1wbCxcbiAgICBzZXRDbGFzczogbWlzc2luZ0ltcGwsXG4gICAgaW5pdFByb3BzOiAoKSA9PiB2b2lkIDAsXG4gICAgZGVmYXVsdENsZWFudXA6ICgpID0+IHZvaWQgMCxcbn1cbiIsICJleHBvcnQgY2xhc3MgU2NvcGUge1xuICAgIHN0YXRpYyBjdXJyZW50PzogU2NvcGUgfCBudWxsXG5cbiAgICBwYXJlbnQ/OiBTY29wZSB8IG51bGxcbiAgICBjb250ZXh0cyA9IG5ldyBNYXA8Q29udGV4dCwgdW5rbm93bj4oKVxuXG4gICAgcHJpdmF0ZSBjbGVhbnVwcyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG4gICAgcHJpdmF0ZSBtb3VudGVkID0gZmFsc2VcblxuICAgIGNvbnN0cnVjdG9yKHBhcmVudD86IFNjb3BlIHwgbnVsbCkge1xuICAgICAgICB0aGlzLnBhcmVudCA9IHBhcmVudFxuICAgIH1cblxuICAgIG9uQ2xlYW51cChjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgICAgICB0aGlzLmNsZWFudXBzPy5hZGQoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgb25Nb3VudChjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgICAgICBpZiAodGhpcy5wYXJlbnQgJiYgIXRoaXMucGFyZW50Lm1vdW50ZWQpIHtcbiAgICAgICAgICAgIHRoaXMucGFyZW50Lm9uTW91bnQoY2FsbGJhY2spXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm1vdW50cy5hZGQoY2FsbGJhY2spXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBydW48VD4oZm46ICgpID0+IFQpIHtcbiAgICAgICAgY29uc3QgcHJldiA9IFNjb3BlLmN1cnJlbnRcbiAgICAgICAgU2NvcGUuY3VycmVudCA9IHRoaXNcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGZuKClcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgdGhpcy5tb3VudHMuY2xlYXIoKVxuICAgICAgICAgICAgdGhpcy5tb3VudGVkID0gdHJ1ZVxuICAgICAgICAgICAgU2NvcGUuY3VycmVudCA9IHByZXZcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIHRoaXMuY2xlYW51cHMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIHRoaXMuY2xlYW51cHMuY2xlYXIoKVxuICAgICAgICB0aGlzLmNvbnRleHRzLmNsZWFyKClcbiAgICAgICAgZGVsZXRlIHRoaXMucGFyZW50XG4gICAgfVxufVxuXG5leHBvcnQgdHlwZSBDb250ZXh0PFQgPSBhbnk+ID0ge1xuICAgIHVzZSgpOiBUXG4gICAgcHJvdmlkZTxSPih2YWx1ZTogVCwgZm46ICgpID0+IFIpOiBSXG4gICAgKHByb3BzOiB7IHZhbHVlOiBUOyBjaGlsZHJlbjogKCkgPT4gSlNYLkVsZW1lbnQgfSk6IEpTWC5FbGVtZW50XG59XG5cbi8qKlxuICogRXhhbXBsZSBVc2FnZTpcbiAqIGBgYHRzeFxuICogY29uc3QgTXlDb250ZXh0ID0gY3JlYXRlQ29udGV4dChcImZhbGxiYWNrLXZhbHVlXCIpXG4gKlxuICogZnVuY3Rpb24gQ29uc3VtZXJDb21wb25lbnQoKSB7XG4gKiAgIGNvbnN0IHZhbHVlID0gTXlDb250ZXh0LnVzZSgpXG4gKlxuICogICByZXR1cm4gPEd0ay5MYWJlbCBsYWJlbD17dmFsdWV9IC8+XG4gKiB9XG4gKlxuICogZnVuY3Rpb24gUHJvdmlkZXJDb21wb25lbnQoKSB7XG4gKiAgIHJldHVybiAoXG4gKiAgICAgPEd0ay5Cb3g+XG4gKiAgICAgICA8TXlDb250ZXh0IHZhbHVlPVwibXktdmFsdWVcIj5cbiAqICAgICAgICAgeygpID0+IDxDb25zdW1lckNvbXBvbmVudCAvPn1cbiAqICAgICAgIDwvTXlDb250ZXh0PlxuICogICAgIDwvR3RrLkJveD5cbiAqICAgKVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb250ZXh0PFQ+KGRlZmF1bHRWYWx1ZTogVCk6IENvbnRleHQ8VD4ge1xuICAgIGxldCBjdHg6IENvbnRleHQ8VD5cblxuICAgIGZ1bmN0aW9uIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUiB7XG4gICAgICAgIGNvbnN0IHNjb3BlID0gZ2V0U2NvcGUoKVxuICAgICAgICBzY29wZS5jb250ZXh0cy5zZXQoY3R4LCB2YWx1ZSlcbiAgICAgICAgcmV0dXJuIHNjb3BlLnJ1bihmbilcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB1c2UoKTogVCB7XG4gICAgICAgIGxldCBzY29wZSA9IFNjb3BlLmN1cnJlbnRcbiAgICAgICAgd2hpbGUgKHNjb3BlKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHNjb3BlLmNvbnRleHRzLmdldChjdHgpXG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkgcmV0dXJuIHZhbHVlIGFzIFRcbiAgICAgICAgICAgIHNjb3BlID0gc2NvcGUucGFyZW50XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbnRleHQoeyB2YWx1ZSwgY2hpbGRyZW4gfTogeyB2YWx1ZTogVDsgY2hpbGRyZW46ICgpID0+IEpTWC5FbGVtZW50IH0pIHtcbiAgICAgICAgcmV0dXJuIHByb3ZpZGUodmFsdWUsIGNoaWxkcmVuKVxuICAgIH1cblxuICAgIHJldHVybiAoY3R4ID0gT2JqZWN0LmFzc2lnbihjb250ZXh0LCB7XG4gICAgICAgIHByb3ZpZGUsXG4gICAgICAgIHVzZSxcbiAgICB9KSlcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBzY29wZSB0aGF0IG93bnMgdGhlIGN1cnJlbnRseSBydW5uaW5nIGNvZGUuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAqIHNldFRpbWVvdXQoKCkgPT4ge1xuICogICAvLyBUaGlzIGNhbGxiYWNrIGdldHMgcnVuIHdpdGhvdXQgYW4gb3duZXIgc2NvcGUuXG4gKiAgIC8vIFJlc3RvcmUgb3duZXIgdmlhIHNjb3BlLnJ1bjpcbiAqICAgc2NvcGUucnVuKCgpID0+IHtcbiAqICAgICBjb25zdCBmb28gPSBGb29Db250ZXh0LnVzZSgpXG4gKiAgICAgb25DbGVhbnVwKCgpID0+IHtcbiAqICAgICAgIHByaW50KFwic29tZSBjbGVhbnVwXCIpXG4gKiAgICAgfSlcbiAqICAgfSlcbiAqIH0sIDEwMDApXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNjb3BlKCk6IFNjb3BlIHtcbiAgICBjb25zdCBzY29wZSA9IFNjb3BlLmN1cnJlbnRcbiAgICBpZiAoIXNjb3BlKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiY2Fubm90IGdldCBzY29wZTogb3V0IG9mIHRyYWNraW5nIGNvbnRleHRcIilcbiAgICB9XG5cbiAgICByZXR1cm4gc2NvcGVcbn1cblxuLyoqXG4gKiBBdHRhY2ggYSBjbGVhbnVwIGNhbGxiYWNrIHRvIHRoZSBjdXJyZW50IHtAbGluayBTY29wZX0uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvbkNsZWFudXAoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwib3V0IG9mIHRyYWNraW5nIGNvbnRleHQ6IHdpbGwgbm90IGJlIGFibGUgdG8gY2xlYW51cFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbkNsZWFudXAoY2xlYW51cClcbn1cblxuLyoqXG4gKiBBdHRhY2ggYSBjYWxsYmFjayB0byBydW4gd2hlbiB0aGUgY3VycmVudGx5IHJ1bm5pbmcge0BsaW5rIFNjb3BlfSByZXR1cm5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25Nb3VudChjbGVhbnVwOiAoKSA9PiB2b2lkKSB7XG4gICAgaWYgKCFTY29wZS5jdXJyZW50KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoRXJyb3IoXCJjYW5ub3QgYXR0YWNoIG9uTW91bnQ6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpKVxuICAgIH1cblxuICAgIFNjb3BlLmN1cnJlbnQ/Lm9uTW91bnQoY2xlYW51cClcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgcm9vdCB7QGxpbmsgU2NvcGV9IHRoYXQgd2hlbiBkaXNwb3NlZCB3aWxsIHJlbW92ZVxuICogYW55IGNoaWxkIHNpZ25hbCBoYW5kbGVyIG9yIHN0YXRlIHN1YnNjcmliZXIuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzeFxuICogY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICogICBsZXQgcm9vdDogR3RrLldpbmRvd1xuICpcbiAqICAgY29uc3QgW3N0YXRlXSA9IGNyZWF0ZVN0YXRlKFwidmFsdWVcIilcbiAqXG4gKiAgIGNvbnN0IHJlbW92ZSA9ICgpID0+IHtcbiAqICAgICByb290LmRlc3Ryb3koKVxuICogICAgIGRpc3Bvc2UoKVxuICogICB9XG4gKlxuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuV2luZG93ICQ9eyhzZWxmKSA9PiAocm9vdCA9IHNlbGYpfT5cbiAqICAgICAgIDxHdGsuQm94PlxuICogICAgICAgICA8R3RrLkxhYmVsIGxhYmVsPXtzdGF0ZX0gLz5cbiAqICAgICAgICAgPEd0ay5CdXR0b24gJGNsaWNrZWQ9e3JlbW92ZX0gLz5cbiAqICAgICAgIDwvR3RrLkJveD5cbiAqICAgICA8L0d0ay5XaW5kb3c+XG4gKiAgIClcbiAqIH0pXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJvb3Q8VD4oZm46IChkaXNwb3NlOiAoKSA9PiB2b2lkKSA9PiBUKSB7XG4gICAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUobnVsbClcbiAgICByZXR1cm4gc2NvcGUucnVuKCgpID0+IGZuKCgpID0+IHNjb3BlLmRpc3Bvc2UoKSkpXG59XG4iLCAiaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tIFwiLi9GcmFnbWVudC5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciwgdHlwZSBTdGF0ZSwgY3JlYXRlU3RhdGUgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsgZ2V0U2NvcGUsIG9uQ2xlYW51cCwgU2NvcGUgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbmludGVyZmFjZSBGb3JQcm9wczxJdGVtLCBFbCBleHRlbmRzIEpTWC5FbGVtZW50LCBLZXk+IHtcbiAgICBlYWNoOiBBY2Nlc3NvcjxJdGVyYWJsZTxJdGVtPj5cbiAgICBjaGlsZHJlbjogKGl0ZW06IEl0ZW0sIGluZGV4OiBBY2Nlc3NvcjxudW1iZXI+KSA9PiBFbFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gcnVuIGZvciBlYWNoIHJlbW92ZWQgZWxlbWVudC5cbiAgICAgKiBUaGUgZGVmYXVsdCB2YWx1ZSBkZXBlbmRzIG9uIHRoZSBlbnZpcm9ubWVudDpcbiAgICAgKlxuICAgICAqIC0gKipHdGs0Kio6IG51bGxcbiAgICAgKiAtICoqR3RrMyoqOiBHdGsuV2lkZ2V0LnByb3RvdHlwZS5kZXN0cm95XG4gICAgICogLSAqKkdub21lKio6IENsdXR0ZXIuQWN0b3IucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKi9cbiAgICBjbGVhbnVwPzogbnVsbCB8ICgoZWxlbWVudDogRWwsIGl0ZW06IEl0ZW0sIGluZGV4OiBudW1iZXIpID0+IHZvaWQpXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0aGF0IGdlbmVyYXRlcyB0aGUga2V5IGZvciBlYWNoIGl0ZW0uXG4gICAgICpcbiAgICAgKiBCeSBkZWZhdWx0IGl0ZW1zIGFyZSBtYXBwZWQgYnk6XG4gICAgICogLSB2YWx1ZSBpbiBjYXNlIG9mIHByaW1pdGl2ZSB2YWx1ZXNcbiAgICAgKiAtIHJlZmVyZW5jZSBvdGhlcndpc2VcbiAgICAgKi9cbiAgICBpZD86IChpdGVtOiBJdGVtKSA9PiBLZXkgfCBJdGVtXG59XG5cbi8vIFRPRE86IHN1cHBvcnQgR2lvLkxpc3RNb2RlbFxuXG5leHBvcnQgZnVuY3Rpb24gRm9yPEl0ZW0sIEVsIGV4dGVuZHMgSlNYLkVsZW1lbnQsIEtleT4oe1xuICAgIGVhY2gsXG4gICAgY2hpbGRyZW46IG1rQ2hpbGQsXG4gICAgY2xlYW51cCxcbiAgICBpZCA9IChpdGVtOiBJdGVtKSA9PiBpdGVtLFxufTogRm9yUHJvcHM8SXRlbSwgRWwsIEtleT4pOiBGcmFnbWVudDxFbD4ge1xuICAgIHR5cGUgTWFwSXRlbSA9IHsgaXRlbTogSXRlbTsgY2hpbGQ6IEVsOyBpbmRleDogU3RhdGU8bnVtYmVyPjsgc2NvcGU6IFNjb3BlIH1cblxuICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IGdldFNjb3BlKClcbiAgICBjb25zdCBtYXAgPSBuZXcgTWFwPEl0ZW0gfCBLZXksIE1hcEl0ZW0+KClcbiAgICBjb25zdCBmcmFnbWVudCA9IG5ldyBGcmFnbWVudDxFbD4oKVxuXG4gICAgZnVuY3Rpb24gcmVtb3ZlKHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXhdLCBzY29wZSB9OiBNYXBJdGVtKSB7XG4gICAgICAgIHNjb3BlLmRpc3Bvc2UoKVxuICAgICAgICBpZiAodHlwZW9mIGNsZWFudXAgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgY2xlYW51cChjaGlsZCwgaXRlbSwgaW5kZXguZ2V0KCkpXG4gICAgICAgIH0gZWxzZSBpZiAoY2xlYW51cCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgZW52LmRlZmF1bHRDbGVhbnVwKGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2FsbGJhY2soaXRhcmVhYmxlOiBJdGVyYWJsZTxJdGVtPikge1xuICAgICAgICBjb25zdCBpdGVtcyA9IFsuLi5pdGFyZWFibGVdXG4gICAgICAgIGNvbnN0IGlkcyA9IGl0ZW1zLm1hcChpZClcbiAgICAgICAgY29uc3QgaWRTZXQgPSBuZXcgU2V0KGlkcylcblxuICAgICAgICAvLyBjbGVhbnVwIGNoaWxkcmVuIG1pc3NpbmcgZnJvbSBhcnJcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgbWFwLmVudHJpZXMoKSkge1xuICAgICAgICAgICAgLy8gdGhlcmUgaXMgbm8gZ2VuZXJpYyB3YXkgdG8gaW5zZXJ0IGNoaWxkIGF0IGluZGV4XG4gICAgICAgICAgICAvLyBzbyB3ZSBzb3J0IGJ5IHJlbW92aW5nIGV2ZXJ5IGNoaWxkIGFuZCByZWFwcGVuZGluZyBpbiBvcmRlclxuICAgICAgICAgICAgZnJhZ21lbnQucmVtb3ZlKHZhbHVlLmNoaWxkKVxuXG4gICAgICAgICAgICBpZiAoIWlkU2V0LmhhcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlKHZhbHVlKVxuICAgICAgICAgICAgICAgIG1hcC5kZWxldGUoa2V5KVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gdXBkYXRlIGluZGV4IGFuZCBhZGQgbmV3IGl0ZW1zXG4gICAgICAgIGl0ZW1zLm1hcCgoaXRlbSwgaSkgPT4ge1xuICAgICAgICAgICAgY29uc3Qga2V5ID0gaWRzW2ldXG4gICAgICAgICAgICBpZiAobWFwLmhhcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgICAgICAgICBpbmRleDogWywgc2V0SW5kZXhdLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZCxcbiAgICAgICAgICAgICAgICB9ID0gbWFwLmdldChrZXkpIVxuICAgICAgICAgICAgICAgIHNldEluZGV4KGkpXG4gICAgICAgICAgICAgICAgaWYgKFsuLi5mcmFnbWVudF0uc29tZSgoY2gpID0+IGNoID09PSBjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBkdXBsaWNhdGUga2V5cyBmb3VuZDogJHtrZXl9YClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmcmFnbWVudC5hcHBlbmQoY2hpbGQpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbaW5kZXgsIHNldEluZGV4XSA9IGNyZWF0ZVN0YXRlKGkpXG4gICAgICAgICAgICAgICAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUoY3VycmVudFNjb3BlKVxuICAgICAgICAgICAgICAgIGNvbnN0IGNoaWxkID0gc2NvcGUucnVuKCgpID0+IG1rQ2hpbGQoaXRlbSwgaW5kZXgpKVxuICAgICAgICAgICAgICAgIG1hcC5zZXQoa2V5LCB7IGl0ZW0sIGNoaWxkLCBpbmRleDogW2luZGV4LCBzZXRJbmRleF0sIHNjb3BlIH0pXG4gICAgICAgICAgICAgICAgZnJhZ21lbnQuYXBwZW5kKGNoaWxkKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGNvbnN0IGRpc3Bvc2UgPSBlYWNoLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKGVhY2guZ2V0KCkpXG4gICAgfSlcbiAgICBjYWxsYmFjayhlYWNoLmdldCgpKVxuXG4gICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgZGlzcG9zZSgpXG5cbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiBtYXAudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIHJlbW92ZSh2YWx1ZSlcbiAgICAgICAgfVxuXG4gICAgICAgIG1hcC5jbGVhcigpXG4gICAgfSlcblxuICAgIHJldHVybiBmcmFnbWVudFxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgc2V0IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuaW1wb3J0IHsgYXBwZW5kLCBzZXRUeXBlLCBzaWduYWxOYW1lLCB0eXBlIENDUHJvcHMgfSBmcm9tIFwiLi9qc3guanNcIlxuXG50eXBlIFRoaXNQcm9wczxTZWxmIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+ID0gUGFydGlhbDxcbiAgICBPbWl0PENDUHJvcHM8U2VsZiwgeyBbSyBpbiBrZXlvZiBTZWxmXTogU2VsZltLXSB9PiwgXCIkXCIgfCBcIiRjb25zdHJ1Y3RvclwiPlxuPiAmIHtcbiAgICB0aGlzOiBTZWxmXG59XG5cbi8qKiBAZXhwZXJpbWVudGFsICovXG5leHBvcnQgZnVuY3Rpb24gVGhpczxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KHtcbiAgICB0aGlzOiBzZWxmLFxuICAgIGNoaWxkcmVuLFxuICAgICR0eXBlLFxuICAgIC4uLnByb3BzXG59OiBUaGlzUHJvcHM8VD4pIHtcbiAgICBjb25zdCBjbGVhbnVwID0gbmV3IEFycmF5PCgpID0+IHZvaWQ+KClcblxuICAgIGlmICgkdHlwZSkgc2V0VHlwZShzZWxmLCAkdHlwZSlcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAoa2V5ID09PSBcImNzc1wiKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUuZ2V0KCkpXG4gICAgICAgICAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSBcImNsYXNzXCIpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgICAgIGNsZWFudXAucHVzaCh2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChrZXkuc3RhcnRzV2l0aChcIm9uXCIpKSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHNlbGYuY29ubmVjdChzaWduYWxOYW1lKGtleSksIHZhbHVlKVxuICAgICAgICAgICAgY2xlYW51cC5wdXNoKCgpID0+IHNlbGYuZGlzY29ubmVjdChpZCkpXG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IHZhbHVlLnN1YnNjcmliZSgoKSA9PiBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSkpXG4gICAgICAgICAgICBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSlcbiAgICAgICAgICAgIGNsZWFudXAucHVzaChkaXNwb3NlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0KHNlbGYsIGtleSwgdmFsdWUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGxldCBjaGlsZCBvZiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXSkge1xuICAgICAgICBpZiAoY2hpbGQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihFcnJvcihcIlRyeWluZyB0byBhZGQgYm9vbGVhbiB2YWx1ZSBvZiBgdHJ1ZWAgYXMgYSBjaGlsZC5cIikpXG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgYXBwZW5kKHNlbGYsIGNoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICBpZiAoIShjaGlsZCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgIGNoaWxkID0gZW52LnRleHROb2RlKGNoaWxkKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXBwZW5kKHNlbGYsIGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNsZWFudXAubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4gY2xlYW51cC5mb3JFYWNoKChjYikgPT4gY2IoKSkpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNlbGZcbn1cbiIsICIvKipcbiAqIFdvcmthcm91bmQgZm9yIFwiQ2FuJ3QgY29udmVydCBub24tbnVsbCBwb2ludGVyIHRvIEpTIHZhbHVlIFwiXG4gKi9cblxuZXhwb3J0IHt9XG5cbmZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMV8kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHN1cHByZXNzPFQ+KG1vZDogUHJvbWlzZTx7IGRlZmF1bHQ6IFQgfT4sIHBhdGNoOiAobTogVCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBtb2QudGhlbigobSkgPT4gcGF0Y2gobS5kZWZhdWx0KSkuY2F0Y2goKCkgPT4gdm9pZCAwKVxufVxuXG5mdW5jdGlvbiBwYXRjaDxQIGV4dGVuZHMgb2JqZWN0Pihwcm90bzogUCwgcHJvcDogRXh0cmFjdDxrZXlvZiBQLCBzdHJpbmc+KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvLCBwcm9wLCB7XG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzW2BnZXRfJHtzbmFrZWlmeShwcm9wKX1gXSgpXG4gICAgICAgIH0sXG4gICAgfSlcbn1cblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEFwcHNcIiksICh7IEFwcHMsIEFwcGxpY2F0aW9uIH0pID0+IHtcbiAgICBwYXRjaChBcHBzLnByb3RvdHlwZSwgXCJsaXN0XCIpXG4gICAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCBcImtleXdvcmRzXCIpXG4gICAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCBcImNhdGVnb3JpZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxCYXR0ZXJ5XCIpLCAoeyBVUG93ZXIgfSkgPT4ge1xuICAgIHBhdGNoKFVQb3dlci5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJsdWV0b290aFwiKSwgKHsgQWRhcHRlciwgQmx1ZXRvb3RoLCBEZXZpY2UgfSkgPT4ge1xuICAgIHBhdGNoKEFkYXB0ZXIucHJvdG90eXBlLCBcInV1aWRzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJhZGFwdGVyc1wiKVxuICAgIHBhdGNoKEJsdWV0b290aC5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKERldmljZS5wcm90b3R5cGUsIFwidXVpZHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxIeXBybGFuZFwiKSwgKHsgSHlwcmxhbmQsIE1vbml0b3IsIFdvcmtzcGFjZSB9KSA9PiB7XG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcImJpbmRzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcIm1vbml0b3JzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcIndvcmtzcGFjZXNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiY2xpZW50c1wiKVxuICAgIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCBcImF2YWlsYWJsZU1vZGVzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlX21vZGVzXCIpXG4gICAgcGF0Y2goV29ya3NwYWNlLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTXByaXNcIiksICh7IE1wcmlzLCBQbGF5ZXIgfSkgPT4ge1xuICAgIHBhdGNoKE1wcmlzLnByb3RvdHlwZSwgXCJwbGF5ZXJzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRfdXJpX3NjaGVtZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZFVyaVNjaGVtZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF9taW1lX3R5cGVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRNaW1lVHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcImNvbW1lbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTmV0d29ya1wiKSwgKHsgV2lmaSB9KSA9PiB7XG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzX3BvaW50c1wiKVxuICAgIHBhdGNoKFdpZmkucHJvdG90eXBlLCBcImFjY2Vzc1BvaW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE5vdGlmZFwiKSwgKHsgTm90aWZkLCBOb3RpZmljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKE5vdGlmZC5wcm90b3R5cGUsIFwibm90aWZpY2F0aW9uc1wiKVxuICAgIHBhdGNoKE5vdGlmaWNhdGlvbi5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFBvd2VyUHJvZmlsZXNcIiksICh7IFBvd2VyUHJvZmlsZXMgfSkgPT4ge1xuICAgIHBhdGNoKFBvd2VyUHJvZmlsZXMucHJvdG90eXBlLCBcImFjdGlvbnNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxXcFwiKSwgKHsgV3AsIEF1ZGlvLCBWaWRlbyB9KSA9PiB7XG4gICAgcGF0Y2goV3AucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwic3RyZWFtc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJyZWNvcmRlcnNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwibWljcm9waG9uZXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwic3BlYWtlcnNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzdHJlYW1zXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInJlY29yZGVyc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzaW5rc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzb3VyY2VzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcImRldmljZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxUcmF5XCIpLCAoeyBUcmF5IH0pID0+IHtcbiAgICBwYXRjaChUcmF5LnByb3RvdHlwZSwgXCJpdGVtc1wiKVxufSlcbiIsICIvKipcbiAqIEluIHRoZSBmdXR1cmUgSSB3b3VsZCBsaWtlIHRvIG1ha2UgdHlwZSBkZWNsYXJhdGlvbiBpbiBkZWNvcmF0b3JzIG9wdGlvbmFsXG4gKiBhbmQgaW5mZXIgaXQgZnJvbSB0eXBlc2NyaXB0IHR5cGVzIGF0IHRyYW5zcGlsZSB0aW1lLiBDdXJyZW50bHksIHdlIGNvdWxkXG4gKiBlaXRoZXIgdXNlIHN0YWdlIDIgZGVjb3JhdG9ycyB3aXRoIHRoZSBcImVtaXREZWNvcmF0b3JNZXRhZGF0YVwiIGFuZFxuICogXCJleHBlcmltZW50YWxEZWNvcmF0b3JzXCIgdHNjb25maWcgb3B0aW9ucy4gSG93ZXZlciwgbWV0YWRhdGEgaXMgbm90IHN1cHBvcnRlZFxuICogYnkgZXNidWlsZCB3aGljaCBpcyB3aGF0IEknbSBtb3N0bHkgdGFyZ2V0aW5nIGFzIHRoZSBidW5kbGVyIGZvciBwZXJmb3JtYW5jZVxuICogcmVhc29ucy4gaHR0cHM6Ly9naXRodWIuY29tL2V2YW53L2VzYnVpbGQvaXNzdWVzLzI1N1xuICogSG93ZXZlciwgSSBiZWxpZXZlIHRoYXQgd2Ugc2hvdWxkIG5vdCB1c2Ugc3RhZ2UgMiBhbnltb3JlLFxuICogc28gSSdtIHdhaXRpbmcgZm9yIGEgYmV0dGVyIGFsdGVybmF0aXZlLlxuICovXG5cbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiXG5pbXBvcnQgeyBkZWZpbmVQcm9wZXJ0eUdldHRlciwga2ViYWJpZnkgfSBmcm9tIFwiLi91dGlsLmpzXCJcblxuY29uc3QgcHJpdiA9IFN5bWJvbChcImdvYmplY3QgcHJpdmF0ZVwiKVxuY29uc3QgeyBkZWZpbmVQcm9wZXJ0eSwgZnJvbUVudHJpZXMsIGVudHJpZXMgfSA9IE9iamVjdFxuY29uc3QgeyBPYmplY3Q6IEdPYmosIHJlZ2lzdGVyQ2xhc3MgfSA9IEdPYmplY3RcblxuZXhwb3J0IHsgR09iamVjdCBhcyBkZWZhdWx0IH1cbmV4cG9ydCB7IEdPYmogYXMgT2JqZWN0IH1cblxuZXhwb3J0IGNvbnN0IFNpZ25hbEZsYWdzID0gR09iamVjdC5TaWduYWxGbGFnc1xuZXhwb3J0IHR5cGUgU2lnbmFsRmxhZ3MgPSBHT2JqZWN0LlNpZ25hbEZsYWdzXG5cbmV4cG9ydCBjb25zdCBBY2N1bXVsYXRvclR5cGUgPSBHT2JqZWN0LkFjY3VtdWxhdG9yVHlwZVxuZXhwb3J0IHR5cGUgQWNjdW11bGF0b3JUeXBlID0gR09iamVjdC5BY2N1bXVsYXRvclR5cGVcblxuZXhwb3J0IHR5cGUgUGFyYW1TcGVjPFQgPSB1bmtub3duPiA9IEdPYmplY3QuUGFyYW1TcGVjPFQ+XG5leHBvcnQgY29uc3QgUGFyYW1TcGVjID0gR09iamVjdC5QYXJhbVNwZWNcblxuZXhwb3J0IHR5cGUgUGFyYW1GbGFncyA9IEdPYmplY3QuUGFyYW1GbGFnc1xuZXhwb3J0IGNvbnN0IFBhcmFtRmxhZ3MgPSBHT2JqZWN0LlBhcmFtRmxhZ3NcblxuZXhwb3J0IHR5cGUgR1R5cGU8VCA9IHVua25vd24+ID0gR09iamVjdC5HVHlwZTxUPlxuXG50eXBlIEdPYmogPSBHT2JqZWN0Lk9iamVjdFxuXG5pbnRlcmZhY2UgR09ialByaXZhdGUgZXh0ZW5kcyBHT2JqIHtcbiAgICBbcHJpdl06IFJlY29yZDxzdHJpbmcsIGFueT5cbn1cblxudHlwZSBNZXRhID0ge1xuICAgIHByb3BlcnRpZXM/OiB7XG4gICAgICAgIFtmaWVsZE5hbWU6IHN0cmluZ106IHtcbiAgICAgICAgICAgIGZsYWdzOiBQYXJhbUZsYWdzXG4gICAgICAgICAgICB0eXBlOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjx1bmtub3duPlxuICAgICAgICB9XG4gICAgfVxuICAgIHNpZ25hbHM/OiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHtcbiAgICAgICAgICAgIGRlZmF1bHQ/OiBib29sZWFuXG4gICAgICAgICAgICBmbGFncz86IFNpZ25hbEZsYWdzXG4gICAgICAgICAgICBhY2N1bXVsYXRvcj86IEFjY3VtdWxhdG9yVHlwZVxuICAgICAgICAgICAgcmV0dXJuX3R5cGU/OiBHVHlwZVxuICAgICAgICAgICAgcGFyYW1fdHlwZXM/OiBBcnJheTxHVHlwZT5cbiAgICAgICAgICAgIG1ldGhvZDogKC4uLmFyZzogYW55W10pID0+IHVua25vd25cbiAgICAgICAgfVxuICAgIH1cbn1cblxudHlwZSBDb250ZXh0ID0geyBwcml2YXRlOiBmYWxzZTsgc3RhdGljOiBmYWxzZTsgbmFtZTogc3RyaW5nIH1cbnR5cGUgUHJvcGVydHlDb250ZXh0PFQ+ID0gQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG50eXBlIEdldHRlckNvbnRleHQ8VD4gPSBDbGFzc0dldHRlckRlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG50eXBlIFNldHRlckNvbnRleHQ8VD4gPSBDbGFzc1NldHRlckRlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG50eXBlIFNpZ25hbENvbnRleHQ8VCBleHRlbmRzICgpID0+IGFueT4gPSBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG5cbnR5cGUgU2lnbmFsT3B0aW9ucyA9IHtcbiAgICBkZWZhdWx0PzogYm9vbGVhblxuICAgIGZsYWdzPzogU2lnbmFsRmxhZ3NcbiAgICBhY2N1bXVsYXRvcj86IEFjY3VtdWxhdG9yVHlwZVxufVxuXG50eXBlIFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPFQ+ID1cbiAgICB8ICgobmFtZTogc3RyaW5nLCBmbGFnczogUGFyYW1GbGFncykgPT4gUGFyYW1TcGVjPFQ+KVxuICAgIHwgUGFyYW1TcGVjPFQ+XG4gICAgfCB7ICRndHlwZTogR1R5cGU8VD4gfVxuXG5mdW5jdGlvbiBhc3NlcnRGaWVsZChcbiAgICBjdHg6IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0LFxuKTogc3RyaW5nIHtcbiAgICBpZiAoY3R4LnByaXZhdGUpIHRocm93IEVycm9yKFwicHJpdmF0ZSBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWRcIilcbiAgICBpZiAoY3R4LnN0YXRpYykgdGhyb3cgRXJyb3IoXCJzdGF0aWMgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkXCIpXG5cbiAgICBpZiAodHlwZW9mIGN0eC5uYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwib25seSBzdHJpbmdzIGNhbiBiZSBnb2JqZWN0IHByb3BlcnR5IGtleXNcIilcbiAgICB9XG5cbiAgICByZXR1cm4gY3R4Lm5hbWVcbn1cblxuLyoqXG4gKiBEZWZpbmVzIGEgcmVhZGFibGUgKmFuZCogd3JpdGVhYmxlIHByb3BlcnR5IHRvIGJlIHJlZ2lzdGVyZWQgd2hlbiB1c2luZyB0aGUge0BsaW5rIHJlZ2lzdGVyfSBkZWNvcmF0b3IuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAcHJvcGVydHkoU3RyaW5nKSBteVByb3AgPSBcIlwiXG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByb3BlcnR5PFQ+KHR5cGVEZWNsYXJhdGlvbjogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248VD4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBfOiB2b2lkLFxuICAgICAgICBjdHg6IFByb3BlcnR5Q29udGV4dDxUPixcbiAgICAgICAgb3B0aW9ucz86IHsgbWV0YU9ubHk6IHRydWUgfSxcbiAgICApOiAodGhpczogR09iaiwgaW5pdDogVCkgPT4gYW55IHtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gYXNzZXJ0RmllbGQoY3R4KVxuICAgICAgICBjb25zdCBrZXkgPSBrZWJhYmlmeShmaWVsZE5hbWUpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG5cbiAgICAgICAgbWV0YS5wcm9wZXJ0aWVzID8/PSB7fVxuICAgICAgICBtZXRhLnByb3BlcnRpZXNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IFBhcmFtRmxhZ3MuUkVBRFdSSVRFLCB0eXBlOiB0eXBlRGVjbGFyYXRpb24gfVxuXG4gICAgICAgIGN0eC5hZGRJbml0aWFsaXplcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eUdldHRlcih0aGlzLCBmaWVsZE5hbWUgYXMgRXh0cmFjdDxrZXlvZiBHT2JqLCBzdHJpbmc+KVxuXG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLm1ldGFPbmx5KSByZXR1cm5cblxuICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkodGhpcywgZmllbGROYW1lLCB7XG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNldCh2OiBUKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzW3ByaXZdW2tleV0gIT09IHYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbcHJpdl1ba2V5XSA9IHZcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KGtleSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0KCk6IFQge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpc1twcml2XVtrZXldXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gc2F0aXNmaWVzIFRoaXNUeXBlPEdPYmpQcml2YXRlPilcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGluaXQ6IFQpIHtcbiAgICAgICAgICAgIGNvbnN0IGRpY3QgPSAoKHRoaXMgYXMgR09ialByaXZhdGUpW3ByaXZdID8/PSB7fSlcbiAgICAgICAgICAgIGRpY3Rba2V5XSA9IGluaXRcbiAgICAgICAgICAgIHJldHVybiBpbml0XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogRGVmaW5lcyBhIHJlYWQtb25seSBwcm9wZXJ0eSB0byBiZSByZWdpc3RlcmVkIHdoZW4gdXNpbmcgdGhlIHtAbGluayByZWdpc3Rlcn0gZGVjb3JhdG9yLlxuICogSWYgdGhlIGdldHRlciBoYXMgYSBzZXR0ZXIgcGFpciBkZWNvcmF0ZWQgd2l0aCB0aGUge0BsaW5rIHNldHRlcn0gZGVjb3JhdG9yIHRoZSBwcm9wZXJ0eSB3aWxsIGJlIHJlYWRhYmxlICphbmQqIHdyaXRlYWJsZS5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNsYXNzIHtcbiAqICAgICBcXEBzZXR0ZXIoU3RyaW5nKVxuICogICAgIHNldCBteVByb3AodmFsdWU6IHN0cmluZykge1xuICogICAgICAgICAvL1xuICogICAgIH1cbiAqXG4gKiAgICAgXFxAZ2V0dGVyKFN0cmluZylcbiAqICAgICBnZXQgbXlQcm9wKCk6IHN0cmluZyB7XG4gKiAgICAgICAgIHJldHVybiBcIlwiXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXR0ZXI8VD4odHlwZURlY2xhcmF0aW9uOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjxUPikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoZ2V0OiAodGhpczogR09iaikgPT4gYW55LCBjdHg6IEdldHRlckNvbnRleHQ8VD4pIHtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gYXNzZXJ0RmllbGQoY3R4KVxuICAgICAgICBjb25zdCBtZXRhOiBQYXJ0aWFsPE1ldGE+ID0gY3R4Lm1ldGFkYXRhIVxuICAgICAgICBjb25zdCBwcm9wcyA9IChtZXRhLnByb3BlcnRpZXMgPz89IHt9KVxuICAgICAgICBpZiAoZmllbGROYW1lIGluIHByb3BzKSB7XG4gICAgICAgICAgICBjb25zdCB7IGZsYWdzLCB0eXBlIH0gPSBwcm9wc1tmaWVsZE5hbWVdXG4gICAgICAgICAgICBwcm9wc1tmaWVsZE5hbWVdID0geyBmbGFnczogZmxhZ3MgfCBQYXJhbUZsYWdzLlJFQURBQkxFLCB0eXBlIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBQYXJhbUZsYWdzLlJFQURBQkxFLCB0eXBlOiB0eXBlRGVjbGFyYXRpb24gfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBnZXRcbiAgICB9XG59XG5cbi8qKlxuICogRGVmaW5lcyBhIHdyaXRlLW9ubHkgcHJvcGVydHkgdG8gYmUgcmVnaXN0ZXJlZCB3aGVuIHVzaW5nIHRoZSB7QGxpbmsgcmVnaXN0ZXJ9IGRlY29yYXRvci5cbiAqIElmIHRoZSBzZXR0ZXIgaGFzIGEgZ2V0dGVyIHBhaXIgZGVjb3JhdGVkIHdpdGggdGhlIHtAbGluayBnZXR0ZXJ9IGRlY29yYXRvciB0aGUgcHJvcGVydHkgd2lsbCBiZSB3cml0ZWFibGUgKmFuZCogcmVhZGFibGUuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAc2V0dGVyKFN0cmluZylcbiAqICAgICBzZXQgbXlQcm9wKHZhbHVlOiBzdHJpbmcpIHtcbiAqICAgICAgICAgLy9cbiAqICAgICB9XG4gKlxuICogICAgIFxcQGdldHRlcihTdHJpbmcpXG4gKiAgICAgZ2V0IG15UHJvcCgpOiBzdHJpbmcge1xuICogICAgICAgICByZXR1cm4gXCJcIlxuICogICAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0dGVyPFQ+KHR5cGVEZWNsYXJhdGlvbjogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248VD4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHNldDogKHRoaXM6IEdPYmosIHZhbHVlOiBhbnkpID0+IHZvaWQsIGN0eDogU2V0dGVyQ29udGV4dDxUPikge1xuICAgICAgICBjb25zdCBmaWVsZE5hbWUgPSBhc3NlcnRGaWVsZChjdHgpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG4gICAgICAgIGNvbnN0IHByb3BzID0gKG1ldGEucHJvcGVydGllcyA/Pz0ge30pXG4gICAgICAgIGlmIChmaWVsZE5hbWUgaW4gcHJvcHMpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZmxhZ3MsIHR5cGUgfSA9IHByb3BzW2ZpZWxkTmFtZV1cbiAgICAgICAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBmbGFncyB8IFBhcmFtRmxhZ3MuV1JJVEFCTEUsIHR5cGUgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvcHNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IFBhcmFtRmxhZ3MuV1JJVEFCTEUsIHR5cGU6IHR5cGVEZWNsYXJhdGlvbiB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNldFxuICAgIH1cbn1cblxudHlwZSBQYXJhbVR5cGU8UD4gPSBQIGV4dGVuZHMgeyAkZ3R5cGU6IEdUeXBlPGluZmVyIFQ+IH0gPyBUIDogUCBleHRlbmRzIEdUeXBlPGluZmVyIFQ+ID8gVCA6IG5ldmVyXG5cbnR5cGUgUGFyYW1UeXBlczxQYXJhbXM+ID0ge1xuICAgIFtLIGluIGtleW9mIFBhcmFtc106IFBhcmFtVHlwZTxQYXJhbXNbS10+XG59XG5cbi8qKlxuICogRGVmaW5lcyBhIHNpZ25hbCB0byBiZSByZWdpc3RlcmVkIHdoZW4gdXNpbmcgdGhlIHtAbGluayByZWdpc3Rlcn0gZGVjb3JhdG9yLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY2xhc3Mge1xuICogICAgIFxcQHNpZ25hbChbU3RyaW5nLCBOdW1iZXJdLCBCb29sZWFuLCB7XG4gKiAgICAgICAgIGFjY3VtdWxhdG9yOiBBY2N1bXVsYXRvclR5cGUuRklSU1RfV0lOU1xuICogICAgIH0pXG4gKiAgICAgbXlTaWduYWwoc3RyOiBzdHJpbmcsIG46IG51bWJlcik6IGJvb2xlYW4ge1xuICogICAgICAgICAvLyBkZWZhdWx0IGhhbmRsZXJcbiAqICAgICAgICAgcmV0dXJuIGZhbHNlXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8XG4gICAgY29uc3QgUGFyYW1zIGV4dGVuZHMgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZT4sXG4gICAgUmV0dXJuIGV4dGVuZHMgeyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZSxcbj4oXG4gICAgcGFyYW1zOiBQYXJhbXMsXG4gICAgcmV0dXJuVHlwZTogUmV0dXJuLFxuICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zLFxuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IEdPYmosIC4uLmFyZ3M6IGFueSkgPT4gUGFyYW1UeXBlPFJldHVybj4sXG4gICAgY3R4OiBTaWduYWxDb250ZXh0PHR5cGVvZiBtZXRob2Q+LFxuKSA9PiAodGhpczogR09iaiwgLi4uYXJnczogUGFyYW1UeXBlczxQYXJhbXM+KSA9PiBhbnlcblxuLyoqXG4gKiBEZWZpbmVzIGEgc2lnbmFsIHRvIGJlIHJlZ2lzdGVyZWQgd2hlbiB1c2luZyB0aGUge0BsaW5rIHJlZ2lzdGVyfSBkZWNvcmF0b3IuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAc2lnbmFsKFN0cmluZywgTnVtYmVyKVxuICogICAgIG15U2lnbmFsKHN0cjogc3RyaW5nLCBuOiBudW1iZXIpOiB2b2lkIHtcbiAqICAgICAgICAgLy8gZGVmYXVsdCBoYW5kbGVyXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8UGFyYW1zIGV4dGVuZHMgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZT4+KFxuICAgIC4uLnBhcmFtczogUGFyYW1zXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogR09iamVjdC5PYmplY3QsIC4uLmFyZ3M6IGFueSkgPT4gdm9pZCxcbiAgICBjdHg6IFNpZ25hbENvbnRleHQ8dHlwZW9mIG1ldGhvZD4sXG4pID0+ICh0aGlzOiBHT2JqZWN0Lk9iamVjdCwgLi4uYXJnczogUGFyYW1UeXBlczxQYXJhbXM+KSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8XG4gICAgUGFyYW1zIGV4dGVuZHMgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZT4sXG4gICAgUmV0dXJuIGV4dGVuZHMgeyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZSxcbj4oXG4gICAgLi4uYXJnczogUGFyYW1zIHwgW3BhcmFtczogUGFyYW1zLCByZXR1cm5UeXBlPzogUmV0dXJuLCBvcHRpb25zPzogU2lnbmFsT3B0aW9uc11cbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBHT2JqLCAuLi5hcmdzOiBQYXJhbVR5cGVzPFBhcmFtcz4pID0+IFBhcmFtVHlwZTxSZXR1cm4+IHwgdm9pZCxcbiAgICBjdHg6IFNpZ25hbENvbnRleHQ8dHlwZW9mIG1ldGhvZD4sXG4pID0+IHR5cGVvZiBtZXRob2Qge1xuICAgIHJldHVybiBmdW5jdGlvbiAobWV0aG9kLCBjdHgpIHtcbiAgICAgICAgaWYgKGN0eC5wcml2YXRlKSB0aHJvdyBFcnJvcihcInByaXZhdGUgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkXCIpXG4gICAgICAgIGlmIChjdHguc3RhdGljKSB0aHJvdyBFcnJvcihcInN0YXRpYyBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWRcIilcblxuICAgICAgICBpZiAodHlwZW9mIGN0eC5uYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIm9ubHkgc3RyaW5ncyBjYW4gYmUgZ29iamVjdCBzaWduYWxzXCIpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzaWduYWxOYW1lID0ga2ViYWJpZnkoY3R4Lm5hbWUpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG4gICAgICAgIGNvbnN0IHNpZ25hbHMgPSAobWV0YS5zaWduYWxzID8/PSB7fSlcblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkge1xuICAgICAgICAgICAgY29uc3QgW3BhcmFtcywgcmV0dXJuVHlwZSwgb3B0aW9uc10gPSBhcmdzIGFzIFtcbiAgICAgICAgICAgICAgICBwYXJhbXM6IFBhcmFtcyxcbiAgICAgICAgICAgICAgICByZXR1cm5UeXBlPzogUmV0dXJuLFxuICAgICAgICAgICAgICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zLFxuICAgICAgICAgICAgXVxuXG4gICAgICAgICAgICBzaWduYWxzW3NpZ25hbE5hbWVdID0ge1xuICAgICAgICAgICAgICAgIG1ldGhvZCxcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiBvcHRpb25zPy5kZWZhdWx0ID8/IHRydWUsXG4gICAgICAgICAgICAgICAgcGFyYW1fdHlwZXM6IHBhcmFtcy5tYXAoKGkpID0+IChcIiRndHlwZVwiIGluIGkgPyBpLiRndHlwZSA6IGkpKSxcbiAgICAgICAgICAgICAgICAuLi4ocmV0dXJuVHlwZSAmJiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybl90eXBlOiBcIiRndHlwZVwiIGluIHJldHVyblR5cGUgPyByZXR1cm5UeXBlLiRndHlwZSA6IHJldHVyblR5cGUsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLi4uKG9wdGlvbnM/LmZsYWdzICYmIHtcbiAgICAgICAgICAgICAgICAgICAgZmxhZ3M6IG9wdGlvbnMuZmxhZ3MsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLi4uKHR5cGVvZiBvcHRpb25zPy5hY2N1bXVsYXRvciA9PT0gXCJudW1iZXJcIiAmJiB7XG4gICAgICAgICAgICAgICAgICAgIGFjY3VtdWxhdG9yOiBvcHRpb25zLmFjY3VtdWxhdG9yLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gYXJncyBhcyBQYXJhbXNcbiAgICAgICAgICAgIHNpZ25hbHNbc2lnbmFsTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgcGFyYW1fdHlwZXM6IHBhcmFtcy5tYXAoKGkpID0+IChcIiRndHlwZVwiIGluIGkgPyBpLiRndHlwZSA6IGkpKSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4ucGFyYW1zKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5lbWl0KHNpZ25hbE5hbWUsIC4uLnBhcmFtcykgYXMgUGFyYW1UeXBlPFJldHVybj5cbiAgICAgICAgfVxuICAgIH1cbn1cblxuY29uc3QgTUFYSU5UID0gMiAqKiAzMSAtIDFcbmNvbnN0IE1JTklOVCA9IC0oMiAqKiAzMSlcbmNvbnN0IE1BWFVJTlQgPSAyICoqIDMyIC0gMVxuY29uc3QgTUFYRkxPQVQgPSAzLjQwMjgyMzVlMzhcbmNvbnN0IE1JTkZMT0FUID0gLTMuNDAyODIzNWUzOFxuY29uc3QgTUlOSU5UNjQgPSBOdW1iZXIuTUlOX1NBRkVfSU5URUdFUlxuY29uc3QgTUFYSU5UNjQgPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUlxuXG5mdW5jdGlvbiBwc3BlY0Zyb21HVHlwZSh0eXBlOiBHVHlwZTx1bmtub3duPiwgbmFtZTogc3RyaW5nLCBmbGFnczogUGFyYW1GbGFncykge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9CT09MRUFOOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5ib29sZWFuKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBmYWxzZSlcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfU1RSSU5HOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5zdHJpbmcobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIFwiXCIpXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0lOVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuaW50KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBNSU5JTlQsIE1BWElOVCwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfVUlOVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMudWludChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgMCwgTUFYVUlOVCwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfSU5UNjQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmludDY0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBNSU5JTlQ2NCwgTUFYSU5UNjQsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1VJTlQ2NDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMudWludDY0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCAwLCBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfRkxPQVQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmZsb2F0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBNSU5GTE9BVCwgTUFYRkxPQVQsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0RPVUJMRTpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuZG91YmxlKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBOdW1iZXIuTUlOX1ZBTFVFLCBOdW1iZXIuTUlOX1ZBTFVFLCAwKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9KU09CSkVDVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuanNvYmplY3QobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MpXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1ZBUklBTlQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLm9iamVjdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncyBhcyBhbnksIEdMaWIuVmFyaWFudClcblxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9FTlVNOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9JTlRFUkZBQ0U6XG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0JPWEVEOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9QT0lOVEVSOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9QQVJBTTpcbiAgICAgICAgY2FzZSBHT2JqZWN0LnR5cGVfZnJvbV9uYW1lKFwiR1R5cGVcIik6XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGd1ZXNzIFBhcmFtU3BlYyBmcm9tIEdUeXBlIFwiJHt0eXBlfVwiYClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfT0JKRUNUOlxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5vYmplY3QobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MgYXMgYW55LCB0eXBlKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gcHNwZWMobmFtZTogc3RyaW5nLCBmbGFnczogUGFyYW1GbGFncywgZGVjbGFyYXRpb246IFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPHVua25vd24+KSB7XG4gICAgaWYgKGRlY2xhcmF0aW9uIGluc3RhbmNlb2YgUGFyYW1TcGVjKSByZXR1cm4gZGVjbGFyYXRpb25cblxuICAgIGlmIChkZWNsYXJhdGlvbiA9PT0gT2JqZWN0IHx8IGRlY2xhcmF0aW9uID09PSBGdW5jdGlvbiB8fCBkZWNsYXJhdGlvbiA9PT0gQXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5qc29iamVjdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncylcbiAgICB9XG5cbiAgICBpZiAoZGVjbGFyYXRpb24gPT09IFN0cmluZykge1xuICAgICAgICByZXR1cm4gUGFyYW1TcGVjLnN0cmluZyhuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgXCJcIilcbiAgICB9XG5cbiAgICBpZiAoZGVjbGFyYXRpb24gPT09IE51bWJlcikge1xuICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmRvdWJsZShuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgLU51bWJlci5NQVhfVkFMVUUsIE51bWJlci5NQVhfVkFMVUUsIDApXG4gICAgfVxuXG4gICAgaWYgKGRlY2xhcmF0aW9uID09PSBCb29sZWFuKSB7XG4gICAgICAgIHJldHVybiBQYXJhbVNwZWMuYm9vbGVhbihuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgZmFsc2UpXG4gICAgfVxuXG4gICAgaWYgKFwiJGd0eXBlXCIgaW4gZGVjbGFyYXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHBzcGVjRnJvbUdUeXBlKGRlY2xhcmF0aW9uLiRndHlwZSwgbmFtZSwgZmxhZ3MpXG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBkZWNsYXJhdGlvbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBkZWNsYXJhdGlvbihuYW1lLCBmbGFncylcbiAgICB9XG5cbiAgICB0aHJvdyBFcnJvcihcImludmFsaWQgUHJvcGVydHlUeXBlRGVjbGFyYXRpb25cIilcbn1cblxudHlwZSBNZXRhSW5mbyA9IEdPYmplY3QuTWV0YUluZm88bmV2ZXIsIEFycmF5PHsgJGd0eXBlOiBHVHlwZTx1bmtub3duPiB9PiwgbmV2ZXI+XG5cbi8qKlxuICogUmVwbGFjZW1lbnQgZm9yIHtAbGluayBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3N9XG4gKiBUaGlzIGRlY29yYXRvciBjb25zdW1lcyBtZXRhZGF0YSBuZWVkZWQgdG8gcmVnaXN0ZXIgdHlwZXMgd2hlcmUgdGhlIHByb3ZpZGVkIGRlY29yYXRvcnMgYXJlIHVzZWQ6XG4gKiAtIHtAbGluayBzaWduYWx9XG4gKiAtIHtAbGluayBwcm9wZXJ0eX1cbiAqIC0ge0BsaW5rIGdldHRlcn1cbiAqIC0ge0BsaW5rIHNldHRlcn1cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIFxcQHJlZ2lzdGVyKHsgR1R5cGVOYW1lOiBcIk15Q2xhc3NcIiB9KVxuICogY2xhc3MgTXlDbGFzcyBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHsgfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlcjxDbHMgZXh0ZW5kcyB7IG5ldyAoLi4uYXJnczogYW55KTogR09iaiB9PihvcHRpb25zOiBNZXRhSW5mbyA9IHt9KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjbHM6IENscywgY3R4OiBDbGFzc0RlY29yYXRvckNvbnRleHQ8Q2xzPikge1xuICAgICAgICBjb25zdCB0ID0gb3B0aW9ucy5UZW1wbGF0ZVxuXG4gICAgICAgIGlmICh0eXBlb2YgdCA9PT0gXCJzdHJpbmdcIiAmJiAhdC5zdGFydHNXaXRoKFwicmVzb3VyY2U6Ly9cIikgJiYgIXQuc3RhcnRzV2l0aChcImZpbGU6Ly9cIikpIHtcbiAgICAgICAgICAgIG9wdGlvbnMuVGVtcGxhdGUgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGEhIGFzIE1ldGFcblxuICAgICAgICBjb25zdCBwcm9wczogUmVjb3JkPHN0cmluZywgUGFyYW1TcGVjPHVua25vd24+PiA9IGZyb21FbnRyaWVzKFxuICAgICAgICAgICAgZW50cmllcyhtZXRhLnByb3BlcnRpZXMgPz8ge30pLm1hcCgoW2ZpZWxkTmFtZSwgeyBmbGFncywgdHlwZSB9XSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGtlYmFiaWZ5KGZpZWxkTmFtZSlcbiAgICAgICAgICAgICAgICBjb25zdCBzcGVjID0gcHNwZWMoa2V5LCBmbGFncywgdHlwZSlcbiAgICAgICAgICAgICAgICByZXR1cm4gW2tleSwgc3BlY11cbiAgICAgICAgICAgIH0pLFxuICAgICAgICApXG5cbiAgICAgICAgY29uc3Qgc2lnbmFscyA9IGZyb21FbnRyaWVzKFxuICAgICAgICAgICAgZW50cmllcyhtZXRhLnNpZ25hbHMgPz8ge30pLm1hcCgoW3NpZ25hbE5hbWUsIHsgZGVmYXVsdDogZGVmLCBtZXRob2QsIC4uLnNpZ25hbCB9XSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChkZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkoY2xzLnByb3RvdHlwZSwgYG9uXyR7c2lnbmFsTmFtZS5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IG1ldGhvZCxcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtzaWduYWxOYW1lLCBzaWduYWxdXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgKVxuXG4gICAgICAgIGRlbGV0ZSBtZXRhLnByb3BlcnRpZXNcbiAgICAgICAgZGVsZXRlIG1ldGEuc2lnbmFsc1xuXG4gICAgICAgIHJlZ2lzdGVyQ2xhc3MoeyAuLi5vcHRpb25zLCBQcm9wZXJ0aWVzOiBwcm9wcywgU2lnbmFsczogc2lnbmFscyB9LCBjbHMpXG4gICAgfVxufVxuXG4vKipcbiAqIEBleHBlcmltZW50YWxcbiAqIEFzc2VydHMgYSBndHlwZSBpbiBjYXNlcyB3aGVyZSB0aGUgdHlwZSBpcyB0b28gbG9vc2Uvc3RyaWN0LlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogdHlwZSBUdXBsZSA9IFtudW1iZXIsIG51bWJlcl1cbiAqIGNvbnN0IFR1cGxlID0gZ3R5cGU8VHVwbGU+KEFycmF5KVxuICpcbiAqIGNsYXNzIHtcbiAqICAgXFxAcHJvcGVydHkoVHVwbGUpIHZhbHVlID0gWzEsIDJdIGFzIFR1cGxlXG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGd0eXBlPEFzc2VydD4odHlwZTogR1R5cGU8YW55PiB8IHsgJGd0eXBlOiBHVHlwZTxhbnk+IH0pOiB7XG4gICAgJGd0eXBlOiBHVHlwZTxBc3NlcnQ+XG59IHtcbiAgICByZXR1cm4gXCIkZ3R5cGVcIiBpbiB0eXBlID8gdHlwZSA6IHsgJGd0eXBlOiB0eXBlIH1cbn1cblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIGludGVyZmFjZSBGdW5jdGlvbkNvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTwoLi4uYXJnczogYW55W10pID0+IGFueT5cbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgQXJyYXlDb25zdHJ1Y3RvciB7XG4gICAgICAgICRndHlwZTogR1R5cGU8YW55W10+XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIERhdGVDb25zdHJ1Y3RvciB7XG4gICAgICAgICRndHlwZTogR1R5cGU8RGF0ZT5cbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgTWFwQ29uc3RydWN0b3Ige1xuICAgICAgICAkZ3R5cGU6IEdUeXBlPE1hcDxhbnksIGFueT4+XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIFNldENvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTxTZXQ8YW55Pj5cbiAgICB9XG59XG5cbkZ1bmN0aW9uLiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgRnVuY3Rpb25Db25zdHJ1Y3RvcltcIiRndHlwZVwiXVxuQXJyYXkuJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBBcnJheUNvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG5EYXRlLiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgRGF0ZUNvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG5NYXAuJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBNYXBDb25zdHJ1Y3RvcltcIiRndHlwZVwiXVxuU2V0LiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgU2V0Q29uc3RydWN0b3JbXCIkZ3R5cGVcIl1cbiIsICJpbXBvcnQgXCIuLi9vdmVycmlkZXMuanNcIlxuaW1wb3J0IEdPYmplY3QsIHsgcmVnaXN0ZXIsIHNpZ25hbCwgc2V0dGVyIH0gZnJvbSBcImduaW0vZ29iamVjdFwiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcbmltcG9ydCB7IGdldHRlciB9IGZyb20gXCJnbmltL2dvYmplY3RcIlxuaW1wb3J0IHsgQXBwREJ1cyB9IGZyb20gXCIuLi9hcHAvZGJ1cy5qc1wiXG5pbXBvcnQgeyBzZXRDb25zb2xlTG9nRG9tYWluIH0gZnJvbSBcImNvbnNvbGVcIlxuaW1wb3J0IHsgZXhpdCwgcHJvZ3JhbUFyZ3MgfSBmcm9tIFwic3lzdGVtXCJcbmltcG9ydCB7IGNyZWF0ZVJvb3QgfSBmcm9tIFwiZ25pbVwiXG5cbkd0ay5pbml0KClcblxuLy8gc3RvcCB0aGlzIGZyb20gbGVha2luZyBpbnRvIHN1YnByb2Nlc3Nlc1xuLy8gYW5kIGdpbyBsYXVuY2ggaW52b2NhdGlvbnNcbkdMaWIudW5zZXRlbnYoXCJMRF9QUkVMT0FEXCIpXG5cbi8vIHVzZXJzIG1pZ2h0IHdhbnQgdG8gdXNlIEFkd2FpdGEgaW4gd2hpY2ggY2FzZSBpdCBoYXMgdG8gYmUgaW5pdGlhbGl6ZWRcbi8vIGl0IG1pZ2h0IGJlIGNvbW1vbiBwaXRmYWxsIHRvIGZvcmdldCBpdCBiZWNhdXNlIGBBcHBgIGlzIG5vdCBgQWR3LkFwcGxpY2F0aW9uYFxuYXdhaXQgaW1wb3J0KFwiZ2k6Ly9BZHc/dmVyc2lvbj0xXCIpLnRoZW4oKHsgZGVmYXVsdDogQWR3IH0pID0+IEFkdy5pbml0KCkpLmNhdGNoKCgpID0+IHZvaWQgMClcblxudHlwZSBTdGFydENvbmZpZyA9IFBhcnRpYWw8e1xuICAgIGluc3RhbmNlTmFtZTogc3RyaW5nXG4gICAgY3NzOiBzdHJpbmdcbiAgICBpY29uczogc3RyaW5nXG4gICAgZ3RrVGhlbWU6IHN0cmluZ1xuICAgIGljb25UaGVtZTogc3RyaW5nXG4gICAgY3Vyc29yVGhlbWU6IHN0cmluZ1xuICAgIG1haW4oLi4uYXJndjogc3RyaW5nW10pOiB2b2lkXG4gICAgcmVxdWVzdEhhbmRsZXIoYXJndjogc3RyaW5nW10sIHJlczogKHJlc3BvbnNlOiBhbnkpID0+IHZvaWQpOiB2b2lkXG59PlxuXG5pbnRlcmZhY2UgQXBwU2lnbmFscyBleHRlbmRzIEd0ay5BcHBsaWNhdGlvbi5TaWduYWxTaWduYXR1cmVzIHtcbiAgICBcInJlcXVlc3RcIjogQXBwW1wicmVxdWVzdFwiXVxuICAgIFwid2luZG93LXRvZ2dsZWRcIjogQXBwW1wid2luZG93VG9nZ2xlZFwiXVxufVxuXG5AcmVnaXN0ZXIoKVxuY2xhc3MgQXBwIGV4dGVuZHMgR3RrLkFwcGxpY2F0aW9uIHtcbiAgICBkZWNsYXJlICRzaWduYWxzOiBBcHBTaWduYWxzXG5cbiAgICAjaW5zdGFuY2VOYW1lID0gXCJhZ3NcIlxuICAgICNtYWluPzogKC4uLmFyZ3Y6IHN0cmluZ1tdKSA9PiB2b2lkXG4gICAgI3JlcXVlc3RIYW5kbGVycyA9IDBcbiAgICAjZGJ1c1NlcnZpY2U6IEFwcERCdXNcbiAgICAjY3NzUHJvdmlkZXJzID0gbmV3IEFycmF5PEd0ay5Dc3NQcm92aWRlcj4oKVxuXG4gICAgZ2V0ICNzZXR0aW5ncygpOiBHdGsuU2V0dGluZ3Mge1xuICAgICAgICBjb25zdCBzZXR0aW5ncyA9IEd0ay5TZXR0aW5ncy5nZXRfZGVmYXVsdCgpXG4gICAgICAgIGlmICghc2V0dGluZ3MpIHRocm93IEVycm9yKFwiY291bGQgbm90IGdldCBzZXR0aW5nc1wiKVxuICAgICAgICByZXR1cm4gc2V0dGluZ3NcbiAgICB9XG5cbiAgICBnZXQgI2Rpc3BsYXkoKTogR2RrLkRpc3BsYXkge1xuICAgICAgICBjb25zdCBkaXNwbGF5ID0gR2RrLkRpc3BsYXkuZ2V0X2RlZmF1bHQoKVxuICAgICAgICBpZiAoIWRpc3BsYXkpIHRocm93IEVycm9yKFwiY291bGQgbm90IGdldCBkaXNwbGF5XCIpXG4gICAgICAgIHJldHVybiBkaXNwbGF5XG4gICAgfVxuXG4gICAgZ2V0IGluc3RhbmNlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI2luc3RhbmNlTmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBhbGwgbW9uaXRvcnMgZnJvbSB7QGxpbmsgR2RrLkRpc3BsYXl9LlxuICAgICAqL1xuICAgIGdldF9tb25pdG9ycygpIHtcbiAgICAgICAgY29uc3QgbW9ucyA9IHRoaXMuI2Rpc3BsYXkuZ2V0X21vbml0b3JzKCkgYXMgR2lvLkxpc3RNb2RlbDxHZGsuTW9uaXRvcj5cbiAgICAgICAgY29uc3QgbGlzdCA9IG5ldyBBcnJheTxHZGsuTW9uaXRvcj4oKVxuXG4gICAgICAgIGxldCBtb25pdG9yOiBHZGsuTW9uaXRvciB8IG51bGwgPSBudWxsXG4gICAgICAgIGxldCBpID0gMFxuXG4gICAgICAgIHdoaWxlICgobW9uaXRvciA9IG1vbnMuZ2V0X2l0ZW0oaSsrKSkgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGxpc3QucHVzaChtb25pdG9yKVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGxpc3RcbiAgICB9XG5cbiAgICBAc2lnbmFsKEd0ay5XaW5kb3cpXG4gICAgcHJpdmF0ZSB3aW5kb3dUb2dnbGVkKHdpbmRvdzogR3RrLldpbmRvdykge1xuICAgICAgICB2b2lkIHdpbmRvd1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBhbGwgbW9uaXRvcnMgZnJvbSB7QGxpbmsgR2RrLkRpc3BsYXl9LlxuICAgICAqL1xuICAgIEBnZXR0ZXIoQXJyYXkpXG4gICAgZ2V0IG1vbml0b3JzKCk6IEFycmF5PEdkay5Nb25pdG9yPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldF9tb25pdG9ycygpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogV2luZG93cyB0aGF0IGhhcyBiZWVuIGFkZGVkIHRvIHRoaXMgYXBwXG4gICAgICogdXNpbmcge0BsaW5rIEd0ay5BcHBsaWNhdGlvbi5wcm90b3R5cGUuYWRkX3dpbmRvd30uXG4gICAgICovXG4gICAgQGdldHRlcihBcnJheSlcbiAgICBnZXQgd2luZG93cygpOiBBcnJheTxHdGsuV2luZG93PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldF93aW5kb3dzKClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBzZXR0ZXIoU3RyaW5nKVxuICAgIHNldCBndGtUaGVtZShuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy4jc2V0dGluZ3MuZ3RrVGhlbWVOYW1lID0gbmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtUaGVtZU5hbWV9XG4gICAgICovXG4gICAgQGdldHRlcihTdHJpbmcpXG4gICAgZ2V0IGd0a1RoZW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jc2V0dGluZ3MuZ3RrVGhlbWVOYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a0ljb25UaGVtZU5hbWV9XG4gICAgICovXG4gICAgQHNldHRlcihTdHJpbmcpXG4gICAgc2V0IGljb25UaGVtZShuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy4jc2V0dGluZ3MuZ3RrSWNvblRoZW1lTmFtZSA9IG5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrSWNvblRoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAZ2V0dGVyKFN0cmluZylcbiAgICBnZXQgaWNvblRoZW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jc2V0dGluZ3MuZ3RrSWNvblRoZW1lTmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtDdXJzb3JUaGVtZU5hbWV9XG4gICAgICovXG4gICAgQHNldHRlcihTdHJpbmcpXG4gICAgc2V0IGN1cnNvclRoZW1lKG5hbWU6IHN0cmluZykge1xuICAgICAgICB0aGlzLiNzZXR0aW5ncy5ndGtDdXJzb3JUaGVtZU5hbWUgPSBuYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a0N1cnNvclRoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAZ2V0dGVyKFN0cmluZylcbiAgICBnZXQgY3Vyc29yVGhlbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNzZXR0aW5ncy5ndGtDdXJzb3JUaGVtZU5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgYSB3aW5kb3cgYnkgaXRzIHtAbGluayBHdGsuV2lkZ2V0LnByb3RvdHlwZS5uYW1lfSB0aGF0IGhhcyBiZWVuIGFkZGVkIHRvIHRoaXMgYXBwXG4gICAgICogdXNpbmcge0BsaW5rIEd0ay5BcHBsaWNhdGlvbi5wcm90b3R5cGUuYWRkX3dpbmRvd30uXG4gICAgICovXG4gICAgZ2V0X3dpbmRvdyhuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMud2luZG93cy5maW5kKCh3KSA9PiB3Lm5hbWUgPT09IG5hbWUpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVG9nZ2xlIHRoZSB2aXNpYmlsaXR5IG9mIGEgd2luZG93IGJ5IGl0cyB7QGxpbmsgR3RrLldpZGdldC5wcm90b3R5cGUubmFtZX1cbiAgICAgKiB0aGF0IGhhcyBiZWVuIGFkZGVkIHRvIHRoaXMgYXBwIHVzaW5nIHtAbGluayBHdGsuQXBwbGljYXRpb24ucHJvdG90eXBlLmFkZF93aW5kb3d9LlxuICAgICAqL1xuICAgIHRvZ2dsZV93aW5kb3cobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IHdpbiA9IHRoaXMuZ2V0X3dpbmRvdyhuYW1lKVxuICAgICAgICBpZiAoIXdpbikgdGhyb3cgRXJyb3IoYG5vIHdpbmRvdyByZWdpc3RlcmVkIHdpdGggbmFtZSBcIiR7bmFtZX1cImApXG4gICAgICAgIHdpbi52aXNpYmxlID0gIXdpbi52aXNpYmxlXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVzZXQgcHJldmlvdXNseSBzZXQgY3NzIHByb3ZpZGVycyB3aXRoIHtAbGluayBBcHAucHJvdG90eXBlLmFwcGx5X2Nzc30uXG4gICAgICovXG4gICAgcmVzZXRfY3NzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IHByb3ZpZGVyIG9mIHRoaXMuI2Nzc1Byb3ZpZGVycykge1xuICAgICAgICAgICAgR3RrLlN0eWxlQ29udGV4dC5yZW1vdmVfcHJvdmlkZXJfZm9yX2Rpc3BsYXkodGhpcy4jZGlzcGxheSwgcHJvdmlkZXIpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgYSBuZXcge0BsaW5rIEd0ay5Dc3NQcm92aWRlcn0uXG4gICAgICogQHBhcmFtIHN0eWxlIENzcyBzdHJpbmcgb3IgYSBwYXRoIHRvIGEgY3NzIGZpbGUuXG4gICAgICovXG4gICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0ID0gZmFsc2UpIHtcbiAgICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgR3RrLkNzc1Byb3ZpZGVyKClcblxuICAgICAgICBwcm92aWRlci5jb25uZWN0KFwicGFyc2luZy1lcnJvclwiLCAoXywgc2VjdGlvbiwgZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBzZWN0aW9uLmdldF9maWxlKCk/LmdldF9iYXNlbmFtZSgpID8/IFwiXCJcbiAgICAgICAgICAgIGNvbnN0IGxpbmUgPSBzZWN0aW9uLmdldF9zdGFydF9sb2NhdGlvbigpLmxpbmVzICsgMVxuICAgICAgICAgICAgY29uc3QgY2hhcnMgPSBzZWN0aW9uLmdldF9zdGFydF9sb2NhdGlvbigpLmxpbmVfY2hhcnMgKyAxXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBDU1MgRXJyb3IgJHtuYW1lfToke2xpbmV9OiR7Y2hhcnN9ICR7ZXJyb3IubWVzc2FnZX1gKVxuICAgICAgICB9KVxuXG4gICAgICAgIGlmIChyZXNldCkgdGhpcy5yZXNldF9jc3MoKVxuXG4gICAgICAgIGlmIChHTGliLmZpbGVfdGVzdChzdHlsZSwgR0xpYi5GaWxlVGVzdC5FWElTVFMpKSB7XG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fcGF0aChzdHlsZSlcbiAgICAgICAgfSBlbHNlIGlmIChzdHlsZS5zdGFydHNXaXRoKFwicmVzb3VyY2U6Ly9cIikpIHtcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9yZXNvdXJjZShzdHlsZS5yZXBsYWNlKFwicmVzb3VyY2U6Ly9cIiwgXCJcIikpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fc3RyaW5nKHN0eWxlKVxuICAgICAgICB9XG5cbiAgICAgICAgR3RrLlN0eWxlQ29udGV4dC5hZGRfcHJvdmlkZXJfZm9yX2Rpc3BsYXkoXG4gICAgICAgICAgICB0aGlzLiNkaXNwbGF5LFxuICAgICAgICAgICAgcHJvdmlkZXIsXG4gICAgICAgICAgICBHdGsuU1RZTEVfUFJPVklERVJfUFJJT1JJVFlfVVNFUixcbiAgICAgICAgKVxuXG4gICAgICAgIHRoaXMuI2Nzc1Byb3ZpZGVycy5wdXNoKHByb3ZpZGVyKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLkljb25UaGVtZS5wcm90b3R5cGUuYWRkX3NlYXJjaF9wYXRofS5cbiAgICAgKi9cbiAgICBhZGRfaWNvbnMocGF0aDogc3RyaW5nKSB7XG4gICAgICAgIEd0ay5JY29uVGhlbWUuZ2V0X2Zvcl9kaXNwbGF5KHRoaXMuI2Rpc3BsYXkpLmFkZF9zZWFyY2hfcGF0aChwYXRoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFF1aXQgYW5kIGV4aXQgdGhlIGFwcGxpY2F0aW9uLlxuICAgICAqL1xuICAgIHF1aXQoY29kZSA9IDApIHtcbiAgICAgICAgdGhpcy4jZGJ1c1NlcnZpY2Uuc3RvcCgpXG4gICAgICAgIHN1cGVyLnF1aXQoKVxuICAgICAgICBleGl0KGNvZGUpXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKHsgZmxhZ3M6IEdpby5BcHBsaWNhdGlvbkZsYWdzLkhBTkRMRVNfQ09NTUFORF9MSU5FIH0pXG5cbiAgICAgICAgdGhpcy4jZGJ1c1NlcnZpY2UgPSBuZXcgQXBwREJ1cyh7XG4gICAgICAgICAgICB0b2dnbGVXaW5kb3c6IHRoaXMudG9nZ2xlX3dpbmRvdy5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgcXVpdDogdGhpcy5xdWl0LmJpbmQodGhpcyksXG4gICAgICAgICAgICByZXF1ZXN0OiAoYXJndikgPT4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHRoaXMucmVxdWVzdChhcmd2LCByZXNvbHZlKSksXG4gICAgICAgICAgICBpbnNlY3RvcjogKCkgPT4ge1xuICAgICAgICAgICAgICAgIEd0ay5XaW5kb3cuc2V0X2ludGVyYWN0aXZlX2RlYnVnZ2luZyh0cnVlKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLiNkaXNwbGF5LmdldF9tb25pdG9ycygpLmNvbm5lY3QoXCJpdGVtcy1jaGFuZ2VkXCIsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMubm90aWZ5KFwibW9uaXRvcnNcIilcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLmNvbm5lY3QoXCJ3aW5kb3ctYWRkZWRcIiwgKF8sIHdpbmRvdykgPT4ge1xuICAgICAgICAgICAgY29uc3QgaWQxID0gd2luZG93LmNvbm5lY3QoXCJub3RpZnk6OnZpc2libGVcIiwgKCkgPT4gdGhpcy53aW5kb3dUb2dnbGVkKHdpbmRvdykpXG4gICAgICAgICAgICBjb25zdCBpZDIgPSB0aGlzLmNvbm5lY3QoXCJ3aW5kb3ctcmVtb3ZlZFwiLCAoXywgcmVtb3ZlZCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChyZW1vdmVkID09IHdpbmRvdykge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuZGlzY29ubmVjdChpZDEpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzY29ubmVjdChpZDIpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLiNzZXR0aW5ncy5jb25uZWN0KFwibm90aWZ5XCIsIChfLCB7IG5hbWUgfSkgPT4ge1xuICAgICAgICAgICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcImd0ay10aGVtZS1uYW1lXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KFwiZ3RrLXRoZW1lXCIpXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgICAgY2FzZSBcImd0ay1pY29uLXRoZW1lLW5hbWVcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3RpZnkoXCJpY29uLXRoZW1lXCIpXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgICAgY2FzZSBcImd0ay1jdXJzb3ItdGhlbWUtbmFtZVwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShcImN1cnNvci10aGVtZVwiKVxuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgQHNpZ25hbChBcnJheSwgRnVuY3Rpb24pXG4gICAgcHJpdmF0ZSByZXF1ZXN0KGFyZ3M6IHN0cmluZ1tdLCByZXNwb25zZTogKHJlc3BvbnNlOiBzdHJpbmcpID0+IHZvaWQpIHtcbiAgICAgICAgaWYgKHRoaXMuI3JlcXVlc3RIYW5kbGVycyA9PT0gMCkge1xuICAgICAgICAgICAgcmVzcG9uc2UoYGluc3RhbmNlIFwiJHt0aGlzLmluc3RhbmNlTmFtZX1cIiBoYXMgbm8gcmVxdWVzdCBoYW5kbGVyIGltcGxlbWVudGVkYClcbiAgICAgICAgfVxuICAgICAgICB2b2lkIGFyZ3NcbiAgICB9XG5cbiAgICB2ZnVuY19jb21tYW5kX2xpbmUoY21kOiBHaW8uQXBwbGljYXRpb25Db21tYW5kTGluZSk6IG51bWJlciB7XG4gICAgICAgIGlmIChjbWQuaXNSZW1vdGUpIHtcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdChjbWQuZ2V0X2FyZ3VtZW50cygpLCAoc3RyKSA9PiB7XG4gICAgICAgICAgICAgICAgY21kLnByaW50X2xpdGVyYWwoc3RyICsgXCJcXG5cIilcbiAgICAgICAgICAgICAgICBjbWQuZG9uZSgpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5ob2xkKClcbiAgICAgICAgICAgIHRoaXMuI2RidXNTZXJ2aWNlLnNlcnZlKHtcbiAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLmFwcGxpY2F0aW9uSWQsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdChcInNodXRkb3duXCIsIGRpc3Bvc2UpXG4gICAgICAgICAgICAgICAgdGhpcy4jbWFpbj8uKC4uLnByb2dyYW1BcmdzKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAwXG4gICAgfVxuXG4gICAgc3RhcnQoY29uZmlnOiBTdGFydENvbmZpZykge1xuICAgICAgICBjb25zdCB7IG1haW4sIHJlcXVlc3RIYW5kbGVyLCBpbnN0YW5jZU5hbWUsIGNzcywgaWNvbnMsIC4uLmNmZyB9ID0gY29uZmlnXG5cbiAgICAgICAgdGhpcy4jbWFpbiA9IG1haW5cbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjZmcpXG5cbiAgICAgICAgaWYgKHJlcXVlc3RIYW5kbGVyKSB7XG4gICAgICAgICAgICB0aGlzLmNvbm5lY3QoXCJyZXF1ZXN0XCIsIChfLCBhcmdzLCByZXNwb25zZSkgPT4gcmVxdWVzdEhhbmRsZXIoYXJncywgcmVzcG9uc2UpKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGluc3RhbmNlTmFtZSkgdGhpcy4jaW5zdGFuY2VOYW1lID0gaW5zdGFuY2VOYW1lXG4gICAgICAgIGlmIChjc3MpIHRoaXMuYXBwbHlfY3NzKGNzcywgZmFsc2UpXG4gICAgICAgIGlmIChpY29ucykgYXBwLmFkZF9pY29ucyhpY29ucylcblxuICAgICAgICB0aGlzLmFwcGxpY2F0aW9uSWQgPSBcImlvLkFzdGFsLlwiICsgdGhpcy5pbnN0YW5jZU5hbWVcbiAgICAgICAgc2V0Q29uc29sZUxvZ0RvbWFpbih0aGlzLmluc3RhbmNlTmFtZSlcbiAgICAgICAgdGhpcy5ydW5Bc3luYyhwcm9ncmFtQXJncylcbiAgICB9XG5cbiAgICBjb25uZWN0PFMgZXh0ZW5kcyBrZXlvZiBBcHBTaWduYWxzPihcbiAgICAgICAgc2lnbmFsOiBTLFxuICAgICAgICBjYWxsYmFjazogR09iamVjdC5TaWduYWxDYWxsYmFjazx0aGlzLCBBcHBTaWduYWxzW1NdPixcbiAgICApOiBudW1iZXIge1xuICAgICAgICBpZiAoc2lnbmFsID09PSBcInJlcXVlc3RcIikgdGhpcy4jcmVxdWVzdEhhbmRsZXJzICs9IDFcbiAgICAgICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaylcbiAgICB9XG59XG5cbmNvbnN0IGFwcCA9IG5ldyBBcHAoKVxuZXhwb3J0IGRlZmF1bHQgYXBwXG4iLCAiLyoqXG4gKiBBIHtAbGluayBTZXJ2aWNlfSBjdXJyZW50bHkgb25seSBhbGxvd3MgaW50ZXJmYWNpbmcgd2l0aCBhIHNpbmdsZSBpbnRlcmZhY2Ugb2YgYSByZW1vdGUgb2JqZWN0LlxuICogSW4gdGhlIGZ1dHVyZSBJIHdhbnQgdG8gY29tZSB1cCB3aXRoIGFuIEFQSSB0byBiZSBhYmxlIHRvIGNyZWF0ZSBTZXJ2aWNlIG9iamVjdHMgZm9yIG11bHRpcGxlXG4gKiBpbnRlcmZhY2VzIG9mIGFuIG9iamVjdCBhdCB0aGUgc2FtZSB0aW1lLiBFeGFtcGxlIHVzYWdlIHdvdWxkIGJlIGZvciBleGFtcGxlIGNvbWJpbmluZ1xuICogXCJvcmcubXByaXMuTWVkaWFQbGF5ZXIyXCIgYW5kIFwib3JnLm1wcmlzLk1lZGlhUGxheWVyMi5QbGF5ZXJcIiBpbnRvIGEgc2luZ2xlIG9iamVjdC5cbiAqL1xuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW9cIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiXG5pbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IGRlZmluZVByb3BlcnR5R2V0dGVyLCBrZWJhYmlmeSwgeG1sIH0gZnJvbSBcIi4vdXRpbC5qc1wiXG5pbXBvcnQgdHlwZSB7IERlZXBJbmZlciB9IGZyb20gXCIuL3ZhcmlhbnQuanNcIlxuaW1wb3J0IHtcbiAgICByZWdpc3RlcixcbiAgICBwcm9wZXJ0eSBhcyBncHJvcGVydHksXG4gICAgc2lnbmFsIGFzIGdzaWduYWwsXG4gICAgZ2V0dGVyIGFzIGdnZXR0ZXIsXG4gICAgc2V0dGVyIGFzIGdzZXR0ZXIsXG59IGZyb20gXCIuL2dvYmplY3QuanNcIlxuXG5jb25zdCBERUZBVUxUX1RJTUVPVVQgPSAxMF8wMDBcblxuZXhwb3J0IGNvbnN0IFZhcmlhbnQgPSBHTGliLlZhcmlhbnRcbmV4cG9ydCB0eXBlIFZhcmlhbnQ8VCBleHRlbmRzIHN0cmluZz4gPSBHTGliLlZhcmlhbnQ8VD5cblxuY29uc3QgaW5mbyA9IFN5bWJvbChcImRidXMgaW50ZXJmYWNlIGluZm9cIilcbmNvbnN0IGludGVybmFscyA9IFN5bWJvbChcImRidXMgaW50ZXJmYWNlIGludGVybmFsc1wiKVxuY29uc3QgcmVtb3RlTWV0aG9kID0gU3ltYm9sKFwicHJveHkgcmVtb3RlTWV0aG9kXCIpXG5jb25zdCByZW1vdGVNZXRob2RBc3luYyA9IFN5bWJvbChcInByb3h5IHJlbW90ZU1ldGhvZEFzeW5jXCIpXG5jb25zdCByZW1vdGVQcm9wZXJ0eVNldCA9IFN5bWJvbChcInByb3h5IHJlbW90ZVByb3BlcnR5U2V0XCIpXG5cbnR5cGUgQ3R4ID0geyBwcml2YXRlOiBmYWxzZTsgc3RhdGljOiBmYWxzZTsgbmFtZTogc3RyaW5nIH1cblxuLyoqXG4gKiBCYXNlIHR5cGUgZm9yIERCdXMgc2VydmljZXMgYW5kIHByb3hpZXMuIEludGVyZmFjZSBuYW1lIGlzIHNldCB3aXRoXG4gKiB0aGUge0BsaW5rIGlmYWNlfSBkZWNvcmF0b3Igd2hpY2ggYWxzbyByZWdpc3RlciBpdCBhcyBhIEdPYmplY3QgdHlwZS5cbiAqL1xuZXhwb3J0IGNsYXNzIFNlcnZpY2UgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgc3RhdGljIFtpbmZvXT86IEdpby5EQnVzSW50ZXJmYWNlSW5mb1xuXG4gICAgc3RhdGljIHtcbiAgICAgICAgR09iamVjdC5yZWdpc3RlckNsYXNzKHRoaXMpXG4gICAgfVxuXG4gICAgW2ludGVybmFsc106IHtcbiAgICAgICAgZGJ1c09iamVjdD86IEdpby5EQnVzRXhwb3J0ZWRPYmplY3RcbiAgICAgICAgcHJveHk/OiBHaW8uREJ1c1Byb3h5XG4gICAgICAgIHByaXY6IFJlY29yZDxzdHJpbmcgfCBzeW1ib2wsIHVua25vd24+XG4gICAgICAgIG9uU3RvcDogU2V0PCgpID0+IHZvaWQ+XG4gICAgfSA9IHtcbiAgICAgICAgcHJpdjoge30sXG4gICAgICAgIG9uU3RvcDogbmV3IFNldDwoKSA9PiB2b2lkPigpLFxuICAgIH1cblxuICAgICNpbmZvOiBHaW8uREJ1c0ludGVyZmFjZUluZm9cblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIGNvbnN0IHNlcnZpY2UgPSB0aGlzLmNvbnN0cnVjdG9yIGFzIHVua25vd24gYXMgdHlwZW9mIFNlcnZpY2VcbiAgICAgICAgaWYgKCFzZXJ2aWNlW2luZm9dKSB0aHJvdyBFcnJvcihcIm1pc3NpbmcgaW50ZXJmYWNlIGluZm9cIilcbiAgICAgICAgdGhpcy4jaW5mbyA9IHNlcnZpY2VbaW5mb11cbiAgICB9XG5cbiAgICBub3RpZnkocHJvcGVydHlOYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4gfCAoc3RyaW5nICYge30pKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IHByb3AgPSB0aGlzLiNpbmZvLmxvb2t1cF9wcm9wZXJ0eShwcm9wZXJ0eU5hbWUpXG5cbiAgICAgICAgaWYgKHByb3AgJiYgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QpIHtcbiAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0LmVtaXRfcHJvcGVydHlfY2hhbmdlZChcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eU5hbWUsXG4gICAgICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChwcm9wLnNpZ25hdHVyZSwgdGhpc1twcm9wZXJ0eU5hbWUgYXMga2V5b2YgdGhpc10pLFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgc3VwZXIubm90aWZ5KHByb3AgPyBrZWJhYmlmeShwcm9wZXJ0eU5hbWUpIDogcHJvcGVydHlOYW1lKVxuICAgIH1cblxuICAgIGVtaXQobmFtZTogc3RyaW5nLCAuLi5wYXJhbXM6IHVua25vd25bXSk6IHZvaWQge1xuICAgICAgICBjb25zdCBzaWduYWwgPSB0aGlzLiNpbmZvLmxvb2t1cF9zaWduYWwobmFtZSlcblxuICAgICAgICBpZiAoc2lnbmFsICYmIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0KSB7XG4gICAgICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBgKCR7c2lnbmFsLmFyZ3MubWFwKChhKSA9PiBhLnNpZ25hdHVyZSkuam9pbihcIlwiKX0pYFxuICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QuZW1pdF9zaWduYWwobmFtZSwgbmV3IEdMaWIuVmFyaWFudChzaWduYXR1cmUsIHBhcmFtcykpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gc3VwZXIuZW1pdChzaWduYWwgPyBrZWJhYmlmeShuYW1lKSA6IG5hbWUsIC4uLnBhcmFtcylcbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjaGFuZGxlUHJvcGVydHlHZXQoXzogR2lvLkRCdXNFeHBvcnRlZE9iamVjdCwgcHJvcGVydHlOYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4pIHtcbiAgICAgICAgY29uc3QgcHJvcCA9IHRoaXMuI2luZm8ubG9va3VwX3Byb3BlcnR5KHByb3BlcnR5TmFtZSlcblxuICAgICAgICBpZiAoIXByb3ApIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0gaGFzIG5vIGV4cG9ydGVkIHByb3BlcnR5OiBcIiR7cHJvcGVydHlOYW1lfVwiYClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpc1twcm9wZXJ0eU5hbWVdXG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgR0xpYi5WYXJpYW50KHByb3Auc2lnbmF0dXJlLCB2YWx1ZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjaGFuZGxlUHJvcGVydHlTZXQoXG4gICAgICAgIF86IEdpby5EQnVzRXhwb3J0ZWRPYmplY3QsXG4gICAgICAgIHByb3BlcnR5TmFtZTogRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+LFxuICAgICAgICB2YWx1ZTogR0xpYi5WYXJpYW50LFxuICAgICkge1xuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHZhbHVlLmRlZXBVbnBhY2soKVxuICAgICAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkocHJvcGVydHlOYW1lKVxuXG4gICAgICAgIGlmICghcHJvcCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYCR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfSBoYXMgbm8gcHJvcGVydHk6IFwiJHtwcm9wZXJ0eU5hbWV9XCJgKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXNbcHJvcGVydHlOYW1lXSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXNbcHJvcGVydHlOYW1lXSA9IHZhbHVlLmRlZXBVbnBhY2s8YW55PigpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjcmV0dXJuRXJyb3IoZXJyb3I6IHVua25vd24sIGludm9jYXRpb246IEdpby5EQnVzTWV0aG9kSW52b2NhdGlvbikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKVxuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBHTGliLkVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gaW52b2NhdGlvbi5yZXR1cm5fZ2Vycm9yKGVycm9yKVxuICAgICAgICB9XG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gaW52b2NhdGlvbi5yZXR1cm5fZGJ1c19lcnJvcihcbiAgICAgICAgICAgICAgICBlcnJvci5uYW1lLmluY2x1ZGVzKFwiLlwiKSA/IGVycm9yLm5hbWUgOiBgZ2pzLkpTRXJyb3IuJHtlcnJvci5uYW1lfWAsXG4gICAgICAgICAgICAgICAgZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgICBpbnZvY2F0aW9uLnJldHVybl9kYnVzX2Vycm9yKFwiZ2pzLkRCdXNTZXJ2aWNlLlVua25vd25FcnJvclwiLCBgJHtlcnJvcn1gKVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgICNyZXR1cm5WYWx1ZSh2YWx1ZTogdW5rbm93biwgbWV0aG9kTmFtZTogc3RyaW5nLCBpbnZvY2F0aW9uOiBHaW8uREJ1c01ldGhvZEludm9jYXRpb24pIHtcbiAgICAgICAgaWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnZvY2F0aW9uLnJldHVybl92YWx1ZShuZXcgR0xpYi5WYXJpYW50KFwiKClcIiwgW10pKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgYXJncyA9IHRoaXMuI2luZm8ubG9va3VwX21ldGhvZChtZXRob2ROYW1lKT8ub3V0X2FyZ3MgPz8gW11cbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYCgke2FyZ3MubWFwKChhcmcpID0+IGFyZy5zaWduYXR1cmUpLmpvaW4oXCJcIil9KWBcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkgdGhyb3cgRXJyb3IoXCJ2YWx1ZSBoYXMgdG8gYmUgYSB0dXBsZVwiKVxuICAgICAgICBpbnZvY2F0aW9uLnJldHVybl92YWx1ZShuZXcgR0xpYi5WYXJpYW50KHNpZ25hdHVyZSwgdmFsdWUpKVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgICNoYW5kbGVNZXRob2RDYWxsKFxuICAgICAgICBfOiBHaW8uREJ1c0V4cG9ydGVkT2JqZWN0LFxuICAgICAgICBtZXRob2ROYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4sXG4gICAgICAgIHBhcmFtZXRlcnM6IEdMaWIuVmFyaWFudCxcbiAgICAgICAgaW52b2NhdGlvbjogR2lvLkRCdXNNZXRob2RJbnZvY2F0aW9uLFxuICAgICk6IHZvaWQge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSAodGhpc1ttZXRob2ROYW1lXSBhcyAoLi4uYXJnczogdW5rbm93bltdKSA9PiB1bmtub3duKShcbiAgICAgICAgICAgICAgICAuLi5wYXJhbWV0ZXJzLmRlZXBVbnBhY2s8QXJyYXk8dW5rbm93bj4+KCksXG4gICAgICAgICAgICApXG5cbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEdMaWIuVmFyaWFudCkge1xuICAgICAgICAgICAgICAgIGludm9jYXRpb24ucmV0dXJuX3ZhbHVlKHZhbHVlKVxuICAgICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICAudGhlbigodmFsdWUpID0+IHRoaXMuI3JldHVyblZhbHVlKHZhbHVlLCBtZXRob2ROYW1lLCBpbnZvY2F0aW9uKSlcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gdGhpcy4jcmV0dXJuRXJyb3IoZXJyb3IsIGludm9jYXRpb24pKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLiNyZXR1cm5WYWx1ZSh2YWx1ZSwgbWV0aG9kTmFtZSwgaW52b2NhdGlvbilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHRoaXMuI3JldHVybkVycm9yKGVycm9yLCBpbnZvY2F0aW9uKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gc2VydmVyXG4gICAgYXN5bmMgc2VydmUoe1xuICAgICAgICBidXNUeXBlID0gR2lvLkJ1c1R5cGUuU0VTU0lPTixcbiAgICAgICAgbmFtZSA9IHRoaXMuI2luZm8ubmFtZSxcbiAgICAgICAgb2JqZWN0UGF0aCA9IFwiL1wiICsgdGhpcy4jaW5mby5uYW1lLnNwbGl0KFwiLlwiKS5qb2luKFwiL1wiKSxcbiAgICAgICAgZmxhZ3MgPSBHaW8uQnVzTmFtZU93bmVyRmxhZ3MuTk9ORSxcbiAgICAgICAgdGltZW91dCA9IERFRkFVTFRfVElNRU9VVCxcbiAgICB9OiB7XG4gICAgICAgIGJ1c1R5cGU/OiBHaW8uQnVzVHlwZVxuICAgICAgICBuYW1lPzogc3RyaW5nXG4gICAgICAgIG9iamVjdFBhdGg/OiBzdHJpbmdcbiAgICAgICAgZmxhZ3M/OiBHaW8uQnVzTmFtZU93bmVyRmxhZ3NcbiAgICAgICAgdGltZW91dD86IG51bWJlclxuICAgIH0gPSB7fSk6IFByb21pc2U8dGhpcz4ge1xuICAgICAgICBjb25zdCBpbXBsID0gbmV3IEdpby5EQnVzRXhwb3J0ZWRPYmplY3QoXG4gICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIG1pc3NpbmcgY29uc3RydWN0b3IgdHlwZVxuICAgICAgICAgICAgeyBnX2ludGVyZmFjZV9pbmZvOiB0aGlzLiNpbmZvIH0sXG4gICAgICAgIClcblxuICAgICAgICBpbXBsLmNvbm5lY3QoXCJoYW5kbGUtbWV0aG9kLWNhbGxcIiwgdGhpcy4jaGFuZGxlTWV0aG9kQ2FsbC5iaW5kKHRoaXMpKVxuICAgICAgICBpbXBsLmNvbm5lY3QoXCJoYW5kbGUtcHJvcGVydHktZ2V0XCIsIHRoaXMuI2hhbmRsZVByb3BlcnR5R2V0LmJpbmQodGhpcykpXG4gICAgICAgIGltcGwuY29ubmVjdChcImhhbmRsZS1wcm9wZXJ0eS1zZXRcIiwgdGhpcy4jaGFuZGxlUHJvcGVydHlTZXQuYmluZCh0aGlzKSlcblxuICAgICAgICB0aGlzLiNpbmZvLmNhY2hlX2J1aWxkKClcblxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgbGV0IHNvdXJjZSA9XG4gICAgICAgICAgICAgICAgdGltZW91dCA+IDBcbiAgICAgICAgICAgICAgICAgICAgPyBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KEVycm9yKGBzZXJ2ZSB0aW1lZCBvdXRgKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgIH0sIHRpbWVvdXQpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuXG4gICAgICAgICAgICBjb25zdCBjbGVhciA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChzb3VyY2UpXG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZSA9IG51bGxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGJ1c0lkID0gR2lvLmJ1c19vd25fbmFtZShcbiAgICAgICAgICAgICAgICBidXNUeXBlLFxuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgZmxhZ3MsXG4gICAgICAgICAgICAgICAgKGNvbm46IEdpby5EQnVzQ29ubmVjdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW1wbC5leHBvcnQoY29ubiwgb2JqZWN0UGF0aClcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0ID0gaW1wbFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLm9uU3RvcC5hZGQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdpby5idXNfdW5vd25fbmFtZShidXNJZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbXBsLnVuZXhwb3J0KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiNpbmZvLmNhY2hlX3JlbGVhc2UoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzKVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjbGVhcixcbiAgICAgICAgICAgICAgICBjbGVhcixcbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgICNoYW5kbGVQcm9wZXJ0aWVzQ2hhbmdlZChcbiAgICAgICAgXzogR2lvLkRCdXNQcm94eSxcbiAgICAgICAgY2hhbmdlZDogR0xpYi5WYXJpYW50PFwiYXtzdn1cIj4sXG4gICAgICAgIGludmFsaWRhdGVkOiBzdHJpbmdbXSxcbiAgICApIHtcbiAgICAgICAgY29uc3Qgc2V0ID0gbmV3IFNldChbLi4uT2JqZWN0LmtleXMoY2hhbmdlZC5kZWVwVW5wYWNrKCkpLCAuLi5pbnZhbGlkYXRlZF0pXG4gICAgICAgIGZvciAoY29uc3QgcHJvcCBvZiBzZXQudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIHRoaXMubm90aWZ5KHByb3AgYXMgRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICAjaGFuZGxlU2lnbmFsKFxuICAgICAgICBfOiBHaW8uREJ1c1Byb3h5LFxuICAgICAgICBfc2VuZGVyOiBzdHJpbmcgfCBudWxsLFxuICAgICAgICBzaWduYWw6IHN0cmluZyxcbiAgICAgICAgcGFyYW1ldGVyczogR0xpYi5WYXJpYW50LFxuICAgICkge1xuICAgICAgICB0aGlzLmVtaXQoa2ViYWJpZnkoc2lnbmFsKSwgLi4ucGFyYW1ldGVycy5kZWVwVW5wYWNrPEFycmF5PHVua25vd24+PigpKVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgI3JlbW90ZU1ldGhvZFBhcmFtcyhcbiAgICAgICAgbWV0aG9kTmFtZTogc3RyaW5nLFxuICAgICAgICBhcmdzOiB1bmtub3duW10sXG4gICAgKTogUGFyYW1ldGVyczxHaW8uREJ1c1Byb3h5W1wiY2FsbF9zeW5jXCJdPiB7XG4gICAgICAgIGNvbnN0IHsgcHJveHkgfSA9IHRoaXNbaW50ZXJuYWxzXVxuICAgICAgICBpZiAoIXByb3h5KSB0aHJvdyBFcnJvcihcImludmFsaWQgcmVtb3RlTWV0aG9kIGludm9jYXRpb246IG5vdCBhIHByb3h5XCIpXG5cbiAgICAgICAgY29uc3QgbWV0aG9kID0gdGhpcy4jaW5mby5sb29rdXBfbWV0aG9kKG1ldGhvZE5hbWUpXG4gICAgICAgIGlmICghbWV0aG9kKSB0aHJvdyBFcnJvcihcIm1ldGhvZCBub3QgZm91bmRcIilcblxuICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBgKCR7bWV0aG9kLmluX2FyZ3MubWFwKChhKSA9PiBhLnNpZ25hdHVyZSkuam9pbihcIlwiKX0pYFxuXG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBtZXRob2ROYW1lLFxuICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChzaWduYXR1cmUsIGFyZ3MpLFxuICAgICAgICAgICAgR2lvLkRCdXNDYWxsRmxhZ3MuTk9ORSxcbiAgICAgICAgICAgIERFRkFVTFRfVElNRU9VVCxcbiAgICAgICAgICAgIG51bGwsXG4gICAgICAgIF1cbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgIFtyZW1vdGVNZXRob2RdKG1ldGhvZE5hbWU6IHN0cmluZywgYXJnczogdW5rbm93bltdKTogR0xpYi5WYXJpYW50IHtcbiAgICAgICAgY29uc3QgcGFyYW1zID0gdGhpcy4jcmVtb3RlTWV0aG9kUGFyYW1zKG1ldGhvZE5hbWUsIGFyZ3MpXG4gICAgICAgIHJldHVybiB0aGlzW2ludGVybmFsc10ucHJveHkhLmNhbGxfc3luYyguLi5wYXJhbXMpXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICBbcmVtb3RlTWV0aG9kQXN5bmNdKG1ldGhvZE5hbWU6IHN0cmluZywgYXJnczogdW5rbm93bltdKTogUHJvbWlzZTxHTGliLlZhcmlhbnQ+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gdGhpcy4jcmVtb3RlTWV0aG9kUGFyYW1zKG1ldGhvZE5hbWUsIGFyZ3MpXG4gICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLnByb3h5IS5jYWxsKC4uLnBhcmFtcywgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzW2ludGVybmFsc10ucHJveHkhLmNhbGxfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICBbcmVtb3RlUHJvcGVydHlTZXRdKG5hbWU6IHN0cmluZywgdmFsdWU6IHVua25vd24pIHtcbiAgICAgICAgY29uc3QgcHJveHkgPSB0aGlzW2ludGVybmFsc10ucHJveHkhXG4gICAgICAgIGNvbnN0IHByb3AgPSB0aGlzLiNpbmZvLmxvb2t1cF9wcm9wZXJ0eShuYW1lKSFcblxuICAgICAgICBjb25zdCB2YXJpYW50ID0gbmV3IEdMaWIuVmFyaWFudChwcm9wLnNpZ25hdHVyZSwgdmFsdWUpXG4gICAgICAgIHByb3h5LnNldF9jYWNoZWRfcHJvcGVydHkobmFtZSwgdmFyaWFudClcblxuICAgICAgICBwcm94eS5jYWxsKFxuICAgICAgICAgICAgXCJvcmcuZnJlZWRlc2t0b3AuREJ1cy5Qcm9wZXJ0aWVzLlNldFwiLFxuICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChcIihzc3YpXCIsIFtwcm94eS5nSW50ZXJmYWNlTmFtZSwgbmFtZSwgdmFyaWFudF0pLFxuICAgICAgICAgICAgR2lvLkRCdXNDYWxsRmxhZ3MuTk9ORSxcbiAgICAgICAgICAgIC0xLFxuICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBwcm94eS5jYWxsX2ZpbmlzaChyZXMpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgKVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgYXN5bmMgcHJveHkoe1xuICAgICAgICBidXMgPSBHaW8uREJ1cy5zZXNzaW9uLFxuICAgICAgICBuYW1lID0gdGhpcy4jaW5mby5uYW1lLFxuICAgICAgICBvYmplY3RQYXRoID0gXCIvXCIgKyB0aGlzLiNpbmZvLm5hbWUuc3BsaXQoXCIuXCIpLmpvaW4oXCIvXCIpLFxuICAgICAgICBmbGFncyA9IEdpby5EQnVzUHJveHlGbGFncy5OT05FLFxuICAgICAgICB0aW1lb3V0ID0gREVGQVVMVF9USU1FT1VULFxuICAgIH06IHtcbiAgICAgICAgYnVzPzogR2lvLkRCdXNDb25uZWN0aW9uXG4gICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgb2JqZWN0UGF0aD86IHN0cmluZ1xuICAgICAgICBmbGFncz86IEdpby5EQnVzUHJveHlGbGFnc1xuICAgICAgICB0aW1lb3V0PzogbnVtYmVyXG4gICAgfSA9IHt9KTogUHJvbWlzZTx0aGlzPiB7XG4gICAgICAgIGNvbnN0IHByb3h5ID0gbmV3IEdpby5EQnVzUHJveHkoe1xuICAgICAgICAgICAgZ0Nvbm5lY3Rpb246IGJ1cyxcbiAgICAgICAgICAgIGdJbnRlcmZhY2VOYW1lOiB0aGlzLiNpbmZvLm5hbWUsXG4gICAgICAgICAgICBnSW50ZXJmYWNlSW5mbzogdGhpcy4jaW5mbyxcbiAgICAgICAgICAgIGdOYW1lOiBuYW1lLFxuICAgICAgICAgICAgZ0ZsYWdzOiBmbGFncyxcbiAgICAgICAgICAgIGdPYmplY3RQYXRoOiBvYmplY3RQYXRoLFxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjYW5jYWxsYWJsZSA9IG5ldyBHaW8uQ2FuY2VsbGFibGUoKVxuXG4gICAgICAgICAgICBsZXQgc291cmNlID1cbiAgICAgICAgICAgICAgICB0aW1lb3V0ID4gMFxuICAgICAgICAgICAgICAgICAgICA/IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoRXJyb3IoYHByb3h5IHRpbWVkIG91dGApKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgPSBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNhbmNhbGxhYmxlLmNhbmNlbCgpXG4gICAgICAgICAgICAgICAgICAgICAgfSwgdGltZW91dClcbiAgICAgICAgICAgICAgICAgICAgOiBudWxsXG5cbiAgICAgICAgICAgIHByb3h5LmluaXRfYXN5bmMoR0xpYi5QUklPUklUWV9ERUZBVUxULCBjYW5jYWxsYWJsZSwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChzb3VyY2UpXG4gICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgPSBudWxsXG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBwcm94eS5pbml0X2ZpbmlzaChyZXMpXG4gICAgICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5wcm94eSA9IHByb3h5XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaWRzID0gW1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJveHkuY29ubmVjdChcImctc2lnbmFsXCIsIHRoaXMuI2hhbmRsZVNpZ25hbC5iaW5kKHRoaXMpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3h5LmNvbm5lY3QoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJnLXByb3BlcnRpZXMtY2hhbmdlZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuI2hhbmRsZVByb3BlcnRpZXNDaGFuZ2VkLmJpbmQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBdXG5cbiAgICAgICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLm9uU3RvcC5hZGQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWRzLmZvckVhY2goKGlkKSA9PiBwcm94eS5kaXNjb25uZWN0KGlkKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzW2ludGVybmFsc10ucHJveHlcbiAgICAgICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRoaXMpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgc3RvcCgpIHtcbiAgICAgICAgY29uc3QgeyBvblN0b3AgfSA9IHRoaXNbaW50ZXJuYWxzXVxuICAgICAgICBmb3IgKGNvbnN0IGNiIG9mIG9uU3RvcC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgb25TdG9wLmRlbGV0ZShjYilcbiAgICAgICAgICAgIGNiKClcbiAgICAgICAgfVxuICAgIH1cbn1cblxudHlwZSBJbnRlcmZhY2VNZXRhID0ge1xuICAgIGRidXNNZXRob2RzPzogUmVjb3JkPFxuICAgICAgICBzdHJpbmcsXG4gICAgICAgIEFycmF5PHtcbiAgICAgICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICAgICAgICAgICAgZGlyZWN0aW9uOiBcImluXCIgfCBcIm91dFwiXG4gICAgICAgIH0+XG4gICAgPlxuICAgIGRidXNTaWduYWxzPzogUmVjb3JkPFxuICAgICAgICBzdHJpbmcsXG4gICAgICAgIEFycmF5PHtcbiAgICAgICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICAgICAgICB9PlxuICAgID5cbiAgICBkYnVzUHJvcGVydGllcz86IFJlY29yZDxcbiAgICAgICAgc3RyaW5nLFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBzdHJpbmdcbiAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICAgICAgICAgICAgcmVhZD86IHRydWVcbiAgICAgICAgICAgIHdyaXRlPzogdHJ1ZVxuICAgICAgICB9XG4gICAgPlxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIHtAbGluayBTZXJ2aWNlfSBhcyBhIGRidXMgaW50ZXJmYWNlLlxuICpcbiAqIEBwYXJhbSBuYW1lIEludGVyZmFjZSBuYW1lIG9mIHRoZSBvYmplY3QuIEZvciBleGFtcGxlIFwib3JnLmdub21lLlNoZWxsLlNlYXJjaFByb3ZpZGVyMlwiXG4gKiBAcGFyYW0gb3B0aW9ucyBvcHRpb25hbCBwcm9wZXJ0aWVzIHRvIHBhc3MgdG8ge0BsaW5rIHJlZ2lzdGVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaWZhY2UobmFtZTogc3RyaW5nLCBvcHRpb25zPzogUGFyYW1ldGVyczx0eXBlb2YgcmVnaXN0ZXI+WzBdKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjbHM6IHsgbmV3ICguLi5hcmdzOiBhbnlbXSk6IFNlcnZpY2UgfSwgY3R4OiBDbGFzc0RlY29yYXRvckNvbnRleHQpIHtcbiAgICAgICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YVxuICAgICAgICBpZiAoIW1ldGEpIHRocm93IEVycm9yKGAke2Nscy5uYW1lfSBpcyBub3QgYW4gaW50ZXJmYWNlYClcblxuICAgICAgICBjb25zdCB7IGRidXNNZXRob2RzID0ge30sIGRidXNTaWduYWxzID0ge30sIGRidXNQcm9wZXJ0aWVzID0ge30gfSA9IG1ldGEgYXMgSW50ZXJmYWNlTWV0YVxuXG4gICAgICAgIGNvbnN0IGluZm9YbWwgPSB4bWwoe1xuICAgICAgICAgICAgbmFtZTogXCJub2RlXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJpbnRlcmZhY2VcIixcbiAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogeyBuYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5PYmplY3QuZW50cmllcyhkYnVzTWV0aG9kcykubWFwKChbbmFtZSwgYXJnc10pID0+ICh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtZXRob2RcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7IG5hbWUgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogYXJncy5tYXAoKGFyZykgPT4gKHsgbmFtZTogXCJhcmdcIiwgYXR0cmlidXRlczogYXJnIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLk9iamVjdC5lbnRyaWVzKGRidXNTaWduYWxzKS5tYXAoKFtuYW1lLCBhcmdzXSkgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInNpZ25hbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHsgbmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBhcmdzLm1hcCgoYXJnKSA9PiAoeyBuYW1lOiBcImFyZ1wiLCBhdHRyaWJ1dGVzOiBhcmcgfSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgLi4uT2JqZWN0LnZhbHVlcyhkYnVzUHJvcGVydGllcykubWFwKCh7IG5hbWUsIHR5cGUsIHJlYWQsIHdyaXRlIH0pID0+ICh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJwcm9wZXJ0eVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uKG5hbWUgJiYgeyBuYW1lIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3M6IChyZWFkID8gXCJyZWFkXCIgOiBcIlwiKSArICh3cml0ZSA/IFwid3JpdGVcIiA6IFwiXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0pXG5cbiAgICAgICAgT2JqZWN0LmFzc2lnbihjbHMsIHsgW2luZm9dOiBHaW8uREJ1c0ludGVyZmFjZUluZm8ubmV3X2Zvcl94bWwoaW5mb1htbCkgfSlcbiAgICAgICAgcmVnaXN0ZXIob3B0aW9ucykoY2xzLCBjdHgpXG4gICAgfVxufVxuXG50eXBlIERCdXNUeXBlID0gc3RyaW5nIHwgeyB0eXBlOiBzdHJpbmc7IG5hbWU6IHN0cmluZyB9XG5cbnR5cGUgSW5mZXJWYXJpYW50VHlwZXM8VCBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4gPSB7XG4gICAgW0sgaW4ga2V5b2YgVF06IFRbS10gZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgPyBEZWVwSW5mZXI8VFtLXT5cbiAgICAgICAgOiBUW0tdIGV4dGVuZHMgeyB0eXBlOiBpbmZlciBTIH1cbiAgICAgICAgICA/IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgICAgICAgPyBEZWVwSW5mZXI8Uz5cbiAgICAgICAgICAgICAgOiBuZXZlclxuICAgICAgICAgIDogdW5rbm93blxufVxuXG5mdW5jdGlvbiBpbnN0YWxsTWV0aG9kPEFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIGFyZ3M6IEFyZ3MgfCBbQXJncywgQXJncz9dLFxuICAgIG1ldGhvZDogKC4uLmFyZ3M6IGFueVtdKSA9PiB1bmtub3duLFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSB7XG4gICAgY29uc3QgbmFtZSA9IGN0eC5uYW1lXG4gICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YSEgYXMgSW50ZXJmYWNlTWV0YVxuICAgIGNvbnN0IG1ldGhvZHMgPSAobWV0YS5kYnVzTWV0aG9kcyA/Pz0ge30pXG5cbiAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJvbmx5IHN0cmluZyBuYW1lZCBtZXRob2RzIGFyZSBhbGxvd2VkXCIpXG4gICAgfVxuXG4gICAgY29uc3QgW2luQXJncywgb3V0QXJncyA9IFtdXSA9IChBcnJheS5pc0FycmF5KGFyZ3NbMF0pID8gYXJncyA6IFthcmdzXSkgYXMgW0FyZ3MsIEFyZ3NdXG5cbiAgICBtZXRob2RzW25hbWVdID0gW1xuICAgICAgICAuLi5pbkFyZ3MubWFwKChhcmcpID0+ICh7XG4gICAgICAgICAgICBkaXJlY3Rpb246IFwiaW5cIiBhcyBjb25zdCxcbiAgICAgICAgICAgIC4uLih0eXBlb2YgYXJnID09PSBcInN0cmluZ1wiID8geyB0eXBlOiBhcmcgfSA6IGFyZyksXG4gICAgICAgIH0pKSxcbiAgICAgICAgLi4ub3V0QXJncy5tYXAoKGFyZykgPT4gKHtcbiAgICAgICAgICAgIGRpcmVjdGlvbjogXCJvdXRcIiBhcyBjb25zdCxcbiAgICAgICAgICAgIC4uLih0eXBlb2YgYXJnID09PSBcInN0cmluZ1wiID8geyB0eXBlOiBhcmcgfSA6IGFyZyksXG4gICAgICAgIH0pKSxcbiAgICBdXG5cbiAgICByZXR1cm4gbmFtZVxufVxuXG5mdW5jdGlvbiBpbnN0YWxsUHJvcGVydHk8VCBleHRlbmRzIHN0cmluZz4oXG4gICAgdHlwZTogVCxcbiAgICBjdHg6IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0LFxuKSB7XG4gICAgY29uc3Qga2luZCA9IGN0eC5raW5kXG4gICAgY29uc3QgbmFtZSA9IGN0eC5uYW1lXG4gICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YSEgYXMgSW50ZXJmYWNlTWV0YVxuICAgIGNvbnN0IHByb3BlcnRpZXMgPSAobWV0YS5kYnVzUHJvcGVydGllcyA/Pz0ge30pXG5cbiAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJvbmx5IHN0cmluZyBuYW1lZCBwcm9wZXJ0aWVzIGFyZSBhbGxvd2VkXCIpXG4gICAgfVxuXG4gICAgY29uc3QgcmVhZCA9IGtpbmQgPT09IFwiZmllbGRcIiB8fCBraW5kID09PSBcImdldHRlclwiXG4gICAgY29uc3Qgd3JpdGUgPSBraW5kID09PSBcImZpZWxkXCIgfHwga2luZCA9PT0gXCJzZXR0ZXJcIlxuXG4gICAgaWYgKG5hbWUgaW4gcHJvcGVydGllcykge1xuICAgICAgICBpZiAod3JpdGUpIHByb3BlcnRpZXNbbmFtZV0ud3JpdGUgPSB0cnVlXG4gICAgICAgIGlmIChyZWFkKSBwcm9wZXJ0aWVzW25hbWVdLnJlYWQgPSB0cnVlXG4gICAgfSBlbHNlIHtcbiAgICAgICAgcHJvcGVydGllc1tuYW1lXSA9IHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgLi4uKHJlYWQgJiYgeyByZWFkIH0pLFxuICAgICAgICAgICAgLi4uKHdyaXRlICYmIHsgd3JpdGUgfSksXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmFtZVxufVxuXG5mdW5jdGlvbiBpbnN0YWxsU2lnbmFsPFBhcmFtcyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgcGFyYW1zOiBQYXJhbXMsXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZT4sXG4pIHtcbiAgICBjb25zdCBuYW1lID0gY3R4Lm5hbWVcbiAgICBjb25zdCBtZXRhID0gY3R4Lm1ldGFkYXRhISBhcyBJbnRlcmZhY2VNZXRhXG4gICAgY29uc3Qgc2lnbmFscyA9IChtZXRhLmRidXNTaWduYWxzID8/PSB7fSlcblxuICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gXCJzeW1ib2xcIikge1xuICAgICAgICB0aHJvdyBFcnJvcihcInN5bWJvbHMgYXJlIG5vdCB2YWxpZCBzaWduYWxzXCIpXG4gICAgfVxuXG4gICAgc2lnbmFsc1tuYW1lXSA9IHBhcmFtcy5tYXAoKGFyZykgPT4gKHR5cGVvZiBhcmcgPT09IFwic3RyaW5nXCIgPyB7IHR5cGU6IGFyZyB9IDogYXJnKSlcblxuICAgIHJldHVybiBuYW1lXG59XG5cbmZ1bmN0aW9uIGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlOiBEQnVzVHlwZSk6IEdPYmplY3QuR1R5cGU8YW55PiB7XG4gICAgaWYgKHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiKSByZXR1cm4gaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGUudHlwZSlcblxuICAgIGlmICh0eXBlLnN0YXJ0c1dpdGgoXCJhXCIpIHx8IHR5cGUuc3RhcnRzV2l0aChcIihcIikpIHtcbiAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9KU09CSkVDVFxuICAgIH1cblxuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIFwidlwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9WQVJJQU5UXG4gICAgICAgIGNhc2UgXCJiXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0JPT0xFQU5cbiAgICAgICAgY2FzZSBcInlcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVFxuICAgICAgICBjYXNlIFwiblwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlRcbiAgICAgICAgY2FzZSBcInFcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVFxuICAgICAgICBjYXNlIFwiaVwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlRcbiAgICAgICAgY2FzZSBcInVcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVFxuICAgICAgICBjYXNlIFwieFwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlQ2NFxuICAgICAgICBjYXNlIFwidFwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9VSU5UNjRcbiAgICAgICAgY2FzZSBcImhcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfSU5UXG4gICAgICAgIGNhc2UgXCJkXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0RPVUJMRVxuICAgICAgICBjYXNlIFwic1wiOlxuICAgICAgICBjYXNlIFwiZ1wiOlxuICAgICAgICBjYXNlIFwib1wiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9TVFJJTkdcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGJyZWFrXG4gICAgfVxuXG4gICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBpbmZlciBHVHlwZSBmcm9tIHZhcmlhbnQgXCIke3R5cGV9XCJgKVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHtAbGluayBtZXRob2RBc3luY30gd2hlbiBwcm94eWluZywgZHVlIHRvIElPIGJsb2NraW5nLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2RBc3luY30gb24gZXhwb3J0ZWQgb2JqZWN0cy5cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPiwgY29uc3QgT3V0QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgaW5BcmdzOiBJbkFyZ3MsXG4gICAgb3V0QXJnczogT3V0QXJncyxcbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBhbnlbXSkgPT4gSW5mZXJWYXJpYW50VHlwZXM8T3V0QXJncz4sXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4pID0+ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBhbnlcblxuLyoqXG4gKiBSZWdpc3RlcnMgYSBtZXRob2QuXG4gKiBZb3Ugc2hvdWxkIHByZWZlciB1c2luZyB7QGxpbmsgbWV0aG9kQXN5bmN9IHdoZW4gcHJveHlpbmcsIGR1ZSB0byBJTyBibG9ja2luZy5cbiAqIE5vdGUgdGhhdCB0aGlzIGlzIGZ1bmN0aW9uYWxseSB0aGUgc2FtZSBhcyB7QGxpbmsgbWV0aG9kQXN5bmN9IG9uIGV4cG9ydGVkIG9iamVjdHMuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZDxjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIC4uLmluQXJnczogSW5BcmdzXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogU2VydmljZSwgLi4uYXJnczogYW55W10pID0+IHZvaWQsXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4pID0+ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2Q8Y29uc3QgSW5BcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LCBjb25zdCBPdXRBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PihcbiAgICAuLi5hcmdzOiBJbkFyZ3MgfCBbaW5BcmdzOiBJbkFyZ3MsIG91dEFyZ3M/OiBPdXRBcmdzXVxuKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChcbiAgICAgICAgbWV0aG9kOiAoXG4gICAgICAgICAgICB0aGlzOiBTZXJ2aWNlLFxuICAgICAgICAgICAgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPlxuICAgICAgICApID0+IEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+IHwgdm9pZCxcbiAgICAgICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz4pID0+IGFueSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBpbnN0YWxsTWV0aG9kKGFyZ3MsIG1ldGhvZCwgY3R4KVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgICAgICAgaWYgKHRoaXNbaW50ZXJuYWxzXS5wcm94eSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpc1tyZW1vdGVNZXRob2RdKG5hbWUsIGFyZ3MpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmRlZXBVbnBhY2s8SW5mZXJWYXJpYW50VHlwZXM8T3V0QXJncz4+KClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1ldGhvZC5hcHBseSh0aGlzLCBhcmdzKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHRoaXMgb3ZlciB7QGxpbmsgbWV0aG9kfSB3aGVuIHByb3h5aW5nLCBzaW5jZSB0aGlzIGRvZXMgbm90IGJsb2NrIElPLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2R9IG9uIGV4cG9ydGVkIG9iamVjdHMuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZEFzeW5jPFxuICAgIGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPixcbiAgICBjb25zdCBPdXRBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LFxuPihcbiAgICBpbkFyZ3M6IEluQXJncyxcbiAgICBvdXRBcmdzOiBPdXRBcmdzLFxuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IGFueVtdKSA9PiBQcm9taXNlPEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+PixcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbikgPT4gKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz4pID0+IFByb21pc2U8YW55PlxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHRoaXMgb3ZlciB7QGxpbmsgbWV0aG9kfSB3aGVuIHByb3h5aW5nLCBzaW5jZSB0aGlzIGRvZXMgbm90IGJsb2NrIElPLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2R9IG9uIGV4cG9ydGVkIG9iamVjdHMuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZEFzeW5jPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgLi4uaW5BcmdzOiBJbkFyZ3Ncbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBhbnlbXSkgPT4gUHJvbWlzZTx2b2lkPixcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbikgPT4gKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz4pID0+IFByb21pc2U8dm9pZD5cblxuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZEFzeW5jPFxuICAgIGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPixcbiAgICBjb25zdCBPdXRBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LFxuPiguLi5hcmdzOiBJbkFyZ3MgfCBbaW5BcmdzOiBJbkFyZ3MsIG91dEFyZ3M/OiBPdXRBcmdzXSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIG1ldGhvZDogKFxuICAgICAgICAgICAgdGhpczogU2VydmljZSxcbiAgICAgICAgICAgIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz5cbiAgICAgICAgKSA9PiBQcm9taXNlPEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+IHwgdm9pZD4sXG4gICAgICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuICAgICk6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBQcm9taXNlPGFueT4ge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbE1ldGhvZChhcmdzLCBtZXRob2QsIGN0eClcblxuICAgICAgICByZXR1cm4gYXN5bmMgZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgICAgIGlmICh0aGlzW2ludGVybmFsc10ucHJveHkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGF3YWl0IHRoaXNbcmVtb3RlTWV0aG9kQXN5bmNdKG5hbWUsIGFyZ3MpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmRlZXBVbnBhY2s8SW5mZXJWYXJpYW50VHlwZXM8T3V0QXJncz4+KClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1ldGhvZC5hcHBseSh0aGlzLCBhcmdzKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIHJlYWQtd3JpdGUgcHJvcGVydHkuIFdoZW4gYSBuZXcgdmFsdWUgaXMgYXNzaWduZWQgdGhlIG5vdGlmeSBzaWduYWxcbiAqIGlzIGF1dG9tYXRpY2FsbHkgZW1pdHRlZCBvbiB0aGUgbG9jYWwgYW5kIGV4cG9ydGVkIG9iamVjdC5cbiAqXG4gKiBOb3RlIHRoYXQgbmV3IHZhbHVlcyBhcmUgY2hlY2tlZCBieSByZWZlcmVuY2Ugc28gYXNzaWduaW5nIHRoZSBzYW1lIG9iamVjdCB3aWxsXG4gKiBub3QgZW1pdCB0aGUgbm90aWZ5IHNpZ25hbC5cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJvcGVydHk8VCBleHRlbmRzIHN0cmluZz4odHlwZTogVCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIF86IHZvaWQsXG4gICAgICAgIGN0eDogQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgRGVlcEluZmVyPFQ+PixcbiAgICApOiAodGhpczogU2VydmljZSwgaW5pdDogRGVlcEluZmVyPFQ+KSA9PiBhbnkge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbFByb3BlcnR5KHR5cGUsIGN0eClcblxuICAgICAgICB2b2lkIGdwcm9wZXJ0eSh7ICRndHlwZTogaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGUpIH0pKFxuICAgICAgICAgICAgXyxcbiAgICAgICAgICAgIGN0eCBhcyBDbGFzc0ZpZWxkRGVjb3JhdG9yQ29udGV4dDxHT2JqZWN0Lk9iamVjdD4gJiBDdHgsXG4gICAgICAgICAgICB7IG1ldGFPbmx5OiB0cnVlIH0sXG4gICAgICAgIClcblxuICAgICAgICBjdHguYWRkSW5pdGlhbGl6ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIG5hbWUsIHtcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgc2V0KHZhbHVlOiBEZWVwSW5mZXI8VD4pIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBwcm94eSwgcHJpdiB9ID0gdGhpc1tpbnRlcm5hbHNdXG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHByb3h5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzW3JlbW90ZVByb3BlcnR5U2V0XShuYW1lLCB2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHByaXZbbmFtZV0gIT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcml2W25hbWVdID0gdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KG5hbWUgYXMgRXh0cmFjdDxrZXlvZiBTZXJ2aWNlLCBzdHJpbmc+KVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQoKTogRGVlcEluZmVyPFQ+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBwcm94eSwgcHJpdiB9ID0gdGhpc1tpbnRlcm5hbHNdXG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3h5XG4gICAgICAgICAgICAgICAgICAgICAgICA/IHByb3h5LmdldF9jYWNoZWRfcHJvcGVydHkobmFtZSkhLmRlZXBVbnBhY2s8RGVlcEluZmVyPFQ+PigpXG4gICAgICAgICAgICAgICAgICAgICAgICA6IChwcml2W25hbWVdIGFzIERlZXBJbmZlcjxUPilcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSBzYXRpc2ZpZXMgVGhpc1R5cGU8U2VydmljZT4pXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpbml0KSB7XG4gICAgICAgICAgICBjb25zdCBwcml2ID0gdGhpc1tpbnRlcm5hbHNdLnByaXZcbiAgICAgICAgICAgIHByaXZbbmFtZV0gPSBpbml0XG4gICAgICAgICAgICAvLyB3ZSBkb24ndCBuZWVkIHRvIHN0b3JlIHRoZSB2YWx1ZSBvbiB0aGUgb2JqZWN0IGl0c2VsZlxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIHJlYWQtb25seSBwcm9wZXJ0eS4gQ2FuIGJlIHVzZWQgaW4gY29uanVjdGlvbiB3aXRoIHtAbGluayBzZXR0ZXJ9IHRvIGRlZmluZVxuICogcmVhZC13cml0ZSBwcm9wZXJ0aWVzIGFzIGFjY2Vzc29ycy5cbiAqXG4gKiBOb3RlIHRoYXQgeW91IHdpbGwgbmVlZCB0byBleHBsaWNpdGx5IGVtaXQgdGhlIG5vdGlmeSBzaWduYWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXR0ZXI8VCBleHRlbmRzIHN0cmluZz4odHlwZTogVCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIG1ldGhvZDogKHRoaXM6IFNlcnZpY2UpID0+IERlZXBJbmZlcjxUPixcbiAgICAgICAgY3R4OiBDbGFzc0dldHRlckRlY29yYXRvckNvbnRleHQ8U2VydmljZSwgRGVlcEluZmVyPFQ+PixcbiAgICApOiAodGhpczogU2VydmljZSkgPT4gYW55IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxQcm9wZXJ0eSh0eXBlLCBjdHgpXG5cbiAgICAgICAgY3R4LmFkZEluaXRpYWxpemVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRlZmluZVByb3BlcnR5R2V0dGVyKHRoaXMsIG5hbWUgYXMgRXh0cmFjdDxrZXlvZiBTZXJ2aWNlLCBzdHJpbmc+KVxuICAgICAgICB9KVxuXG4gICAgICAgIHZvaWQgZ2dldHRlcih7ICRndHlwZTogaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGUpIH0pKFxuICAgICAgICAgICAgKCkgPT4ge30sXG4gICAgICAgICAgICBjdHggYXMgQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0PEdPYmplY3QuT2JqZWN0PiAmIEN0eCxcbiAgICAgICAgKVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiBnZXQoKTogRGVlcEluZmVyPFQ+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgcHJveHkgfSA9IHRoaXNbaW50ZXJuYWxzXVxuICAgICAgICAgICAgcmV0dXJuIHByb3h5XG4gICAgICAgICAgICAgICAgPyBwcm94eS5nZXRfY2FjaGVkX3Byb3BlcnR5KG5hbWUpIS5kZWVwVW5wYWNrPERlZXBJbmZlcjxUPj4oKVxuICAgICAgICAgICAgICAgIDogbWV0aG9kLmNhbGwodGhpcylcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSB3cml0ZS1vbmx5IHByb3BlcnR5LiBDYW4gYmUgdXNlZCBpbiBjb25qdWN0aW9uIHdpdGgge0BsaW5rIGdldHRlcn0gdG8gZGVmaW5lXG4gKiByZWFkLXdyaXRlIHByb3BlcnRpZXMgYXMgYWNjZXNzb3JzLlxuICpcbiAqIE5vdGUgdGhhdCB5b3Ugd2lsbCBuZWVkIHRvIGV4cGxpY2l0bHkgZW1pdCB0aGUgbm90aWZ5IHNpZ25hbC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldHRlcjxUIGV4dGVuZHMgc3RyaW5nPih0eXBlOiBUKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChcbiAgICAgICAgc2V0dGVyOiAodGhpczogU2VydmljZSwgdmFsdWU6IGFueSkgPT4gdm9pZCxcbiAgICAgICAgY3R4OiBDbGFzc1NldHRlckRlY29yYXRvckNvbnRleHQ8U2VydmljZSwgRGVlcEluZmVyPFQ+PixcbiAgICApOiAodGhpczogU2VydmljZSwgdmFsdWU6IERlZXBJbmZlcjxUPikgPT4gdm9pZCB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBpbnN0YWxsUHJvcGVydHkodHlwZSwgY3R4KVxuXG4gICAgICAgIHZvaWQgZ3NldHRlcih7ICRndHlwZTogaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGUpIH0pKFxuICAgICAgICAgICAgKCkgPT4ge30sXG4gICAgICAgICAgICBjdHggYXMgQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0PEdPYmplY3QuT2JqZWN0PiAmIEN0eCxcbiAgICAgICAgKVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAodmFsdWU6IERlZXBJbmZlcjxUPikge1xuICAgICAgICAgICAgY29uc3QgeyBwcm94eSB9ID0gdGhpc1tpbnRlcm5hbHNdXG5cbiAgICAgICAgICAgIGlmIChwcm94eSkge1xuICAgICAgICAgICAgICAgIHRoaXNbcmVtb3RlUHJvcGVydHlTZXRdKG5hbWUsIHZhbHVlKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXR0ZXIuY2FsbCh0aGlzLCB2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSBzaWduYWwgd2hpY2ggd2hlbiBpbnZva2VkIHdpbGwgZW1pdCB0aGUgc2lnbmFsXG4gKiBvbiB0aGUgbG9jYWwgb2JqZWN0IGFuZCB0aGUgZXhwb3J0ZWQgb2JqZWN0LlxuICpcbiAqICoqTm90ZSoqOiBpdHMgbm90IHBvc3NpYmxlIHRvIGVtaXQgc2lnbmFscyBvbiByZW1vdGUgb2JqZWN0cyB0aHJvdWdoIHByb3hpZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8Y29uc3QgUGFyYW1zIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PiguLi5wYXJhbXM6IFBhcmFtcykge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIG1ldGhvZDogKHRoaXM6IFNlcnZpY2UsIC4uLnBhcmFtczogYW55KSA9PiB2b2lkLFxuICAgICAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbiAgICApOiAodGhpczogU2VydmljZSwgLi4ucGFyYW1zOiBJbmZlclZhcmlhbnRUeXBlczxQYXJhbXM+KSA9PiB2b2lkIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxTaWduYWwocGFyYW1zLCBjdHgpXG5cbiAgICAgICAgdm9pZCBnc2lnbmFsKC4uLnBhcmFtcy5tYXAoaW5mZXJHVHlwZUZyb21WYXJpYW50KSkoXG4gICAgICAgICAgICAoKSA9PiB7fSxcbiAgICAgICAgICAgIGN0eCBhcyBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8R09iamVjdC5PYmplY3Q+ICYgQ3R4LFxuICAgICAgICApXG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICguLi5wYXJhbXMpIHtcbiAgICAgICAgICAgIGlmICh0aGlzW2ludGVybmFsc10ucHJveHkpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYGNhbm5vdCBlbWl0IHNpZ25hbCBcIiR7bmFtZX1cIiBvbiByZW1vdGUgb2JqZWN0YClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0IHx8ICF0aGlzW2ludGVybmFsc10ucHJveHkpIHtcbiAgICAgICAgICAgICAgICBtZXRob2QuYXBwbHkodGhpcywgcGFyYW1zKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5lbWl0KG5hbWUsIC4uLnBhcmFtcylcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgeyBTZXJ2aWNlLCBpZmFjZSwgbWV0aG9kQXN5bmMgfSBmcm9tIFwiZ25pbS9kYnVzXCJcblxuZXhwb3J0IGludGVyZmFjZSBBcHBEQnVzSW1wbCB7XG4gICAgaW5zZWN0b3IoKTogdm9pZFxuICAgIHRvZ2dsZVdpbmRvdyhuYW1lOiBzdHJpbmcpOiB2b2lkXG4gICAgcXVpdCgpOiB2b2lkXG4gICAgcmVxdWVzdChhcmd2OiBzdHJpbmdbXSk6IFByb21pc2U8c3RyaW5nPlxufVxuXG5AaWZhY2UoXCJpby5Bc3RhbC5BcHBsaWNhdGlvblwiKVxuZXhwb3J0IGNsYXNzIEFwcERCdXMgZXh0ZW5kcyBTZXJ2aWNlIHtcbiAgICBwcml2YXRlIGltcGw6IEFwcERCdXNJbXBsXG5cbiAgICBAbWV0aG9kQXN5bmMoKVxuICAgIGFzeW5jIEluc3BlY3RvcigpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLmltcGwuaW5zZWN0b3IoKSlcbiAgICB9XG5cbiAgICBAbWV0aG9kQXN5bmMoXCJzXCIpXG4gICAgYXN5bmMgVG9nZ2xlV2luZG93KG5hbWU6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuaW1wbC50b2dnbGVXaW5kb3cobmFtZSkpXG4gICAgfVxuXG4gICAgQG1ldGhvZEFzeW5jKClcbiAgICBhc3luYyBRdWl0KCk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuaW1wbC5xdWl0KCkpXG4gICAgfVxuXG4gICAgQG1ldGhvZEFzeW5jKFtcImFzXCJdLCBbXCJzXCJdKVxuICAgIGFzeW5jIFJlcXVlc3QoYXJndjogc3RyaW5nW10pOiBQcm9taXNlPFtzdHJpbmddPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmltcGwucmVxdWVzdChhcmd2KS50aGVuKChyZXMpID0+IFtyZXNdKVxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKGltcGw6IEFwcERCdXNJbXBsKSB7XG4gICAgICAgIHN1cGVyKClcbiAgICAgICAgdGhpcy5pbXBsID0gaW1wbFxuICAgIH1cblxuICAgIHN0YXRpYyBwcm94eShpbnN0YW5jZU5hbWU6IHN0cmluZykge1xuICAgICAgICBjb25zdCBhcHAgPSBuZXcgQXBwREJ1cyh7XG4gICAgICAgICAgICBpbnNlY3RvcigpIHt9LFxuICAgICAgICAgICAgdG9nZ2xlV2luZG93KCkge30sXG4gICAgICAgICAgICBxdWl0KCkge30sXG4gICAgICAgICAgICByZXF1ZXN0OiAoKSA9PiBQcm9taXNlLnJlamVjdCgpLFxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBhcHAucHJveHkoe1xuICAgICAgICAgICAgbmFtZTogXCJpby5Bc3RhbC5cIiArIGluc3RhbmNlTmFtZSxcbiAgICAgICAgfSlcbiAgICB9XG59XG4iLCAiaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmV4cG9ydCB7IEFzdGFsLCBHdGssIEdkayB9XG4iLCAiaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IENDUHJvcHMgfSBmcm9tIFwiZ25pbVwiXG5pbXBvcnQgeyBpbnRyaW5zaWNFbGVtZW50cyB9IGZyb20gXCJnbmltL2d0azQvanN4LXJ1bnRpbWVcIlxuXG50eXBlIFByb3BzPFQgZXh0ZW5kcyBHdGsuV2lkZ2V0LCBQcm9wcz4gPSBDQ1Byb3BzPFQsIFBhcnRpYWw8UHJvcHM+PlxuXG5PYmplY3QuYXNzaWduKGludHJpbnNpY0VsZW1lbnRzLCB7XG4gICAgYm94OiBHdGsuQm94LFxuICAgIGJ1dHRvbjogR3RrLkJ1dHRvbixcbiAgICBjZW50ZXJib3g6IEd0ay5DZW50ZXJCb3gsXG4gICAgLy8gY2lyY3VsYXJwcm9ncmVzczogQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcyxcbiAgICBkcmF3aW5nYXJlYTogR3RrLkRyYXdpbmdBcmVhLFxuICAgIGVudHJ5OiBHdGsuRW50cnksXG4gICAgaW1hZ2U6IEd0ay5JbWFnZSxcbiAgICBsYWJlbDogR3RrLkxhYmVsLFxuICAgIGxldmVsYmFyOiBHdGsuTGV2ZWxCYXIsXG4gICAgbWVudWJ1dHRvbjogR3RrLk1lbnVCdXR0b24sXG4gICAgb3ZlcmxheTogR3RrLk92ZXJsYXksXG4gICAgcG9wb3ZlcjogR3RrLlBvcG92ZXIsXG4gICAgcmV2ZWFsZXI6IEd0ay5SZXZlYWxlcixcbiAgICBzY3JvbGxlZHdpbmRvdzogR3RrLlNjcm9sbGVkV2luZG93LFxuICAgIHNsaWRlcjogQXN0YWwuU2xpZGVyLFxuICAgIHN0YWNrOiBHdGsuU3RhY2ssXG4gICAgc3dpdGNoOiBHdGsuU3dpdGNoLFxuICAgIHRvZ2dsZWJ1dHRvbjogR3RrLlRvZ2dsZUJ1dHRvbixcbiAgICB3aW5kb3c6IEFzdGFsLldpbmRvdyxcbn0pXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIGJveDogUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgYnV0dG9uOiBQcm9wczxHdGsuQnV0dG9uLCBHdGsuQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBjZW50ZXJib3g6IFByb3BzPEd0ay5DZW50ZXJCb3gsIEd0ay5DZW50ZXJCb3guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IFByb3BzPEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsIEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGRyYXdpbmdhcmVhOiBQcm9wczxHdGsuRHJhd2luZ0FyZWEsIEd0ay5EcmF3aW5nQXJlYS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZW50cnk6IFByb3BzPEd0ay5FbnRyeSwgR3RrLkVudHJ5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBpbWFnZTogUHJvcHM8R3RrLkltYWdlLCBHdGsuSW1hZ2UuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGxhYmVsOiBQcm9wczxHdGsuTGFiZWwsIEd0ay5MYWJlbC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGV2ZWxiYXI6IFByb3BzPEd0ay5MZXZlbEJhciwgR3RrLkxldmVsQmFyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBtZW51YnV0dG9uOiBQcm9wczxHdGsuTWVudUJ1dHRvbiwgR3RrLk1lbnVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG92ZXJsYXk6IFByb3BzPEd0ay5PdmVybGF5LCBHdGsuT3ZlcmxheS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgcG9wb3ZlcjogUHJvcHM8R3RrLlBvcG92ZXIsIEd0ay5Qb3BvdmVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICByZXZlYWxlcjogUHJvcHM8R3RrLlJldmVhbGVyLCBHdGsuUmV2ZWFsZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHNjcm9sbGVkd2luZG93OiBQcm9wczxHdGsuU2Nyb2xsZWRXaW5kb3csIEd0ay5TY3JvbGxlZFdpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2xpZGVyOiBQcm9wczxBc3RhbC5TbGlkZXIsIEFzdGFsLlNsaWRlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc3RhY2s6IFByb3BzPEd0ay5TdGFjaywgR3RrLlN0YWNrLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzd2l0Y2g6IFByb3BzPEd0ay5Td2l0Y2gsIEd0ay5Td2l0Y2guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHRvZ2dsZWJ1dHRvbjogUHJvcHM8R3RrLlRvZ2dsZUJ1dHRvbiwgR3RrLlRvZ2dsZUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgd2luZG93OiBQcm9wczxBc3RhbC5XaW5kb3csIEFzdGFsLldpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgKiBmcm9tIFwiZ25pbS9ndGs0L2pzeC1ydW50aW1lXCJcbiIsICJpbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgeyBjb25maWd1ZSB9IGZyb20gXCIuLi9qc3gvZW52LmpzXCJcbmltcG9ydCB7IGdldFR5cGUsIG9uQ2xlYW51cCwgQWNjZXNzb3IsIEZyYWdtZW50IH0gZnJvbSBcIi4uL2luZGV4LmpzXCJcblxuaW1wb3J0IHR5cGUgQWR3IGZyb20gXCJnaTovL0Fkd1wiXG5jb25zdCBhZHcgPSBhd2FpdCBpbXBvcnQoXCJnaTovL0Fkd1wiKS50aGVuKChtKSA9PiBtLmRlZmF1bHQpLmNhdGNoKCgpID0+IG51bGwpXG5cbmNvbnN0IGR1bW15QnVpbGRlciA9IG5ldyBHdGsuQnVpbGRlcigpXG5cbmNvbnN0IHsgaW50cmluc2ljRWxlbWVudHMgfSA9IGNvbmZpZ3VlKHtcbiAgICBpbml0UHJvcHMoY3Rvcikge1xuICAgICAgICBpZiAoY3RvciA9PT0gR3RrLlN0YWNrKSB7XG4gICAgICAgICAgICBjb25zdCBrZXlzOiBBcnJheTxFeHRyYWN0PGtleW9mIEd0ay5TdGFjaywgc3RyaW5nPj4gPSBbXG4gICAgICAgICAgICAgICAgXCJ2aXNpYmxlQ2hpbGROYW1lXCIsXG4gICAgICAgICAgICAgICAgXCJ2aXNpYmxlX2NoaWxkX25hbWVcIixcbiAgICAgICAgICAgIF1cbiAgICAgICAgICAgIHJldHVybiBrZXlzXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFkdyAmJiBjdG9yID09PSBhZHcuVG9nZ2xlR3JvdXApIHtcbiAgICAgICAgICAgIGNvbnN0IGtleXM6IEFycmF5PEV4dHJhY3Q8a2V5b2YgQWR3LlRvZ2dsZUdyb3VwLCBzdHJpbmc+PiA9IFtcbiAgICAgICAgICAgICAgICBcImFjdGl2ZVwiLFxuICAgICAgICAgICAgICAgIFwiYWN0aXZlTmFtZVwiLFxuICAgICAgICAgICAgICAgIFwiYWN0aXZlX25hbWVcIixcbiAgICAgICAgICAgIF1cbiAgICAgICAgICAgIHJldHVybiBrZXlzXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHNldENzcyhvYmplY3QsIGNzcykge1xuICAgICAgICBpZiAoIShvYmplY3QgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUud2FybihFcnJvcihgY2Fubm90IHNldCBjc3Mgb24gJHtvYmplY3R9YCkpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjdHggPSBvYmplY3QuZ2V0X3N0eWxlX2NvbnRleHQoKVxuICAgICAgICBsZXQgcHJvdmlkZXI6IEd0ay5Dc3NQcm92aWRlclxuXG4gICAgICAgIGNvbnN0IHNldHRlciA9IChjc3M6IHN0cmluZykgPT4ge1xuICAgICAgICAgICAgaWYgKCFjc3MuaW5jbHVkZXMoXCJ7XCIpIHx8ICFjc3MuaW5jbHVkZXMoXCJ9XCIpKSB7XG4gICAgICAgICAgICAgICAgY3NzID0gYCogeyAke2Nzc30gfWBcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb3ZpZGVyKSBjdHgucmVtb3ZlX3Byb3ZpZGVyKHByb3ZpZGVyKVxuXG4gICAgICAgICAgICBwcm92aWRlciA9IG5ldyBHdGsuQ3NzUHJvdmlkZXIoKVxuICAgICAgICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3N0cmluZyhjc3MpXG4gICAgICAgICAgICBjdHguYWRkX3Byb3ZpZGVyKHByb3ZpZGVyLCBHdGsuU1RZTEVfUFJPVklERVJfUFJJT1JJVFlfVVNFUilcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjc3MgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgc2V0dGVyKGNzcy5nZXQoKSlcbiAgICAgICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBjc3Muc3Vic2NyaWJlKCgpID0+IHNldHRlcihjc3MuZ2V0KCkpKVxuICAgICAgICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXR0ZXIoY3NzKVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIHNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKSB7XG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNsYXNzTmFtZSBvbiAke29iamVjdH1gKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjbGFzc05hbWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgb2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKVxuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGNsYXNzTmFtZS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgKCkgPT4gKG9iamVjdC5jc3NDbGFzc2VzID0gY2xhc3NOYW1lLmdldCgpLnNwbGl0KC9cXHMrLykpLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvYmplY3Quc2V0X2Nzc19jbGFzc2VzKGNsYXNzTmFtZS5zcGxpdCgvXFxzKy8pKVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIHRleHROb2RlKHRleHQpIHtcbiAgICAgICAgcmV0dXJuIEd0ay5MYWJlbC5uZXcodGV4dC50b1N0cmluZygpKVxuICAgIH0sXG5cbiAgICAvLyBgc2V0X2NoaWxkYCBhbmQgZXNwZWNpYWxseSBgcmVtb3ZlYCBtaWdodCBiZSB3YXkgdG9vIGdlbmVyaWMgYW5kIHRoZXJlIG1pZ2h0XG4gICAgLy8gYmUgY2FzZXMgd2hlcmUgaXQgZG9lcyBub3QgYWN0dWFsbHkgZG8gd2hhdCB3ZSB3YW50IGl0IHRvIGRvXG4gICAgLy9cbiAgICAvLyBpZiB0aGVyZSBpcyBhIHVzZWNhc2UgZm9yIGVpdGhlciBvZiB0aGVzZSB0d28gdGhhdCBkb2VzIHNvbWV0aGluZyBlbHNlIHRoYW5cbiAgICAvLyB3ZSBleHBlY3QgaXQgdG8gZG8gaGVyZSBpbiBhIEpTWCBjb250ZXh0IHdlIGhhdmUgdG8gY2hlY2sgZm9yIGtub3duIGluc3RhbmNlc1xuICAgIHJlbW92ZUNoaWxkKHBhcmVudCwgY2hpbGQpIHtcbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQgJiYgY2hpbGQgaW5zdGFuY2VvZiBHdGsuRXZlbnRDb250cm9sbGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnJlbW92ZV9jb250cm9sbGVyKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFwic2V0X2NoaWxkXCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQuc2V0X2NoaWxkID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfY2hpbGQobnVsbClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcInJlbW92ZVwiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnJlbW92ZSA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQucmVtb3ZlKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaGlsZH0gZnJvbSAke3BhcmVudH1gKVxuICAgIH0sXG4gICAgYXBwZW5kQ2hpbGQocGFyZW50LCBjaGlsZCkge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5BZGp1c3RtZW50ICYmXG4gICAgICAgICAgICBcInNldF9hZGp1c3RtZW50XCIgaW4gcGFyZW50ICYmXG4gICAgICAgICAgICB0eXBlb2YgcGFyZW50LnNldF9hZGp1c3RtZW50ID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9hZGp1c3RtZW50KGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0ICYmXG4gICAgICAgICAgICBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuU3RhY2sgJiZcbiAgICAgICAgICAgIGNoaWxkLm5hbWUgIT09IFwiXCIgJiZcbiAgICAgICAgICAgIGNoaWxkLm5hbWUgIT09IG51bGwgJiZcbiAgICAgICAgICAgIGdldFR5cGUoY2hpbGQpID09PSBcIm5hbWVkXCJcbiAgICAgICAgKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LmFkZF9uYW1lZChjaGlsZCwgY2hpbGQubmFtZSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5Qb3BvdmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5NZW51QnV0dG9uKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9wb3BvdmVyKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudU1vZGVsICYmXG4gICAgICAgICAgICAocGFyZW50IGluc3RhbmNlb2YgR3RrLk1lbnVCdXR0b24gfHwgcGFyZW50IGluc3RhbmNlb2YgR3RrLlBvcG92ZXJNZW51KVxuICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuc2V0X21lbnVfbW9kZWwoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudUl0ZW0gJiYgcGFyZW50IGluc3RhbmNlb2YgR2lvLk1lbnUpIHtcbiAgICAgICAgICAgIC8vIFRPRE86XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2luZG93ICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5BcHBsaWNhdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5hZGRfd2luZG93KGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLlRleHRCdWZmZXIgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLlRleHRWaWV3KSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9idWZmZXIoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgR3RrLkJ1aWxkYWJsZSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC52ZnVuY19hZGRfY2hpbGQoZHVtbXlCdWlsZGVyLCBjaGlsZCwgZ2V0VHlwZShjaGlsZCkpXG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGFkZCAke2NoaWxkfSB0byAke3BhcmVudH1gKVxuICAgIH0sXG59KVxuXG5leHBvcnQgeyBGcmFnbWVudCwgaW50cmluc2ljRWxlbWVudHMgfVxuZXhwb3J0IHsganN4LCBqc3hzIH0gZnJvbSBcIi4uL2pzeC9qc3guanNcIlxuIiwgImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFN0YXR1c0JhcigpIHtcbiAgcmV0dXJuIChcbiAgICA8Y2VudGVyYm94PlxuICAgICAgPGJveCAkdHlwZT1cInN0YXJ0XCI+XG4gICAgICAgIDxsYWJlbCBsYWJlbD1cIm1lbnVcIiAvPlxuICAgICAgPC9ib3g+XG4gICAgICA8Ym94ICR0eXBlPVwiZW5kXCI+XG4gICAgICAgIDxsYWJlbCBsYWJlbD1cImNsb2NrXCIgLz5cbiAgICAgIDwvYm94PlxuICAgIDwvY2VudGVyYm94PlxuICApXG59XG4iLCAiaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSAnYWdzJ1xuaW1wb3J0IHsgQXN0YWwsIEdkayB9IGZyb20gJ2Fncy9ndGs0J1xuaW1wb3J0IGFwcCBmcm9tICdhZ3MvZ3RrNC9hcHAnXG5cbmltcG9ydCBTdGF0dXNCYXIgZnJvbSAnLi9TdGF0dXNCYXInXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFN0YXR1c0JhcldpbmRvdyh7IGdka21vbml0b3IgfTogeyBnZGttb25pdG9yOiBHZGsuTW9uaXRvciB9KSB7XG4gIGxldCB3aW46IEFzdGFsLldpbmRvd1xuICBjb25zdCB7IFRPUCwgTEVGVCwgUklHSFQgfSA9IEFzdGFsLldpbmRvd0FuY2hvclxuXG4gIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgLy8gUm9vdCBjb21wb25lbnRzICh3aW5kb3dzKSBhcmUgbm90IGF1dG9tYXRpY2FsbHkgZGVzdHJveWVkLlxuICAgIC8vIFdoZW4gdGhlIG1vbml0b3IgaXMgZGlzY29ubmVjdGVkIGZyb20gdGhlIHN5c3RlbSwgdGhpcyBjYWxsYmFja1xuICAgIC8vIGlzIHJ1biBmcm9tIHRoZSBwYXJlbnQgPEZvcj4gd2hpY2ggYWxsb3dzIHVzIHRvIGRlc3Ryb3kgdGhlIHdpbmRvd1xuICAgIHdpbi5kZXN0cm95KClcbiAgfSlcblxuICByZXR1cm4gKFxuICAgIDx3aW5kb3dcbiAgICAgICQ9e3NlbGYgPT4gKHdpbiA9IHNlbGYpfVxuICAgICAgdmlzaWJsZVxuICAgICAgbmFtZXNwYWNlPVwia290YW1pLXBhbmVsXCJcbiAgICAgIG5hbWU9e2BwYW5lbC0ke2dka21vbml0b3IuY29ubmVjdG9yfWB9XG4gICAgICBnZGttb25pdG9yPXtnZGttb25pdG9yfVxuICAgICAgZXhjbHVzaXZpdHk9e0FzdGFsLkV4Y2x1c2l2aXR5LkVYQ0xVU0lWRX1cbiAgICAgIGFuY2hvcj17VE9QIHwgTEVGVCB8IFJJR0hUfVxuICAgICAgYXBwbGljYXRpb249e2FwcH1cbiAgICAgIGxheWVyPXtBc3RhbC5MYXllci5UT1B9IC8vIEFzdGFsLkxheWVyLk9WRVJMQVlcbiAgICA+XG4gICAgICA8U3RhdHVzQmFyIC8+XG4gICAgPC93aW5kb3c+XG4gIClcbn1cbiIsICJpbXBvcnQgeyBjcmVhdGVCaW5kaW5nLCBGb3IsIFRoaXMgfSBmcm9tICdhZ3MnXG5pbXBvcnQgYXBwIGZyb20gJ2Fncy9ndGs0L2FwcCdcblxuaW1wb3J0IFN0YXR1c0JhcldpbmRvdyBmcm9tICcuL2NvbXBvbmVudHMvU3RhdHVzQmFyV2luZG93J1xuLy8gaW1wb3J0IHN0eWxlIGZyb20gJy4vc3R5bGUuc2NzcydcblxuYXBwLnN0YXJ0KHtcbiAgLyoqXG4gICAqIGh0dHBzOi8vYXlsdXIuZ2l0aHViLmlvL2Fncy9ndWlkZS9hcHAtY2xpLmh0bWwjaW5zdGFuY2UtaWRlbnRpZmllclxuICAgKlxuICAgKiBVc2UgaW4gY2xpOlxuICAgKiBhZ3MgcmVxdWVzdCBzaG93IHF1aWNrLXNldHRpbmdzIC1pIHN0YXR1cy1iYXJcbiAgICovXG4gIGluc3RhbmNlTmFtZTogJ3N0YXR1cy1iYXInLFxuICAvLyBjc3M6IHN0eWxlLFxuICAvLyBJdCdzIHVzdWFsbHkgYmVzdCB0byBnbyB3aXRoIHRoZSBkZWZhdWx0IEFkd2FpdGEgdGhlbWVcbiAgLy8gYW5kIGJ1aWx0IG9mZiBvZiBpdCwgaW5zdGVhZCBvZiBhbGxvd2luZyB0aGUgc3lzdGVtIHRoZW1lXG4gIC8vIHRvIHBvdGVudGlhbGx5IG1lc3Mgc29tZXRoaW5nIHVwIHdoZW4gaXQgaXMgY2hhbmdlZC5cbiAgLy8gTm90ZTogYCogeyBhbGw6dW5zZXQgfWAgaW4gY3NzIGlzIG5vdCByZWNvbW1lbmRlZC5cbiAgLy8gZ3RrVGhlbWU6IFwiQWR3YWl0YVwiLFxuICByZXF1ZXN0SGFuZGxlcihhcmd2OiBzdHJpbmdbXSwgcmVzcG9uc2U6IChyZXNwb25zZTogc3RyaW5nKSA9PiB2b2lkKSB7XG4gICAgY29uc3QgW1xuICAgICAgY21kLCBhcmcsIC4uLnJlc3RcbiAgICBdID0gYXJndlxuICAgIGNvbnNvbGUubG9nKCdcXG5zdGF0dXMtYmFyOicpXG4gICAgY29uc29sZS5sb2coY21kKVxuICAgIGNvbnNvbGUubG9nKGFyZylcbiAgICBjb25zb2xlLmxvZyhyZXN0KVxuICAgIGlmIChjbWQgPT0gJ3Nob3cnKSB7XG4gICAgICByZXR1cm4gcmVzcG9uc2UoJ29rJylcbiAgICB9XG4gICAgcmVzcG9uc2UoJ3Vua25vd24gY29tbWFuZCcpXG4gIH0sXG4gIG1haW4oKSB7XG4gICAgY29uc3QgbW9uaXRvcnMgPSBjcmVhdGVCaW5kaW5nKGFwcCwgJ21vbml0b3JzJylcblxuICAgIHJldHVybiAoXG4gICAgICA8Rm9yIGVhY2g9e21vbml0b3JzfT5cbiAgICAgICAge21vbml0b3IgPT4gKFxuICAgICAgICAgIDxUaGlzIHRoaXM9e2FwcH0+XG4gICAgICAgICAgICA8U3RhdHVzQmFyV2luZG93IGdka21vbml0b3I9e21vbml0b3J9IC8+XG4gICAgICAgICAgPC9UaGlzPlxuICAgICAgICApfVxuICAgICAgPC9Gb3I+XG4gICAgKVxuICB9LFxufSlcbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsT0FBT0EsY0FBYTs7O0FDQXBCLE9B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USxNQUFNLE9BQU87QUFBQSxNQUNyQixhQUFhO0FBQUEsTUFDYixPQUFPLE1BQU0sTUFBTTtBQUFBLE1BRW5CLDhCQUFDLGFBQVU7QUFBQTtBQUFBLEVBQ2I7QUFFSjs7O0FDMUJBLFlBQUksTUFBTTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBT1IsY0FBYztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBT2QsZUFBZSxNQUFnQixVQUFzQztBQUNuRSxVQUFNO0FBQUEsTUFDSjtBQUFBLE1BQUs7QUFBQSxNQUFLLEdBQUc7QUFBQSxJQUNmLElBQUk7QUFDSixZQUFRLElBQUksZUFBZTtBQUMzQixZQUFRLElBQUksR0FBRztBQUNmLFlBQVEsSUFBSSxHQUFHO0FBQ2YsWUFBUSxJQUFJLElBQUk7QUFDaEIsUUFBSSxPQUFPLFFBQVE7QUFDakIsYUFBTyxTQUFTLElBQUk7QUFBQSxJQUN0QjtBQUNBLGFBQVMsaUJBQWlCO0FBQUEsRUFDNUI7QUFBQSxFQUNBLE9BQU87QUFDTCxVQUFNLFdBQVcsY0FBYyxhQUFLLFVBQVU7QUFFOUMsV0FDRSxvQkFBQyxPQUFJLE1BQU0sVUFDUix1QkFDQyxvQkFBQyxRQUFLLE1BQU0sYUFDViw4QkFBQyxtQkFBZ0IsWUFBWSxTQUFTLEdBQ3hDLEdBRUo7QUFBQSxFQUVKO0FBQ0YsQ0FBQzsiLAogICJuYW1lcyI6IFsiR09iamVjdCIsICJzaWduYWwiLCAiR09iamVjdCIsICJnZXR0ZXIiLCAic2V0dGVyIiwgIkdPYmplY3QiLCAic2V0IiwgIkdPYmplY3QiLCAiZ2V0dGVyIiwgIkdPYmplY3QiLCAia2V5IiwgIm9iamVjdCIsICJyZW1vdmUiLCAiR09iamVjdCIsICJHT2JqZWN0IiwgInNuYWtlaWZ5IiwgInBhdGNoIiwgIkdPYmplY3QiLCAiR0xpYiIsICJHT2JqZWN0IiwgIkdPYmplY3QiLCAic2V0IiwgInNpZ25hbE5hbWUiLCAiR09iamVjdCIsICJHTGliIiwgInNpZ25hbCIsICJHTGliIiwgIkdpbyIsICJHaW8iLCAiR0xpYiIsICJHT2JqZWN0IiwgIkdMaWIiLCAiX2EiLCAiR09iamVjdCIsICJzaWduYWwiLCAidmFsdWUiLCAiR2lvIiwgInNldCIsICJuYW1lIiwgImFyZ3MiLCAiX2EiLCAiYXBwIiwgIkdMaWIiLCAiX2N1cnNvclRoZW1lX2RlYyIsICJfaWNvblRoZW1lX2RlYyIsICJfZ3RrVGhlbWVfZGVjIiwgIl9hIiwgIl9pbml0IiwgIkdpbyIsICJfIiwgInNpZ25hbCIsICJHdGsiLCAiR2RrIiwgIkd0ayIsICJBc3RhbCIsICJHdGsiLCAiR2lvIiwgIkd0ayIsICJzZXR0ZXIiLCAiY3NzIiwgIkdpbyIsICJHdGsiLCAiQXN0YWwiXQp9Cg==

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@
